{"version":3,"sources":["TimerInterface/Table.js","TimerInterface/Scroll.js","TimerInterface/Average.js","TimerInterface/CustomAverage.js","TimerInterface/ScrambleDisplay.js","TimerInterface/CountDown.js","TimerInterface/MobileTimer.js","TimerInterface/HeaderContent.js","TimerInterface/Footer.js","TimerInterface/ButtonTop.js","TimerInterface/ButtonBottom.js","TimerInterface/TimerClock.js","TimerInterface/TimerInterface.js","Dashboard/GraphNumberSolves.js","Dashboard/GraphAverages.js","Dashboard/Card.js","Dashboard/CardList.js","Settings/ImportSolves.js","Settings/ImportManual.js","Settings/DownloadSolves.js","Settings/DownloadCSV.js","Settings/InspectionTime.js","Settings/ChangeAO1.js","Settings/ChangeAO2.js","Settings/Toggles.js","Settings/ChangeUsername.js","Settings/ChangePassword.js","Settings/DeleteAccount.js","Settings/Settings.js","Dashboard/GraphDonut.js","Dashboard/Summary.js","Dashboard/Dashboard.js","NewSessionOptions.js","NewRegister.js","NewSignIn.js","App.js","Scramble.js","serviceWorker.js","index.js"],"names":["compare","a","b","solveid","compare2","Body","props","id","length","finalAverages","solves","sort","loopNumber","aoNum","averageMS","divisor","totalMS","solvesArray","dnfCount","i","isplustwo","push","Number","millisecondstwo","isdnf","milliseconds","pop","shift","finalAverage","hours","Math","floor","minutes","seconds","round","finalAverages2","solves2","loopNumber2","aoNum2","solveNumber","rows","map","row","index","key","className","plustwo","solve","style","color","styles","backgroundColor","borderColor","onClick","removeTime","type","togglePlusTwo","toggleDNFInterface","Table","state","loadingText","loadingAnimated","setState","loadingAnimatedTimeout","setTimeout","loadingAnimated2","loadingAnimatedTimeout2","loadingAnimated3","loadingAnimatedTimeout3","loadingAnimated4","solvesApp","loadingAnimatedTimeout4","this","plusTwo","Component","Scroll","borderTop","isBackgroundLight","borderBottom","isMobile","overflowY","height","children","Average","avgMS","average","avg","CustomAverage","allSolves","String","slice","sortedArray","includes","max","newSortedArray","filter","splice","ScrambleTable","megaminxScramble","Scramble","isDisplayScrambleSmall","isDisplayScrambleMedium","scrambleRegular","multiBLDScramble","CountDown","onTouchEnd","startTimerDuringCountDownMobile","onMouseUp","countDown","MobileTimer","onTouchStart","stopMobile","onMouseDown","stopMobileRoute","isTimerDisabled","timerFormatted","HeaderContent","isMobileGoing","isSignedIn","display","justifyContent","verticalAlign","JSON","parse","localStorage","getItem","marginLeft","marginRight","dashboard","username","signIn","Footer","isSessionName","sessionInterface","sessionName","puzzleType","ButtonTop","isManualEnter","beginMobile","ButtonBottom","marginTop","TimerClock","timeInput","event","target","value","submit","e","keyCode","puzzle","endMS","y","match","z","reverse","number","compareMilliseconds","halfDate","moment","unix","Date","getTime","format","converter","now","minimumTime","solveData","displayTimeFormatted","twoFormatted","sessions","sendToSolves","offline","getInterfaceSolvesSingle","finalSolve","sendToDB","send","setItem","stringify","getSolveFromInterface","final","confettiLaunch","document","getElementById","scramble","input","secondsTwo","paddingBottom","autoComplete","onChange","autoFocus","background","outline","width","fontSize","addEventListener","window","onkeydown","body","newChart","TimerInterface","start","millisecondsTwo","going","preventStartLoop","preventStartLoopMobile","isDisableSpacebar","isCountDownActivated","isCountDownGoing","countingDown","keyPressOne","keyPressTwo","test","disableCommand","beginAfterDelayMobile","beginAfterDelay","isGreen","preventCommand","timerStart","interval","setInterval","time","interval2","interval3","begin","getCountDownNumber","beginFunction","isNewSessionFunction","startTimerDuringCountDown","clearTimeout","countDownGoing","clearInterval","countdownInterval","startTimer","disable","commandFalse","stop","countDownRunFunction","inspectionTime","runCountingDown","countDownRun","delayTimeout","greenTimeout","beginAfterDelaySafety","timerStartMobile","countDownRouteMobile","timerMobileTimeout","doAll","stopMobile2","stopMobile3","interval4","interval5","interval6","countDownRunMobile","changeColor","isFormat","fetch","method","headers","then","response","json","deleteDB","solvesInterface","removeSolveFromSolvesState","newSession","newSessionApp","isConfirmSolveDelete","confirm","removeSolveFromState","removeButtonFocus","removeFocus","getElementsByClassName","blur","removeButtonFocusPlusTwo","removeButtonFocusDNF","togglePlusTwoInterface","xyz","x","temporary","getInterfaceSolves","toggleDNF","colorRegular","keyPressSafetyUndo","keyPressSafety","keyPressStart","keyPressTrue","disableCommandFalse","keyPressSafetyUndoStop","keyPressSafetyStop","keyPressStop","preventCommand1","console","log","stateValue","timeElapsed","position","getTheme","Card","deleteSession","removeSessionFromState","session","solvesToDB","uniqueSession","removeFromSolvesInterface","removeFromSolves","uniqueSessionsDB","indexOf","getSessionNumber","getInterfaceSession","getSessionNameOnLoad","c","loadPastSessionSolveData","removeSessionDB","removeFromUniqueSessionsDB","deleteFunc","runDelete","getSolves","isConfirmSessionDelete","sessionDisplayName","sessionname","date","isCompact","puzzleBest","puzzleWorst","ao5","mo3","ao5BestAndWorst","ao12","ao12BestAndWorst","ao25","ao25BestAndWorst","ao50","ao50BestAndWorst","ao100","ao100BestAndWorst","ao200","ao200BestAndWorst","ao500","ao500BestAndWorst","ao1000","ao1000BestAndWorst","ao5000","ao5000BestAndWorst","ao10000","ao10000BestAndWorst","ind","CardList","checkIsCompact","checked","ao","timesMS","bestWorstAverage","averagesMS","bestAndWorst","min","solvesSorted","rawDate2","rawDate3","rawDate4","uniqueSessions","solve2","Object","keys","interfaceSession","solvenumber","rawDate","GraphNumberSolves","chartRef","React","createRef","indexNumber","solvesChart","myChartRef","current","getContext","destroy","Chart","data","labels","dates","timePeriod","indexNumberGraphs","datasets","label","numberSolves","pointRadius","options","events","title","text","fontColor","responsive","scales","xAxes","unit","displayFormats","distribution","gridLines","ticks","yAxes","beginAtZero","maxTicksLimit","stepSize","legend","ref","ImportSolves","isIncorrectFormat","jsonError","err","importLoop","sessionArray","importSolves","propertiesArray","values","values1","solve1","solveToDB","msTwo","hoursTwo","minutesTwo","timeTwo","abc2","dateString","toISOString","getSolvesFromImport","addToUniqueSessionsDB","manageSolveData","handleButtonClick","handleImportSolvesSubmit","test1","sessionNumber","isImportFromFile","handleImportSolvesChange","cols","isImportFromFileFunc","ImportManual","count","pastSessionName","pastPuzzle","pastDate","isDateWrong","isSolveEntered","isTimeWrong","getSession","result","tempSession","importManualTextAreaName","prevState","ms","timeFormatted","one","two","three","four","msTwoFinal","solvesToAppState","multiScramble","split","letter","getSolvesFromImportManual","handleImportManualSubmit","isManual","handleImportManualTimeChange","handleImportManualScrambleChange","handleImportManualDateChange","handleImportManualNameChange","getPuzzleType","isManualFunc","DownloadSolves","formattedSolves","finalOutput","download","filename","element","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","getSolvesFromDashboard","masterObject","sessionData","objTest","solveArray","export2csv","tableData","rowData","column","join","href","URL","createObjectURL","Blob","sortedSolves","header","date2","substring","InspectionTime","placeholder","inspectionTimeToState","changeInspectionTime","inspectionTimeFromState","isInspectionSubmitted","isInvalidInspection","ChangeAO1","aoNumInput","aoNumChange","aoNumState","isAoSubmitted","isInvalidAoNum","ChangeAO2","aoNumInput2","aoNumChange2","aoNumState2","isAoSubmitted2","isInvalidAoNum2","Toggles","htmlFor","isConfirmSolve","isConfirmSession","isDisableTimer","offlineConfirm","didOnlineSyncWork","isSyncUnsuccessful","didOfflineSyncWork","isUploading","isDownloading","ChangeUsername","usernameExists","isUsernameChanged","changeUsername","ChangePassword","oldPassword","newPassword","newPasswordReenter","isPasswordChanged","isWrongPassword","isPasswordMatch","changePassword","DeleteAccount","deleteAccountPassword","isWrongPassword2","deleteAccountConfirm","Settings","importSolvesTextArea","importManualTextAreaTime","importManualTextAreaScramble","importManualTextAreaDate","aonumber","aonumber2","inspection","confirmSolveDelete","mobileStartStop","manualEnter","confirmSessionDelete","disableTimer","getOffline","offlineCount","offlineDifference","summary","offlinesolves","navigator","onLine","theme","confirmsession","confirmsolve","inspectiontime","mobile","disabletimer","alert","removeItem","solvesOffline","allsolves","getManualEnterOnMount","manualenter","getMobileOnMount","getConfirmSessionOnMount","solveconfirm","getDisableTimerOnMount","getConfirmSolveOnMount","selectedIndex","deleteAccount","user","themeToDB","signout","getAveragesMS","DownloadCSV","getCategories","textAlign","minutesToHours","secondsTotal","Graph","changeData","optionsArray","categories","selectbox","option","newOption","add","optionsTimePeriod","changeIndexNumber","changeTimePeriod","testArray","Set","averages","buildChart","userCallback","item","Donut","puzzles","numberSolvesCategory","animation","Summary","columns","th","td","Dashboard","isAnalytics","sessionsDBunique","datesWeek","datesMonth","datesYear","allDates","datesDBunique","averagesWeek","averagesMonth","averagesYear","allDateAverages","dateAverages","isSolves","categoryDates","cardSortValue","optionSelected","countNumberSolves","countNumberSolvesWeek","countNumberSolvesMonth","countNumberSolvesYear","allCounts","puzzlesSummary","solvesSortedCardList","sortSolves","sortDates","sortCategories","getPuzzles","sortPuzzles","consolidateAllDatesAndSolves","getBestTimes","allSessions","solvesByUnix","compareUnix","threshold","uniqueDates","sessionsDBuniqueInOrder","bestTimes","worstTimes","times","solvesInOrder","lowestMS","highestMS","numberSolvesWeek","numberSolvesMonth","numberSolvesYear","masterArray","numberSolvesWeekCount","numberSolvesMonthCount","numberSolvesYearCount","dateAverage","Array","from","category","categorySolves","categoryDatesWeek","categorySolvesWeek","solvesWeek","categoryDatesMonth","categorySolvesMonth","solvesMonth","categoryDatesYear","categorySolvesYear","solvesYear","totalMSWeek","countWeek","totalMSMonth","countMonth","totalMSYear","countYear","toFixed","averageWeek","averageMonth","averageYear","allPuzzles","puzzlesWeek","puzzlesMonth","puzzlesYear","numberSolvesCategoryAllTime","numberSolvesCategoryWeek","numberSolvesCategoryMonth","numberSolvesCategoryYear","puzzleSolves","puzzleDates","puzzleSolvesWeek","puzzleDatesWeek","puzzleSolvesMonth","puzzleDatesMonth","puzzleSolvesYear","puzzleDatesYear","countNumberSolvesCategory","countNumberSolvesCategoryWeek","countNumberSolvesCategoryMonth","countNumberSolvesCategoryYear","puzzleBestTimesSummary","timesAndPuzzle","allTimesMS","allTimes","finalAveragesWeek","finalAveragesMonth","finalAveragesYear","allMS","allMSWeek","allMSMonth","allMSYear","solvesArrayWeek","solvesArrayMonth","solvesArrayYear","array1","newUsername","getNewUsername","loadUser","usernameChanged","password","signedIn","sessionStorage","dark","light","res","analytics","settings","solvesRoute","optionSelectOnMount","array2","val","sel","opts","counter","j","averageArray","msTotal","compact","offlineState","scrambleQuantityMinus","scrambleQuantityPlus","inspectionTimePlus","inspectionTimeMinus","scrambleQuantity","NewSessionOptions","clearScramble","sessionLength","createNewSession","clearSessionInterfaceSolves","sessionNameOnChange","isNewSession","sessionOnChange","Register","name","isUserExist","isNameLengthWrong","isPassWordLengthWrong","ceil","random","typeCharacter","clearSolvesState","register","SignIn","isWrongUsername","isSigningIn","submitWithEnter","timeout","App","isHome","isRegistered","isDashboard","isCreateNewSession","isOffline","isGetSolvesOnMount","receive","addToUniqueSessionsDBOnMount","apply","parsedData","getSolvesOnMountPrevent","getUserInfo","scramblelength","confirmSession","confirmSolve","getAllSolves","setScrambleLength","scrambleLength","boolean","concat","fire","particleRatio","defaults","origin","decay","angle","confetti","assign","particleCount","spread","startVelocity","tempSolves","get","usertemp","isSessionNameFunc","twotwo","twothree","fourbyfour","fourfive","sixseven","pyraminxNotation","pyraminxNotationEnd","skewb","pastScrambles","pastScramble","pastScramble2","pyraminxEnd","fourfour","first2","second2","twofour","onefour","second","first","d","f","g","h","end","endOptions","clockPuzzle","arrayTop","arrayBottom","topRunningTotal","bottomRunningTotal","valueTop3","valueTop4","valueBottom4","scrambleEnd","scrambleOptions","scrambleOptions2","letters","chance","multiBLD","pastScrambleObj","countMultiBLD","i2","ind2","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","process","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.42aa7638.chunk.js","sourcesContent":["import React, { Component } from \"react\" \n\nconst compare = (a, b) => {\n    if (a.solveid > b.solveid){\n        return -1\n    }\n    if (a.solveid < b.solveid){\n        return 1\n    }\n    return 0\n}\n\nconst compare2 = (a,b) => {\n    return a-b\n}\n\nconst Body = (props) => {\n    let id \n    if (props.id.length){\n        id=true\n    }else{\n        id=false\n    }\n    let finalAverages = []\n    let solves = [...props.solves].sort(compare)\n    let loopNumber = props.solves.length - (props.aoNum-1)\n    while(loopNumber>0){\n        let divisor = 0\n        let totalMS = 0\n        let solvesArray = []\n        let averageMS = 0\n        let dnfCount = 0\n        for (let i = 0; i < props.aoNum; i++){\n            divisor++\n            if(solves[i].isplustwo){\n                solvesArray.push(Number(solves[i].millisecondstwo))\n            }else if (solves[i].isdnf) {\n                dnfCount++\n            }else{\n                solvesArray.push(Number(solves[i].milliseconds))\n            }\n        }\n        solvesArray.sort(compare2)\n        if(dnfCount===0){\n            solvesArray.pop()\n        }\n        solvesArray.shift()\n        for (const milliseconds of solvesArray){\n            totalMS += Number(milliseconds)\n        }\n        loopNumber--\n        averageMS = totalMS / (divisor-2)\n        solves.shift()  \n        let finalAverage = \"\"\n        if(dnfCount>1){\n            finalAverage+=\"DNF\"\n        }else{\n            let hours = Math.floor((averageMS / 3600000))\n            let minutes = Math.floor((averageMS / 60000)%60)\n            let seconds = Math.floor((averageMS / 1000)%60)\n            let milliseconds = Math.round(averageMS % 1000)\n            finalAverage = \"\"\n            if (hours > 0){\n                finalAverage += hours +\":\"\n            }\n            if (minutes > 0){\n                finalAverage += minutes +\":\"\n                if(seconds<10){\n                    finalAverage+=\"0\"\n                }\n            }\n            finalAverage += seconds + \".\"\n            if (milliseconds < 10){\n                finalAverage += \"00\"\n            }\n            if (milliseconds < 100){\n                if (milliseconds > 9){\n                    finalAverage += \"0\"\n                }\n            }\n            finalAverage += milliseconds\n        }\n        finalAverages.push(finalAverage)\n    }\n\n\n\n    let finalAverages2 = []\n    let solves2 = [...props.solves].sort(compare)\n    let loopNumber2 = props.solves.length - (props.aoNum2-1)\n    while(loopNumber2>0){\n        let divisor = 0\n        let totalMS = 0\n        let solvesArray = []\n        let averageMS = 0\n        let dnfCount = 0\n        for (let i = 0; i < props.aoNum2; i++){\n            divisor++\n            if(solves2[i].isplustwo){\n                solvesArray.push(Number(solves2[i].millisecondstwo))\n            }else if (solves2[i].isdnf) {\n                dnfCount++\n            }else{\n                solvesArray.push(Number(solves2[i].milliseconds))\n            }\n        }\n        solvesArray.sort(compare2)\n        if(dnfCount===0){\n            solvesArray.pop()\n        }\n        solvesArray.shift()\n        for (const milliseconds of solvesArray){\n            totalMS += Number(milliseconds)\n        }\n        loopNumber2--\n        averageMS = totalMS / (divisor-2)\n        solves2.shift()  \n        let finalAverage = \"\"\n        if(dnfCount>1){\n            finalAverage+=\"DNF\"\n        }else{\n            let hours = Math.floor((averageMS / 3600000))\n            let minutes = Math.floor((averageMS / 60000)%60)\n            let seconds = Math.floor((averageMS / 1000)%60)\n            let milliseconds = Math.round(averageMS % 1000)\n            finalAverage = \"\"\n            if (hours > 0){\n                finalAverage += hours +\":\"\n            }\n            if (minutes > 0){\n                finalAverage += minutes +\":\"\n                if(seconds<10){\n                    finalAverage+=\"0\"\n                }\n            }\n            finalAverage += seconds + \".\"\n            if (milliseconds < 10){\n                finalAverage += \"00\"\n            }\n            if (milliseconds < 100){\n                if (milliseconds > 9){\n                    finalAverage += \"0\"\n                }\n            }\n            finalAverage += milliseconds\n        }\n        \n        finalAverages2.push(finalAverage)\n    }\n    \n    \n    let solveNumber = props.solves.length \n    const rows = props.solves.sort(compare).map((row, index) => {\n        solveNumber --\n        return (\n            <tr key={index}>\n                <td className=\"tableIndex\"><h2>{solveNumber+1 +  \".\"}</h2></td>\n                {row.isplustwo \n                ? \n                <td><h2>{row.plustwo}</h2></td>\n                :\n                <td><h2>{row.solve}</h2></td>\n                }\n                <td><h2>\n                    <button style={{color: props.styles ? \"rgb(23, 23, 23)\" : \"whitesmoke\", \n                    backgroundColor: props.styles ? \"whitesmoke\" : \"rgb(23, 23, 23)\", \n                    borderColor: props.styles ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} \n                    className=\"button2 remove\" onClick={row.isplustwo ? ()=>props.removeTime(index, row.solveid, row.milliseconds, row.plustwo, (props.solves.length - index) +  \".\") : ()=>props.removeTime(index, row.solveid, row.milliseconds, row.solve, (props.solves.length - index) +  \".\")}>Remove</button>\n                \n                </h2></td>\n                <td><h2>\n                    <button type=\"button\" style={{color: \n                    props.styles \n                        ? \n                        (row.isplustwo ? \"whitesmoke\":\"rgb(23, 23, 23)\" )\n                        : \n                        (row.isplustwo ?\"rgb(23, 23, 23)\":\"whitesmoke\" ), \n                    backgroundColor: props.styles \n                        ? \n                        (row.isplustwo ? \"rgb(23, 23, 23)\" : \"whitesmoke\")\n                        : \n                        (row.isplustwo ? \"whitesmoke\" : \"rgb(23, 23, 23)\"), \n                    borderColor: props.styles \n                        ? \n                        (row.isplustwo ? \"whitesmoke\": \"rgb(23, 23, 23)\" )\n                        : \n                        (row.isplustwo ?\"rgb(23, 23, 23)\":\"whitesmoke\") }} \n                    className=\"button2 remove2\" onClick={()=>props.togglePlusTwo(row.solveid)}>+2</button>\n                </h2></td>\n\n                <td><h2>\n                <button style={{color: props.styles \n                        ? \n                        (row.isdnf ? \"whitesmoke\":\"rgb(23, 23, 23)\" )\n                        : \n                        (row.isdnf ? \"rgb(23, 23, 23)\":\"whitesmoke\" ), \n                    backgroundColor: props.styles \n                        ? \n                        (row.isdnf ? \"rgb(23, 23, 23)\" : \"whitesmoke\")\n                        : \n                        (row.isdnf ? \"whitesmoke\"  : \"rgb(23, 23, 23)\"), \n                    borderColor: props.styles \n                        ? \n                        (row.isdnf ? \"whitesmoke\" : \"rgb(23, 23, 23)\" )\n                        : \n                        (row.isdnf ? \"rgb(23, 23, 23)\": \"whitesmoke\" ) }}  \n                    className=\"button2 remove3\" onClick={()=>props.toggleDNFInterface(row.solveid)}>DNF</button>\n                </h2></td>\n\n                {id ? \n                <td><h2>\n                    {finalAverages[index]}\n                </h2></td>\n                :\n                <td> </td>\n                }\n                {id ? \n                <td><h2>\n                    {finalAverages2[index]}\n                </h2></td>\n                :\n                <td> </td>\n                }\n            </tr>\n        )\n    })\n    return <tbody>{rows}</tbody>\n}\n\nclass Table extends Component {\n\n    state = {\n        loadingText: \"Loading\"\n    }\n\n    loadingAnimated = () => {\n        if (this.state.loadingText===\"Loading\"){\n            this.setState({\n                loadingText: \"Loading.\"\n            })\n        }\n        this.loadingAnimatedTimeout = setTimeout(()=> this.loadingAnimated2(), 600)\n    }\n\n    loadingAnimated2 = () => {\n        if (this.state.loadingText===\"Loading.\"){\n            this.setState({\n                loadingText: \"Loading..\"\n            })\n        }\n        this.loadingAnimatedTimeout2 = setTimeout(()=> this.loadingAnimated3(), 600)\n    }\n\n    loadingAnimated3 = () => {\n        if (this.state.loadingText===\"Loading..\"){\n            this.setState({\n                loadingText:\"Loading...\"\n            })\n        }\n        this.loadingAnimatedTimeout3 = setTimeout(()=> this.loadingAnimated4(), 600)\n    }\n\n    loadingAnimated4 = () => {\n        if(this.props.solvesApp===\"loading...\"){\n            if (this.state.loadingText===\"Loading...\"){\n                this.setState({\n                    loadingText: \"Loading\"\n                })\n            }\n            this.loadingAnimatedTimeout4 = setTimeout(()=> this.loadingAnimated(), 600)\n        }\n    }\n \n    componentDidMount() {\n        this.loadingAnimated()\n    }\n\n    render(){\n        return(\n        this.props.solvesApp===\"loading...\" ? \n        <h1 className=\"light\">{this.state.loadingText}</h1>\n        :\n            <table id=\"hello\" className=\"light\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th></th>\n                        <th></th>\n                        <th></th>\n                        <th></th>\n                        {this.props.id.length>2 ? \n                        (\n                        this.props.solves.length > this.props.aoNum-1 ? \n                        <th>\n                            <h2>ao{this.props.aoNum}</h2>\n                        </th>\n                        :\n                        <th></th>\n                        )\n                        :\n                        <th></th>\n                        }\n                        {this.props.id.length ? \n                        (\n                        this.props.solves.length>this.props.aoNum2-1 ? \n                        <th>\n                            <h2>ao{this.props.aoNum2}</h2>\n                        </th>\n                        :\n                        <th></th>\n                        )\n                        :\n                        <th></th>\n                        }\n                        </tr>\n                </thead>\n                <Body \n                solvesApp={this.props.solvesApp}\n                id={this.props.id}\n                aoNum={this.props.aoNum}\n                aoNum2={this.props.aoNum2}\n                toggleDNFInterface={this.props.toggleDNFInterface}\n                togglePlusTwo={this.props.togglePlusTwo}\n                plusTwo={this.props.plusTwo} \n                solves={this.props.solves} \n                removeTime={this.props.removeTime} \n                styles={this.props.styles}\n                />\n            </table>\n        )\n    }\n}\n\n// const Table = props => {\n//     const {solves, removeTime, plusTwo} = props\n//     return(\n//     props.solvesApp===\"loading...\" ? \n//     <h1 className=\"light\">Loading...</h1>\n//     :\n//         <table id=\"hello\" className=\"light\">\n//             <thead>\n//                 <tr>\n//                     <th></th>\n//                     <th></th>\n//                     <th></th>\n//                     <th></th>\n//                     <th></th>\n//                     {props.id.length>2 ? \n//                     (\n//                     props.solves.length > props.aoNum-1 ? \n//                     <th>\n//                         <h2>ao{props.aoNum}</h2>\n//                     </th>\n//                     :\n//                     <th></th>\n//                     )\n//                     :\n//                     <th></th>\n//                     }\n//                     {props.id.length ? \n//                     (\n//                     props.solves.length>props.aoNum2-1 ? \n//                     <th>\n//                         <h2>ao{props.aoNum2}</h2>\n//                     </th>\n//                     :\n//                     <th></th>\n//                     )\n//                     :\n//                     <th></th>\n//                     }\n//                     </tr>\n//             </thead>\n//             <Body \n//             solvesApp={props.solvesApp}\n//             id={props.id}\n//             aoNum={props.aoNum}\n//             aoNum2={props.aoNum2}\n//             toggleDNFInterface={props.toggleDNFInterface}\n//             togglePlusTwo={props.togglePlusTwo}\n//             plusTwo={plusTwo} \n//             solves={solves} \n//             removeTime={removeTime} \n//             styles={props.styles}\n//             />\n//         </table>\n//     )\n// }\n\n\nexport default Table","import React from \"react\"\n\nconst Scroll = (props) => {\n    return(\n    <div style={{borderTop: props.isBackgroundLight ? \"rgb(23, 23, 23) .1px solid\" : \"whitesmoke .1px solid\",  borderBottom: props.isBackgroundLight ? \"rgb(23, 23, 23) .1px solid\" : \"whitesmoke .1px solid\"}}>\n        {props.isMobile ? \n        <div id=\"scroll\" className=\"scroll\" style={{overflowY:\"scroll\", height:\"170px\"}}>{props.children}</div>\n        :\n        <div id=\"scroll\" className=\"scroll\" style={{overflowY:\"scroll\"}}>{props.children}</div>\n        }\n    </div>\n    )\n}\n\nexport default Scroll","import React from \"react\";\n\nconst Average = (props) => {\n    var totalMS = 0\n    var divisor = 0\n    var avgMS = 0\n    var average = \"0.000\"\n    const avg = props.solves.map(solve=>{\n        if (solve.isdnf){\n            // dnfDivisor ++\n        }\n        if (solve.isplustwo && !solve.isdnf){\n            totalMS += Number(solve.millisecondstwo)\n            divisor += 1\n        }else if(solve.isdnf){\n            totalMS += 0\n        }else{\n            totalMS += Number(solve.milliseconds)\n            divisor += 1\n        }\n        return(null)\n    })\n    if (divisor > 0){\n        if (divisor !== 0){\n            avgMS = (totalMS/divisor)\n        }\n        var hours = Math.floor((avgMS / 3600000))\n        var minutes = Math.floor((avgMS / 60000)%60)\n        var seconds = Math.floor((avgMS / 1000)%60)\n        var milliseconds = Math.round(avgMS % 1000)\n        average = \"\"\n        if (avgMS > 3600000){\n            average += hours +\":\"\n        }\n        if (avgMS > 60000){\n            average += minutes +\":\"\n            if (seconds<10){\n                average += 0\n            }\n        }\n        average += seconds + \".\"\n        if (milliseconds < 10){\n            average += \"00\"\n        }\n        if (milliseconds < 100){\n            if (milliseconds > 9){\n                average += \"0\"\n            }\n        }\n        average += milliseconds\n    }\n    if (divisor >= 0){\n        return(\n            <div id=\"average\"><h2>\n                Average: {average}\n            </h2></div>\n        )\n    } \n    if (divisor === 0){\n        return(\n            <div id=\"average\"><h2>\n                Average: 0.000\n            </h2></div>\n        )\n    }\n    if (divisor===-1){\n        return({avg})\n    } \n}\n\n\nexport default Average","import React from \"react\"\n\nfunction compare(a,b) {\n    return a-b\n}\n\nconst CustomAverage = props => {\n    const { solves } = props\n    var divisor = 0\n    var solvesArray = []\n    var totalMS = 0\n    let dnfCount = 0\n    var average = \"\"\n    let allSolves = []\n    \n    solves.map(solve=>{\n        if(solve.isplustwo){\n            allSolves = [...allSolves, String(solve.millisecondstwo)]\n        }else{\n            allSolves = [...allSolves, String(solve.milliseconds)]\n        }\n        if (solve.isdnf){\n            solvesArray = [...solvesArray, \"dnf\"]\n        }else if (solve.isplustwo && (!solve.isdnf)){\n            solvesArray = [...solvesArray, String(solve.millisecondstwo)]\n            divisor++\n        }else{\n            solvesArray = [...solvesArray, String(solve.milliseconds)]\n            divisor++\n        }\n        return(null)\n    })\n    allSolves = allSolves.slice(0,props.aoNum).sort(compare)\n    if (solves.length > props.aoNum-1) {\n        divisor = props.aoNum-2\n    }\n    const sortedArray = solvesArray.slice(0,props.aoNum).sort(compare)\n    if (sortedArray.includes(String(Math.max(...allSolves)))){\n        let newSortedArray = sortedArray.filter(solve=>{\n            if (solve === \"dnf\"){\n                dnfCount++\n            }\n            return(solve !== \"dnf\")\n        })\n        if (solves.length>props.aoNum-1){\n            newSortedArray.splice(0,1)\n            newSortedArray.splice(props.aoNum-2,1)  \n        }\n        newSortedArray.map((solve) => {\n            totalMS += Number(solve)\n            return(null)  \n        })\n        if(divisor > 0){\n            totalMS = totalMS/divisor\n        }\n    }else{\n        let newSortedArray = sortedArray.filter(solve=>{\n            if (solve === \"dnf\"){\n                dnfCount++\n            }\n            return(solve !== \"dnf\")\n        })\n        if (solves.length>props.aoNum-1){\n            newSortedArray.splice(0,1)\n            // sortedArray.splice(props.aoNum-2,1)\n            \n        }\n        newSortedArray.map((solve) => {\n            totalMS += Number(solve)\n            return(null)  \n        })\n        if(divisor > 0){\n            totalMS = totalMS/divisor\n        }\n    }\n\n    \n    var hours = Math.floor((totalMS / 3600000))\n    var minutes = Math.floor((totalMS / 60000)%60)\n    var seconds = Math.floor((totalMS / 1000)%60)\n    var milliseconds = Math.round(totalMS % 1000)\n    if (totalMS > 3600000){\n        average += hours +\":\"\n    }\n    if (totalMS > 60000){\n        average += minutes +\":\"\n        if (seconds<10){\n            average += 0\n        }\n    }\n    average += seconds + \".\"\n    if (milliseconds < 10){\n        average += \"00\"\n    }\n    if (milliseconds < 100){\n        if (milliseconds > 9){\n            average += \"0\"\n        }\n    }\n    average += milliseconds\n\n    if (dnfCount<2){\n        return(\n        <div id=\"average\">\n            <h2>\n                ao{props.aoNum}: {average}\n            </h2>\n        </div>\n        )\n    }else{\n        return(\n            <div id=\"average\">\n                <h2>\n                    ao{props.aoNum}: DNF\n                </h2>\n            </div>\n            )\n    }\n}\n\nexport default CustomAverage","import React from \"react\"\n\nconst ScrambleTable = props => {\n    return(\n    <table >\n      <tbody >\n        <tr >\n          <td><h4 className=\"display-linebreak megaminx megaminxSmallInterfaceScramble\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\"}}>{props.megaminxScramble}</h4></td>\n        </tr>\n      </tbody>\n    </table>\n    )\n}\n\nconst Scramble = props => {\n    return(\n        <div className=\" display-linebreak\">\n            {props.isDisplayScrambleSmall ? \n            (props.isDisplayScrambleMedium ? \n              <div className=\"tc medium-text\">\n                {props.scrambleRegular}\n              </div>\n              :\n              <div className=\"tc small-text\">\n              <h4 className=\"tc\">{props.scrambleRegular}</h4> \n              </div>\n            )\n            :\n            <h3 className=\"tc\">{props.scrambleRegular}</h3>\n            }\n            <div className=\"summary-center\">\n              <ScrambleTable \n              isBackgroundLight={props.isBackgroundLight}\n              megaminxScramble={props.megaminxScramble}\n              />\n            </div>\n            <h4 className=\"display-linebreak tc\">{props.multiBLDScramble}</h4>\n        </div>\n    )\n}\n\nexport default Scramble","import React from \"react\"\n\nconst CountDown = props => {\n    return(\n        <div onTouchEnd={props.startTimerDuringCountDownMobile} onMouseUp={props.startTimerDuringCountDownMobile}  className=\"height-width\">\n            <h5 className=\"absolute-center\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\"}}>{props.countDown}</h5>\n        </div>\n    )\n}\n\nexport default CountDown","import React from \"react\"\n\nconst MobileTimer = props => {\n    return(\n        <div onTouchStart={props.stopMobile} onMouseDown={props.stopMobile} onTouchEnd={props.stopMobileRoute} onMouseUp={props.stopMobileRoute} className=\"height-width\">\n            {props.isTimerDisabled ? \n              <h1 className=\"absolute-center disable-timer-mobile\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\"}}> TAP TO STOP </h1>\n            :\n            <h1 className=\"absolute-center\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\"}}> {props.timerFormatted} </h1>\n            }\n        </div>\n    )\n}\n\nexport default MobileTimer","import React from \"react\"\n\nconst HeaderContent = props => {\n    return(\n        props.isMobileGoing ? \n        <h1> </h1>\n        :\n        <div>\n        {props.isSignedIn \n        ? <div id=\"padRight\">\n            <nav style={{display: 'flex', justifyContent: 'space-between', verticalAlign:\"middle\"}}>\n        {JSON.parse(localStorage.getItem(\"offline\")) ? \n            <div style={{ marginLeft:\"4%\",}}>\n                <h1><button className=\"button-no-border\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>OFFLINE</button></h1>\n            </div>\n            :\n            <h1> </h1>\n            }\n            <div style={{ marginRight:\"1%\",}}>\n                <h1><button onClick={props.dashboard} style={{ color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\">{props.username} | DASHBOARD</button></h1>\n            </div>   \n            </nav>\n        </div>\n        :\n        <nav style={{display: 'flex', justifyContent: 'flex-end',}}>\n            <div style={{marginRight:\"6%\",}}>\n            <h1><button onClick={props.signIn} style={{ color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\">Sign In</button></h1>  \n            </div>\n        </nav>\n        }\n        </div>    \n    )\n}\n\nexport default HeaderContent","import React from \"react\"\n\nconst Footer = (props) => {\n    return(\n        <div className=\"padding-footer\">\n            {\n            props.isSessionName \n            ?\n            (props.id\n            ? \n            <div id=\"average\">\n                <h2>Session: {props.sessionInterface} | {props.sessionName} | {props.puzzleType}</h2>\n            </div>\n            :\n            <h2> </h2>)\n            :\n            (props.id\n                ? \n                <div id=\"average\">\n                <h2>Session: {props.sessionInterface} | {props.puzzleType} </h2>\n                </div>\n                :\n            <h2> </h2>)\n            }\n        </div>\n    )\n}\n\nexport default Footer","import React from \"react\"\n\nconst ButtonTop = (props) => {\n    return(\n        !props.isManualEnter ? \n            props.isMobileGoing ? \n            <h1> </h1>\n            : \n            (props.isMobile ? \n            <div onMouseUp={props.beginMobile} onTouchStart={()=>props.color()} onMouseDown={()=>props.color()} onTouchEnd={props.beginMobile}   className=\"pointer button-no-select hide-button summary-center button-no-select\">\n                <button id=\"colorClick\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"start-button timer-text-start button-no-select \"></button>\n                {/* <h5 className=\"hide-button summary-center button-no-select\"><button id=\"colorClick\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"start-button timer-text-start button-no-select \"></button></h5> */}\n            </div>\n            :\n            <div onMouseUp={props.beginMobile} onTouchStart={()=>props.color()} onMouseDown={()=>props.color()} onTouchEnd={props.beginMobile}   className=\"pointer hide-button  timerButton summary-center button-no-select\">\n                <button id=\"colorClick\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"start-button timer-text-start\"></button>\n                {/* <h5 className=\"hide-button  timerButton summary-center button-no-select\"><button id=\"colorClick\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"start-button timer-text-start\"></button></h5> */}\n            </div>\n            ) \n        :\n            <div></div>\n    )\n}\n\nexport default ButtonTop","import React from \"react\"\n\nconst ButtonBottom = (props) => {\n    return(\n        !props.isManualEnter ? \n            props.isMobile ? \n            <div onMouseUp={props.beginMobile} onTouchStart={()=>props.color()} onMouseDown={()=>props.color()} onTouchEnd={props.beginMobile}   className=\"pointer button-no-select not-hide-button summary-center button-no-select\">\n                <button id=\"colorClick2\"  style={{marginTop:\"5%\", color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"start-button timer-text-start\"></button>\n            </div>\n            :\n            <div onMouseUp={props.beginMobile} onTouchStart={()=>props.color()} onMouseDown={()=>props.color()} onTouchEnd={props.beginMobile}   className=\"pointer button-no-select not-hide-button timerButton summary-center button-no-select \">\n                <button id=\"colorClick2\"  style={{marginTop:\"5%\", color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"start-button timer-text-start \"></button>\n            </div>\n        :\n        <div></div>\n    )\n}\n\nexport default ButtonBottom","import React, { Component } from \"react\"\nimport moment from \"moment\"\n\nclass TimerClock extends Component{\n\n    state = {\n        timeInput: \"\"\n    }\n\n\n    timeInput = (event) => {\n        this.setState({\n            timeInput: event.target.value\n        })\n    }\n\n    converter(input) {\n        const hours = Math.floor(input / 3600000)\n        const minutes = Math.floor((input / 60000)%60)\n        const seconds = Math.floor((input / 1000)%60)\n        const milliseconds = (input % 1000)\n        this.setState({\n          hours: hours,\n          minutes: minutes, \n          secondsTwo: seconds, \n          seconds: seconds,\n          milliseconds: milliseconds,\n        })\n    }\n\n    submit = (e) => {\n        if (e.keyCode===13) {\n            let allSolves = []\n            for (const solve of this.props.solves){\n                if (solve.puzzle === this.props.puzzleType){\n                allSolves.push(solve.milliseconds)\n                }\n            }\n            \n            let endMS=0\n            var x = this.state.timeInput\n            var y = x.match(/\\d+/g)\n            if(y!==null){\n                var z = y.slice().reverse()\n            }\n            if(z){\n                if(z.length>0){\n                    z.map((number, index) =>{\n                        if(index===0){\n                            if (number.length===1){\n                                endMS+=number*100\n                            }\n                            if (number.length===2){\n                                endMS+=number*10\n                            }\n                            if (number.length===3){\n                                endMS+=number*1\n                            }\n                        }\n                        if(index===1){\n                            endMS+=number*1000\n                        }\n                        if(index===2){\n                            endMS+=number*60000\n                        }\n                        if(index===3){\n                            endMS+=number*3600000\n                        }\n                        return(null)\n                    })\n                    allSolves.sort(this.compareMilliseconds)\n                    let halfDate = moment.unix(Math.round(new Date().getTime() / 1000)).format(\"YYYY-MM-DD\");\n                    this.props.converter(endMS, true)\n                    let solveid = \"\"\n                    solveid+=Date.now()\n                    let minimumTime = 0\n                    if (this.props.puzzleType===\"3x3\"){\n                        minimumTime=1100\n                    }\n                    if (this.props.puzzleType===\"5x5\" || this.props.puzzleType===\"6x6\"\n                    || this.props.puzzleType===\"7x7\"){\n                        minimumTime=10000\n                    }\n                    if (this.props.puzzleType===\"3x3 OH\" || this.props.puzzleType===\"Megaminx\"){\n                        minimumTime=2000\n                    }\n                    if (this.props.puzzleType===\"Clock\"){\n                        minimumTime=500\n                    }\n                    if (this.props.puzzleType===\"Square-1\"||this.props.puzzleType===\"4x4 BLD\"){\n                        minimumTime=1000\n                    }\n                    if (this.props.puzzleType===\"5x5 BLD\" || this.props.puzzleType===\"4x4\"||this.props.puzzleType===\"3x3 BLD\"){\n                        minimumTime=4000\n                    }\n                    let unix = Math.round(new Date().getTime() / 1000)\n                    \n                    const solveData = {}\n                    solveData[\"id\"] = this.props.id\n                    solveData[\"solve\"] = this.props.displayTimeFormatted\n                    if (this.props.puzzleType===\"Megaminx\"){\n                        solveData[\"scramble\"] = this.props.megaminxScramble \n                    }else if (this.props.puzzleType===\"Multi-BLD\"){\n                        solveData[\"scramble\"] = this.props.multiBLDScramble\n                    }else{\n                        solveData[\"scramble\"] = this.props.scrambleRegular\n                    }\n                    solveData[\"milliseconds\"] = String(endMS)\n                    solveData[\"isplustwo\"] = false\n                    solveData[\"isdnf\"] = false\n                    solveData[\"date\"] = halfDate\n                    solveData[\"solveid\"] = solveid\n                    solveData[\"plustwo\"] = this.props.twoFormatted\n                    solveData[\"millisecondstwo\"]= String(endMS + 2000)\n                    solveData[\"session\"] = this.props.sessions\n                    solveData[\"unix\"] = String(unix)\n                    solveData[\"puzzle\"] = this.props.puzzleType\n                    solveData[\"sessionname\"]=this.props.sessionName\n                    solveData[\"temporary\"] = true\n                    this.props.sendToSolves([solveData, ...this.props.solves])\n                    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n                    this.props.getInterfaceSolvesSingle(solveData)\n            \n                    const finalSolve = {}\n                    finalSolve[\"id\"] = this.props.id\n                    finalSolve[\"solve\"] = this.props.displayTimeFormatted\n                    if (this.props.puzzleType===\"Megaminx\"){\n                        finalSolve[\"scramble\"] = this.props.megaminxScramble\n                    }else if (this.props.puzzleType===\"Multi-BLD\"){\n                        finalSolve[\"scramble\"] = this.props.multiBLDScramble\n                    }else{\n                        finalSolve[\"scramble\"] = this.props.scrambleRegular\n                    }\n                    finalSolve[\"milliseconds\"] = String(endMS)\n                    finalSolve[\"isplustwo\"] = false\n                    finalSolve[\"isdnf\"] = false\n                    finalSolve[\"date\"] = halfDate\n                    finalSolve[\"solveid\"] = solveid\n                    finalSolve[\"plustwo\"] = this.props.twoFormatted\n                    finalSolve[\"millisecondstwo\"]=String(endMS + 2000)\n                    finalSolve[\"session\"] = this.props.sessions\n                    finalSolve[\"unix\"] = String(unix)\n                    finalSolve[\"puzzle\"] = this.props.puzzleType\n                    finalSolve[\"sessionname\"]=this.props.sessionName\n                    let sendToDB = [...this.props.solvesApp, finalSolve]\n                    this.props.send(sendToDB)\n                    if(offline){\n                        localStorage.setItem(\"offlinesolves\", JSON.stringify({\"solves\": [...sendToDB]}))\n                    }\n                    setTimeout(()=>this.props.getSolveFromInterface(finalSolve),10)\n                    if (this.state.final < allSolves[0] && endMS > minimumTime){\n                        if(allSolves.length>75){\n                        this.props.confettiLaunch()\n                        }\n                    }\n                    document.getElementById(\"manualInput\").value=\"\"\n                    this.props.scramble(this.props.puzzleType)\n                    this.setState({\n                        timeInput: \"\"\n                    })\n                }\n            }\n        }  \n      }\n\n      \n    render(){\n        return(\n            this.props.isManualEnter ? \n            <div className=\"tc padding-top-most-of-interface\" style={{paddingBottom:\"10px\"}}>\n                <input autoComplete=\"off\"  onChange={this.timeInput} className=\"tc\" autoFocus=\"autofocus\"  id=\"manualInput\" type=\"number\" style={{color: this.props.isBackgroundLight ? \"black\" : \"white\",background: this.props.isBackgroundLight ? \"whitesmoke\" : \"RGB(23,23,23)\", outline:\"none\", height:\"120px\", width:\"300px\", fontSize:\"100px\"}}></input>\n            </div>\n            :\n            <div className=\"tc padding-top-most-of-interface\" style={{color: this.props.isBackgroundLight ?  \"black\" : \"white\"}}>\n                <h1 style={{color: this.props.isBackgroundLight ?  \"black\" : \"white\"}} id=\"timer-color-change\" className=\"br3 ba mv4 w-50 w-25-1 mw5 center\">{this.props.timerFormatted}</h1>\n            </div>\n        )\n    }\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.submit)\n    }\n}\n\nexport default TimerClock","import React, {Component} from 'react';\nimport './TimerInterface.css';\nimport Table from \"./Table\"\nimport Scroll from './Scroll';\nimport Average from './Average';\nimport CustomAverage from './CustomAverage';\nimport Scramble from './ScrambleDisplay';\nimport CountDown from './CountDown';\nimport moment from \"moment\"\nimport MobileTimer from './MobileTimer';\nimport HeaderContent from './HeaderContent';\nimport Footer from './Footer';\nimport ButtonTop from './ButtonTop';\nimport ButtonBottom from './ButtonBottom';\nimport TimerClock from \"./TimerClock\"\n\n\nwindow.onkeydown = function(e) { \n  return !(e.keyCode === 32 && e.target === document.body);\n}; \n\nclass TimerInterface extends Component {\n  state = {\n    start: 0,\n    final: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n    millisecondsTwo: 0,\n    going: false, \n    timerFormatted: \"0:00.000\",\n    displayTimeFormatted: \"0:00.000\",\n    twoFormatted: 0,\n    solves: [],\n    scramble: \"\",\n    megaminxScramble: \"\",\n    multiBLDScramble: \"\",\n    preventStartLoop: false,\n    preventStartLoopMobile: 0,\n    aoNum: 5, \n    countDown: 0,\n    isDisableSpacebar: false,\n    isCountDownActivated: false,\n    isCountDownGoing: false,\n    endMS: 0,\n    isMobileGoing: false,\n    countingDown: false,\n    keyPressOne: false,\n    keyPressTwo: false,\n    test: false,\n    isDisplayScrambleSmall: false,\n    isDisplayScrambleMedium: false,\n    disableCommand: false,\n    beginAfterDelayMobile: false,\n    beginAfterDelay: false,\n    isGreen: false,\n    preventCommand:false,\n  }\n\n  timerStart = () => {\n    this.setState({\n      endMS: 0,\n      final: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      milliseconds: 0,\n      start: Date.now(),\n      going: true,\n    })\n    this.interval = setInterval(()=>this.time(), 1)\n    this.interval2 = setInterval(()=>this.converter(this.state.final) ,1)\n    if (!this.props.isTimerDisabled){\n      this.interval3 = setInterval(()=>this.timerFormatted(\"timerFormatted\") ,1)\n    }\n  }\n\n  begin = (e) => {\n    const loop = () => {\n      this.setState({\n        preventStartLoop: false\n      })\n    }\n    if(e.keyCode === 32){\n        this.getCountDownNumber()\n      if(!this.state.isDisableSpacebar){\n        if (!this.state.going) {\n          if(!this.state.preventStartLoop){\n            if (!this.state.countingDown){\n              if(Number(this.state.countDown)===0){\n                if(this.state.beginAfterDelay){\n                  this.beginFunction()\n                }\n              }\n            }    \n          }else{\n            setTimeout(()=>loop(),50)\n          }\n        }\n      }\n    }\n  }\n\n  beginFunction = () => {\n    if(this.props.solves!==\"loading...\"){\n      this.props.isNewSessionFunction(false)\n      this.setState({\n          final: 0,\n          hours: 0,\n          minutes: 0,\n          seconds: 0,\n          milliseconds: 0,\n          start: Date.now(),\n          going: true,\n      })\n      this.interval = setInterval(()=>this.time(), 1)\n      this.interval2 = setInterval(()=>this.converter(this.state.final) ,1)\n      if (!this.props.isTimerDisabled){\n        this.interval3 = setInterval(()=>this.timerFormatted(\"timerFormatted\") ,1)\n      }\n    }\n  }\n\n  isDisableSpacebar = () =>{\n    this.setState({\n      isDisableSpacebar: !this.state.isDisableSpacebar\n    })\n  }\n\n  startTimerDuringCountDown = (e) => {\n    //function runs if count down is activated \n    //runs count down\n    if (this.state.countingDown) {\n      this.beginFunction()\n      this.setState({\n        isCountDownGoing: false,\n        countingDown: false,\n        keyPressOne: false,\n        keyPressTwo: false,\n      })\n      if(!this.state.disableCommand){\n        this.setState({\n          //here\n          preventStartLoop: true,\n        })\n      }\n      this.setState({\n        disableCommand: false,\n      })\n      \n      clearTimeout(this.countDownGoing)\n      clearInterval(this.countdownInterval)\n      clearTimeout(this.startTimer)\n      clearTimeout(this.disable)\n      clearTimeout(this.commandFalse)\n    }    \n  } \n\n\n  stop = (e) => {\n    if(this.state.going===true) {\n      if (!this.state.countingDown){\n        if (e.keyCode===32||(!this.state.keyPressOne && !this.state.keyPressTwo && (e.keyCode===91||e.keyCode===93||e.keyCode===17))) {\n          if(!this.state.isDisableSpacebar){\n            let endMS = Date.now() - this.state.start\n            let allSolves = []\n            for (const solve of this.props.solves){\n              if (solve.puzzle === this.props.puzzleType){\n                allSolves.push(solve.milliseconds)\n              }\n            }\n            allSolves.sort(this.compareMilliseconds)\n            let halfDate = moment.unix(Math.round(new Date().getTime() / 1000)).format(\"YYYY-MM-DD\");\n            this.timerFormatted(\"timerFormatted\")\n            clearInterval(this.countdownInterval)\n            this.getCountDownNumber()\n            clearInterval(this.interval)\n            clearInterval(this.interval2)\n            clearInterval(this.interval3)\n            this.converter(endMS)\n            this.timerFormatted(\"timerFormatted\")\n            this.timerFormatted(\"displayTimeFormatted\")\n            this.timerFormatted(\"twoFormatted\")\n            let solveid = \"\"\n            solveid+=Date.now()\n            let minimumTime = 0\n            if (this.props.puzzleType===\"3x3\"){\n              minimumTime=1100\n            }\n            if (this.props.puzzleType===\"5x5\" || this.props.puzzleType===\"6x6\"\n            || this.props.puzzleType===\"7x7\"){\n              minimumTime=10000\n            }\n            if (this.props.puzzleType===\"3x3 OH\" || this.props.puzzleType===\"Megaminx\"){\n              minimumTime=2000\n            }\n            if (this.props.puzzleType===\"Clock\"){\n              minimumTime=500\n            }\n            if (this.props.puzzleType===\"Square-1\"||this.props.puzzleType===\"4x4 BLD\"){\n              minimumTime=1000\n            }\n            if (this.props.puzzleType===\"5x5 BLD\" || this.props.puzzleType===\"4x4\"||this.props.puzzleType===\"3x3 BLD\"){\n              minimumTime=4000\n            }\n            let unix = Math.round(new Date().getTime() / 1000)\n            \n            const solveData = {}\n            solveData[\"id\"] = this.props.id\n            solveData[\"solve\"] = this.state.displayTimeFormatted\n            if (this.props.puzzleType===\"Megaminx\"){\n              solveData[\"scramble\"] = this.props.megaminxScramble \n            }else if (this.props.puzzleType===\"Multi-BLD\"){\n              solveData[\"scramble\"] = this.props.multiBLDScramble\n            }else{\n              solveData[\"scramble\"] = this.props.scrambleRegular\n            }\n            solveData[\"milliseconds\"] = String(endMS)\n            solveData[\"isplustwo\"] = false\n            solveData[\"isdnf\"] = false\n            solveData[\"date\"] = halfDate\n            solveData[\"solveid\"] = solveid\n            solveData[\"plustwo\"] = this.state.twoFormatted\n            solveData[\"millisecondstwo\"]= String(endMS + 2000)\n            solveData[\"session\"] = this.props.sessions\n            solveData[\"unix\"] = String(unix)\n            solveData[\"puzzle\"] = this.props.puzzleType\n            solveData[\"sessionname\"]=this.props.sessionName\n            solveData[\"temporary\"] = true\n            this.setState({\n              solves: [solveData, ...this.state.solves],\n              going: false,\n              endMS: endMS,\n              beginAfterDelay: false,\n            })\n            let offline = JSON.parse(localStorage.getItem(\"offline\"))\n            this.props.getInterfaceSolvesSingle(solveData)\n  \n            const finalSolve = {}\n            finalSolve[\"id\"] = this.props.id\n            finalSolve[\"solve\"] = this.state.displayTimeFormatted\n            if (this.props.puzzleType===\"Megaminx\"){\n              finalSolve[\"scramble\"] = this.props.megaminxScramble\n            }else if (this.props.puzzleType===\"Multi-BLD\"){\n              finalSolve[\"scramble\"] = this.props.multiBLDScramble\n            }else{\n              finalSolve[\"scramble\"] = this.props.scrambleRegular\n            }\n            finalSolve[\"milliseconds\"] = String(this.state.endMS)\n            finalSolve[\"isplustwo\"] = false\n            finalSolve[\"isdnf\"] = false\n            finalSolve[\"date\"] = halfDate\n            finalSolve[\"solveid\"] = solveid\n            finalSolve[\"plustwo\"] = this.state.twoFormatted\n            finalSolve[\"millisecondstwo\"]=String(this.state.endMS + 2000)\n            finalSolve[\"session\"] = this.props.sessions\n            finalSolve[\"unix\"] = String(unix)\n            finalSolve[\"puzzle\"] = this.props.puzzleType\n            finalSolve[\"sessionname\"]=this.props.sessionName\n            let sendToDB = [...this.props.solves, finalSolve]\n            this.send(sendToDB)\n            if(offline){\n              localStorage.setItem(\"offlinesolves\", JSON.stringify({\"solves\": [...sendToDB]}))\n            }\n            setTimeout(()=>this.props.getSolveFromInterface(finalSolve),10)\n            if (this.state.final < allSolves[0] && this.state.endMS > minimumTime){\n              if(allSolves.length>75){\n                this.props.confettiLaunch()\n              }\n            }\n          }\n          this.props.scramble(this.props.puzzleType)\n        }\n      }\n    }\n  }\n\n  countDownRunFunction = () => {\n    if(!this.state.isDisableSpacebar){\n      if (!this.state.going) {\n        if(!this.state.preventStartLoop){\n          if (!this.state.countingDown){\n            this.getCountDownNumber()\n            if(!this.state.disableCommand){\n              // here\n              this.setState({\n                preventStartLoop: false,\n              })\n            }\n            this.setState({\n              going: true,\n              countingDown: true,\n            })\n            this.isDisableSpacebar()\n            this.isCountDownGoing()\n            this.countDownGoing =  setTimeout(()=>this.isCountDownGoing(), this.props.inspectionTime * 1000)\n            this.countdownInterval = setInterval(()=>this.countDown(), 1000)\n            this.startTimer =  setTimeout(()=>this.timerStart(),this.props.inspectionTime * 1000)\n            this.runCountingDown =  setTimeout(()=>this.countingDown(),this.props.inspectionTime * 1000)\n            this.disable = setTimeout(()=>this.isDisableSpacebar(),this.props.inspectionTime * 1000)\n          }\n        }    \n      }\n    }\n  }\n\n  countDownRun = (e) => {\n    //function runs if count down is activated \n    //runs count down\n    if(e.keyCode === 32){\n      if(this.state.countDown>0){\n        if(!this.state.test){\n          if(this.state.beginAfterDelay){\n            this.countDownRunFunction()\n            if(this.state.going){\n              this.setState({\n                test: true,\n                \n              })\n            }\n          }\n        }else{\n          this.startTimerDuringCountDown()\n          this.setState({\n            test: false,\n            isDisableSpacebar: false,\n          })\n        }\n      }\n    }\n  }\n\n  // preventStartLoop = (e) => {\n  //   if(e.keyCode===32){\n  //     if(!this.state.isDisableSpacebar){\n  //       this.setState({\n  //         preventStartLoop: false\n  //       })\n  //     }\n  //   }\n  //   if((e.keyCode===91||e.keyCode===93||e.keyCode===17)&&(!this.state.keyPressOne&&!this.state.keyPressTwo)){\n  //     if(!this.state.countingDown){\n  //       if(!this.state.going){\n  //         if(this.state.preventStartLoop!==0){\n  //           this.setState({\n  //             preventStartLoop: this.state.preventStartLoop + 1\n  //           })\n  //         }\n  //       }\n  //     }\n  //   }\n  // }\n\n  beginAfterDelay = (e) => {\n    if(!this.props.isManualEnter){\n      if(e.keyCode===32||(this.state.keyPressOne && this.state.keyPressTwo && (e.keyCode===91||e.keyCode===93||e.keyCode===17))){\n        if(!this.state.preventStartLoop){\n          const delay = () => {\n            this.setState({\n              beginAfterDelay: true,\n            })\n          }\n          const green = () => {\n            if(document.getElementById(\"timer-color-change\")){\n              if(!this.props.isManualEnter){\n                this.props.isBackgroundLight ? \n                document.getElementById(\"timer-color-change\").style.color=\"RGB(58, 199, 81)\"\n                :\n                document.getElementById(\"timer-color-change\").style.color=\"RGB(49, 163, 68)\"\n              }\n            }\n          }\n          // const red = () => {\n          //   document.getElementById(\"timer-color-change\").style.color=\"RGB(255, 20, 20)\"\n          // }\n          this.delayTimeout = setTimeout(()=> delay(), 300)\n          this.greenTimeout = setTimeout(()=> green(), 300)\n          // red()\n        }\n      }\n    }\n  }\n\n  beginAfterDelaySafety = (e) => {\n    if (e.keyCode===32||((e.keyCode===91||e.keyCode===93||e.keyCode===17))) {\n      clearTimeout(this.delayTimeout)\n      clearTimeout(this.greenTimeout)\n      if(!this.state.preventStartLoop){\n        //here\n        // this.setState({\n        //   preventStartLoop: this.state.preventStartLoop-1\n        // })\n      }\n      if(document.getElementById(\"timer-color-change\")){\n        if(!this.props.isManualEnter){\n          if(!this.state.countingDown){\n            this.props.isBackgroundLight ? \n            setTimeout(()=>document.getElementById(\"timer-color-change\").style.color=\"black\",250)\n            :\n            setTimeout(()=>document.getElementById(\"timer-color-change\").style.color=\"white\",250)\n          }\n        }\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n  startTimerDuringCountDownMobile = () => {\n    this.setState({\n      isMobileGoing: true,\n      isCountDownGoing: false,\n    })\n    this.timerStartMobile()\n    clearInterval(this.countdownInterval)\n    clearTimeout(this.countDownRouteMobile)\n    clearTimeout(this.timerMobileTimeout)\n  }\n\n  stopMobileRoute = () => {\n    const route2 = () => {\n      this.setState({\n        isMobileGoing: false,\n      })\n    }\n    setTimeout(()=>route2(),200)\n  }\n\n  stopMobile = () => {\n    const doAll = async () => {\n        await this.stopMobile2()\n        await this.stopMobile3()\n    };\n    if(this.state.going===true) {\n      if(this.state.preventStartLoopMobile % 2!==0){\n    doAll();\n      }\n    }\n};\n\n  stopMobile2 = () => {\n    if(this.state.going===true) {\n      if(this.state.preventStartLoopMobile % 2!==0){\n        this.preventStartLoopMobile()\n        let endMS = Date.now() - this.state.start\n        this.setState({\n          endMS: endMS,\n          beginAfterDelayMobile: false,\n        })\n        if (this.state.isDisableSpacebar){\n          this.isDisableSpacebar()\n        }\n        clearInterval(this.countdownInterval)\n        this.getCountDownNumber()\n        clearInterval(this.interval4)\n        clearInterval(this.interval5)\n        clearInterval(this.interval6)\n      }\n    }\n  }\n\n  stopMobile3 = () => {\n    this.converter(this.state.endMS, true)\n    let solveid = \"\"\n      solveid+=Date.now()\n      let allSolves = []\n      for (const solve of this.props.solves){\n        if (solve.puzzle === this.props.puzzleType){\n          allSolves.push(solve.milliseconds)\n        }\n      }\n      allSolves.sort(this.compareMilliseconds)\n      let halfDate = moment.unix(Math.round(new Date().getTime() / 1000)).format(\"YYYY-MM-DD\");\n      let minimumTime = 0\n      if (this.props.puzzleType===\"3x3\"){\n        minimumTime=1100\n      }\n      if (this.props.puzzleType===\"4x4\"){\n        minimumTime=5000\n      }\n      if (this.props.puzzleType===\"5x5\"){\n        minimumTime=10000\n      }\n      if (this.props.puzzleType===\"6x6\"){\n        minimumTime=10000\n      }\n      if (this.props.puzzleType===\"7x7\"){\n        minimumTime=10000\n      }\n      if (this.props.puzzleType===\"3x3 BLD\"){\n        minimumTime=5000\n      }\n      if (this.props.puzzleType===\"3x3 OH\"){\n        minimumTime=2000\n      }\n      if (this.props.puzzleType===\"Clock\"){\n        minimumTime=500\n      }\n      if (this.props.puzzleType===\"Megaminx\"){\n        minimumTime=2000\n      }\n      if (this.props.puzzleType===\"Square-1\"){\n        minimumTime=1000\n      }\n      if (this.props.puzzleType===\"4x4 BLD\"){\n        minimumTime=3000\n      }\n      if (this.props.puzzleType===\"5x5 BLD\"){\n        minimumTime=4000\n      }\n      let unix = Math.round(new Date().getTime() / 1000)\n      const solveData = {}\n      solveData[\"id\"] = this.props.id\n      solveData[\"solve\"] = this.state.displayTimeFormatted\n      if (this.props.puzzleType===\"Megaminx\"){\n        solveData[\"scramble\"] = this.props.megaminxScramble \n      }else if (this.props.puzzleType===\"Multi-BLD\"){\n        solveData[\"scramble\"] = this.props.multiBLDScramble\n      }else{\n        solveData[\"scramble\"] = this.props.scrambleRegular\n      }\n      solveData[\"milliseconds\"] = String(this.state.endMS)\n      solveData[\"isplustwo\"] = false\n      solveData[\"isdnf\"] = false\n      solveData[\"date\"] = halfDate\n      solveData[\"solveid\"] = solveid\n      solveData[\"plustwo\"] = this.state.twoFormatted\n      solveData[\"millisecondstwo\"]= String(this.state.endMS + 2000)\n      solveData[\"session\"] = this.props.sessions\n      solveData[\"unix\"] = new Date().getTime()\n      solveData[\"puzzle\"] = this.props.puzzleType\n      solveData[\"sessionname\"]=this.props.sessionName\n      solveData[\"temporary\"] = true\n      this.setState({\n        going: false,\n        // isMobileGoing: false,\n        isDisableSpacebar: false,\n      })\n      this.props.getInterfaceSolvesSingle(solveData)\n      const finalSolve = {}\n      finalSolve[\"id\"] = this.props.id\n      finalSolve[\"solve\"] = this.state.displayTimeFormatted\n      if (this.props.puzzleType===\"Megaminx\"){\n        finalSolve[\"scramble\"] = this.props.megaminxScramble\n      }else if (this.props.puzzleType===\"Multi-BLD\"){\n        finalSolve[\"scramble\"] = this.props.multiBLDScramble\n      }else{\n        finalSolve[\"scramble\"] = this.props.scrambleRegular\n      }\n      finalSolve[\"milliseconds\"] = String(this.state.endMS)\n      finalSolve[\"isplustwo\"] = false\n      finalSolve[\"isdnf\"] = false\n      finalSolve[\"date\"] = halfDate\n      finalSolve[\"solveid\"] = solveid\n      finalSolve[\"plustwo\"] = this.state.twoFormatted\n      finalSolve[\"millisecondstwo\"]=String(this.state.endMS + 2000)\n      finalSolve[\"session\"] = this.props.sessions\n      finalSolve[\"unix\"] = String(unix)\n      finalSolve[\"puzzle\"] = this.props.puzzleType\n      finalSolve[\"sessionname\"]=this.props.sessionName\n      this.props.send([...this.props.solves, finalSolve])\n      let offline = JSON.parse(localStorage.getItem(\"offline\"))\n      if(offline){\n        localStorage.setItem(\"offlinesolves\", JSON.stringify({\"solves\":[...this.props.solves, finalSolve]}))\n      }\n      setTimeout(()=>this.props.getSolveFromInterface(finalSolve),10)\n      this.props.scramble(this.props.puzzleType)\n      if (this.state.final < allSolves[0] && this.state.endMS > minimumTime){\n        if(allSolves.length>75){\n          this.props.confettiLaunch()\n        }\n      }\n  }\n\n  countDownRunMobile = () => {\n    //function runs if count down is activated \n    //runs count down\n    if(!this.state.isDisableSpacebar){\n      if (!this.state.isMobileGoing) {\n        if(this.state.preventStartLoopMobile % 2===0){\n          this.getCountDownNumber()\n          this.setState({\n            isMobileGoing: true,\n            // going: true,\n          })\n          this.isDisableSpacebar()\n          this.isCountDownGoing()\n          this.countDownRouteMobile = setTimeout(()=>this.isCountDownGoing(), this.props.inspectionTime * 1000)\n          this.countdownInterval = setInterval(()=>this.countDown(), 1000)\n          this.timerMobileTimeout = setTimeout(()=>this.timerStartMobile(),this.props.inspectionTime * 1000)\n        }\n      }\n    }\n  }\n\n  timerStartMobile = () => {\n    this.setState({\n      endMS: 0,\n      final: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      milliseconds: 0,\n      start: Date.now(),\n      going: true,\n    })\n    this.interval4 = setInterval(()=>this.time(), 1)\n    this.interval5 = setInterval(()=>this.converter(this.state.final) ,1)\n    if (!this.props.isTimerDisabled){\n      this.interval6 = setInterval(()=>this.timerFormatted(\"timerFormatted\") ,1)\n    }\n  }\n\n  beginMobile = () => {\n    if(this.props.solves!==\"loading...\"){\n      \n      clearTimeout(this.changeColor)\n      this.getCountDownNumber()\n      if(this.state.beginAfterDelayMobile){\n        this.preventStartLoopMobile()\n        if(this.props.inspectionTime===0){\n          if (!this.state.going) {\n            if(this.state.preventStartLoopMobile % 2===0){\n              if(this.props.isBackgroundLight){\n                document.getElementById(\"colorClick\").style.backgroundColor=\"whitesmoke\";\n                document.getElementById(\"colorClick2\").style.backgroundColor=\"whitesmoke\";\n              }else{\n                document.getElementById(\"colorClick\").style.backgroundColor=\"rgb(23, 23, 23)\";\n                document.getElementById(\"colorClick2\").style.backgroundColor=\"rgb(23, 23, 23)\";\n              }\n              this.props.isNewSessionFunction(false)\n              this.setState({\n                final: 0,\n                hours: 0,\n                minutes: 0,\n                seconds: 0,\n                milliseconds: 0,\n                start: Date.now(),\n                going: true,\n                isDisableSpacebar: true,\n              })\n              this.interval4 = setInterval(()=>this.time(), 1)\n              this.interval5 = setInterval(()=>this.converter(this.state.final) ,1)\n              if (!this.props.isTimerDisabled){\n                this.interval6 = setInterval(()=>this.timerFormatted(\"timerFormatted\") ,1)\n              }\n              this.setState({\n                isMobileGoing: true\n              })\n            }\n          }\n        }else{\n          this.countDownRunMobile()\n        }\n      }\n    }\n  }\n\n  converter = (input, isFormat) => {\n    const hours = Math.floor(input / 3600000)\n    const minutes = Math.floor((input / 60000)%60)\n    const seconds = Math.floor((input / 1000)%60)\n    const milliseconds = (input % 1000)\n    this.setState({\n      hours: hours,\n      minutes: minutes, \n      secondsTwo: seconds, \n      seconds: seconds,\n      milliseconds: milliseconds,\n    })\n    if (isFormat === true){\n      this.timerFormatted(\"timerFormatted\")\n      this.timerFormatted(\"displayTimeFormatted\")\n      this.timerFormatted(\"twoFormatted\")\n    }\n  }\n\n  timerFormatted(stateValue){\n    let time = \"\"\n    if (this.state.hours > 0){\n      time += this.state.hours + \":\"\n    }\n    if (stateValue === \"timerFormatted\"){\n      time += this.state.minutes + \":\"\n      if (this.state.seconds < 10) {\n        time += \"0\" \n      }\n    }\n    if(stateValue===\"displayTimeFormatted\"){\n      if (this.state.minutes>0){\n        time += this.state.minutes + \":\"\n        if (this.state.seconds < 10) {\n          time += \"0\" \n        }\n      }\n    }\n    if (stateValue === \"twoFormatted\"){\n      time += this.state.seconds + 2  + \".\"\n    } else{\n      time += this.state.seconds  + \".\"\n    }\n    if (this.state.milliseconds < 10){\n      time += \"00\"\n    }\n    if (this.state.milliseconds < 100){\n      if (this.state.milliseconds > 9){\n        time += \"0\"\n      }\n    }\n    time += this.state.milliseconds\n    if (stateValue === \"timerFormatted\"){\n      this.setState({\n        timerFormatted: time,\n      })\n    }\n    if (stateValue === \"displayTimeFormatted\"){\n      this.setState({\n        displayTimeFormatted: time,\n      })\n    }\n    if (stateValue === \"twoFormatted\"){\n      this.setState({\n        twoFormatted: time,\n      })\n    }\n  }\n\n  sendToSolves = (input) => {\n    this.setState({\n      solves: input\n    })\n  }\n\n  isCountDownGoing = () => {\n    this.setState({\n      isCountDownGoing: !this.state.isCountDownGoing\n    })\n  } \n\n  preventStartLoopMobile = () => {\n    this.setState({\n      preventStartLoopMobile: this.state.preventStartLoopMobile+1\n    })\n  }\n\n  getCountDownNumber = () => {\n    this.setState({\n      countDown: this.props.inspectionTime\n    })\n  }\n\n  \n\n  compareMilliseconds = (a,b) => {\n    return a - b\n  }\n\n\n  isCountDownActivated = () => {\n    this.setState({\n      isCountDownActivated: !this.state.isCountDownActivated\n    })\n  }\n\n  countingDown = () => {\n    this.setState({\n      countingDown: false\n    })\n  }\n\n  countDown = () => {\n    this.setState({\n      countDown: this.state.countDown - 1\n    })\n  }\n\n  send = (input) => {\n    //testing storing all solves in one cell\n    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n    if(!offline){\n      fetch(\"https://blooming-hollows-98248.herokuapp.com/sendsolves\",{\n        method: \"put\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({\n          id: this.props.id,\n          solves: {\"allsolves\": input},\n        })\n      }).then(response=>response.json())\n    }\n  }\n\n  deleteDB = (index) => {\n    //removes individual solves from database\n    fetch(\"https://blooming-hollows-98248.herokuapp.com/deletedb\", {\n      method: \"delete\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n        solveid: this.props.solvesInterface[index].solveid,\n        solve: this.props.solvesInterface[index].solve\n      })\n    }) \n    .then(response=>response.json())\n    this.props.removeSolveFromSolvesState(this.props.solvesInterface[index].solveid, this.props.solvesInterface[index].milliseconds)\n  }\n\n  newSession = () => {\n    // calls newSesssionApp and removes solves from interface\n    this.props.newSessionApp()\n    this.setState({\n      solves: []\n    })\n  }\n\n  time(){\n    let timeElapsed = Date.now() - this.state.start\n    this.setState({\n      final: timeElapsed,\n    })\n  }\n\n  removeTime = (index, solveid, milliseconds, solve, solveNumber) => {\n    //removes time from interface only\n    if (this.props.isConfirmSolveDelete) {\n      let confirm = window.confirm(`Solve ${solveNumber} \\n${solve} \\nAre you sure you would like to remove this solve? Action cannot be undone.`)\n      if (confirm){\n        this.props.removeSolveFromState(solveid, milliseconds)\n      }\n    }else{\n      this.props.removeSolveFromState(solveid, milliseconds)\n    }\n    this.removeButtonFocus()\n  }\n\n  removeButtonFocus = () => {\n    let removeFocus = document.getElementsByClassName(\"remove\")\n    for (const button of removeFocus){\n      button.blur()\n    }\n  }\n\n  removeButtonFocusPlusTwo = () => {\n    let removeFocus = document.getElementsByClassName(\"remove2\")\n    for(const button of removeFocus){\n      button.blur()\n    }\n  }\n\n  removeButtonFocusDNF = () => {\n    let removeFocus = document.getElementsByClassName(\"remove3\")\n    for (const button of removeFocus) {\n      button.blur()\n    }\n  }\n\n  togglePlusTwoInterface = (input) => {\n    this.props.togglePlusTwo(input)\n    let xyz = []\n    for (const solve of this.props.solvesInterface){\n      let x = solve.isplustwo\n      if (solve.solveid === input ){\n        solve[\"isplustwo\"] = x\n      }\n      if (solve.solveid === input &&solve.temporary){\n        solve[\"isplustwo\"] = !x\n      }\n      xyz = [...xyz, solve]\n    }\n    this.props.getInterfaceSolves(xyz)\n    this.removeButtonFocusPlusTwo()\n  }\n\n  toggleDNFInterface = (input) => {\n    this.props.toggleDNF(input)\n    let xyz = []\n    for (const solve of this.props.solvesInterface){\n      if (solve.solveid === input){\n        let x = !solve.isdnf\n        solve[\"isdnf\"] = !x\n        if (solve.temporary){\n          let x = !solve.isdnf\n          solve[\"isdnf\"] = x\n        }\n      }\n      xyz = [...xyz, solve]\n    }\n    this.props.getInterfaceSolves(xyz)\n    this.removeButtonFocusDNF()\n  }\n\n  color = () => {\n    if(this.props.solves!==\"loading...\"){\n      const colorChange = () => {\n        if(this.props.isBackgroundLight){\n          document.getElementById(\"colorClick\").style.backgroundColor=\"rgb(224, 84, 74)\";\n          document.getElementById(\"colorClick2\").style.backgroundColor=\"rgb(224, 84, 74)\";\n        }else{\n          document.getElementById(\"colorClick\").style.backgroundColor=\"rgb(135, 47, 41)\";\n          document.getElementById(\"colorClick2\").style.backgroundColor=\"rgb(135, 47, 41)\";\n        }\n        this.setState({\n          beginAfterDelayMobile: true,\n        })\n      }\n      // this.delayMobile = setTimeout(()=> beginAfterDelayMobile(),275)\n      this.changeColor = setTimeout(()=>colorChange(), 275)\n    }\n  }\n\n  colorRegular = () => {\n    if(document.getElementById(\"colorClick\")){\n      if(document.getElementById(\"colorClick\").style.backgroundColor===\"rgb(135, 47, 41)\"){\n        document.getElementById(\"colorClick\").style.backgroundColor=\"rgb(23, 23, 23)\";\n      }\n      if(document.getElementById(\"colorClick\").style.backgroundColor===\"rgb(224, 84, 74)\"){\n        document.getElementById(\"colorClick\").style.backgroundColor=\"whitesmoke\";\n      }\n    }\n    if(document.getElementById(\"colorClick2\")){\n      if(document.getElementById(\"colorClick2\").style.backgroundColor===\"rgb(135, 47, 41)\"){\n        document.getElementById(\"colorClick2\").style.backgroundColor=\"rgb(23, 23, 23)\";\n      }\n      if(document.getElementById(\"colorClick2\").style.backgroundColor===\"rgb(224, 84, 74)\"){\n        document.getElementById(\"colorClick2\").style.backgroundColor=\"whitesmoke\";\n      }\n    }\n  }\n\n\n  keyPressSafetyUndo = (e) => {\n    if (e.keyCode===93 || e.keyCode===91){\n      if(!this.state.keyPressOne||!this.state.keyPressTwo){\n        if(!this.state.going){\n          this.setState({\n            keyPressOne: false,\n            keyPressTwo: false,\n          })\n        }\n      }\n    }\n    if (e.keyCode===17){\n      if(!this.state.keyPressOne||!this.state.keyPressTwo){\n        if(!this.state.going){\n          this.setState({\n            keyPressOne: false,\n            keyPressTwo: false,\n          })\n        }\n      }\n    }\n  }\n\n  keyPressSafety = (e) => {\n    if (!this.state.going){\n      if(!this.state.countingDown){\n        if(!this.state.preventStartLoop){\n          if (e.keyCode===91){\n            this.setState({\n              keyPressOne: true\n            })\n          }\n          if (e.keyCode===93){\n            this.setState({\n              keyPressTwo: true\n            })\n          }\n          if(e.keyCode===17){\n            if(!this.state.keyPressOne){\n              this.setState({\n                keyPressOne: true\n              })\n            }else{\n              this.setState({\n                keyPressTwo: true\n              })\n            }\n          }\n        }\n      }\n    }\n  }\n  \n  \n\n  keyPressStart = (e) => {\n    this.getCountDownNumber()\n    const loop = () => {\n      this.setState({\n        preventStartLoop: false\n      })\n    }\n    const stopDelay = () => {\n      this.setState({\n        beginAfterDelay: false,\n      })\n    }\n    if(!this.props.isManualEnter){\n      if(e.keyCode===93||e.keyCode===91||e.keyCode===17){\n        if(this.state.preventStartLoop){\n          if(!this.state.isCountDownGoing){\n            setTimeout(()=>loop(),50)\n          }\n        }\n        if(this.state.countingDown){\n          this.startTimerDuringCountDown()\n        }\n        if (!this.state.going){\n          if (this.state.keyPressOne && this.state.keyPressTwo){\n            if(!this.state.preventStartLoop){\n              if(!this.state.preventCommand){\n                if(this.state.beginAfterDelay){\n\n                  if(Number(this.state.countDown)===0){\n                    this.setState({\n                      //here\n                      preventStartLoop: true,\n                      preventCommand: true\n                    })\n                    this.beginFunction() \n                  }else{\n                    this.countDownRunFunction()\n                    this.setState({\n                      preventStartLoop: true,\n                      disableCommand: true,\n                      keyPressOne: false,\n                      keyPressTwo: false,\n                    })\n                    setTimeout(()=>this.keyPressTrue(), this.props.inspectionTime*1000)\n                    this.commandFalse = setTimeout(()=>this.disableCommandFalse(), this.props.inspectionTime*1000)\n                  }\n                }else{\n                  setTimeout(()=>clearTimeout(stopDelay()),301)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  disableCommandFalse = () => {\n    this.setState({\n      disableCommand: false\n    })\n  }\n\n  keyPressTrue = () => {\n    this.setState({\n      keyPressOne: true,\n      keyPressTwo: true,\n    })\n  }\n\n  keyPressSafetyUndoStop = (e) => {\n    if (e.keyCode===93 || e.keyCode===91){\n      if(!this.state.keyPressOne||!this.state.keyPressTwo){\n        if(this.state.going){\n          this.setState({\n            keyPressOne: true,\n            keyPressTwo: true,\n          })\n        }\n      }\n    }\n    if (e.keyCode===17){\n      if(!this.state.keyPressOne||!this.state.keyPressTwo){\n        if(this.state.going){\n          this.setState({\n            keyPressOne: true,\n            keyPressTwo: true,\n          })\n        }\n      }\n    }\n  }\n\n  keyPressSafetyStop = (e) => {\n    if (this.state.going){\n      if (e.keyCode===91){\n        this.setState({\n          keyPressOne: false,\n          keyPressTwo: false,\n        })\n      }\n      if (e.keyCode===93){\n        this.setState({\n          keyPressTwo: false,\n          keyPressOne: false,\n        })\n      }\n      if (e.keyCode===17){\n        this.setState({\n          keyPressTwo: false,\n          keyPressOne: false,\n        })\n      }\n    }\n  }\n\n  keyPressStop = (e) => {\n    const preventCommand1 = () => {\n      this.setState({\n        preventCommand: false,\n      })\n    }\n    if (this.state.going){\n      if (e.keyCode===91 || e.keyCode===93){\n        setTimeout(()=>preventCommand1(),350)\n        if (!this.state.keyPressOne || !this.state.keyPressTwo){\n          this.setState({\n            isDisableSpacebar: false\n          })\n          this.stop(e)\n        }\n      }\n      if (e.keyCode===17){\n        setTimeout(()=>preventCommand1(),350)\n        if (!this.state.keyPressOne || !this.state.keyPressTwo){\n          this.stop(e)\n        }\n      }\n    }\n  }\n\n  test = () => {\n    console.log(this.state.beginAfterDelayMobile)\n  }\n\n  render() {   \n    return (\n      <div>\n        {/* <button onClick={this.test}>test</button> */}\n        {\n        this.state.isCountDownGoing ? \n        <CountDown \n        isBackgroundLight={this.props.isBackgroundLight}\n        startTimerDuringCountDownMobile={this.startTimerDuringCountDownMobile}\n        countDown={this.state.countDown}\n        />\n        :\n        (\n        this.state.isMobileGoing ?\n        <MobileTimer \n        timerFormatted={this.state.timerFormatted}\n        isBackgroundLight={this.props.isBackgroundLight}\n        stopMobile={this.stopMobile}\n        stopMobileRoute={this.stopMobileRoute}\n        isTimerDisabled={this.props.isTimerDisabled}\n        />         \n        :\n        <div style={{backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", color: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>\n          <HeaderContent \n          isMobileGoing={this.state.isMobileGoing}\n          isSignedIn={this.props.isSignedIn}\n          isBackgroundLight={this.props.isBackgroundLight}\n          dashboard={this.props.dashboard}\n          username={this.props.username}\n          signIn={this.props.signIn}\n          />\n          <div style={{ position:\"relative\"}}>\n            <Scramble \n            isDisplayScrambleSmall={this.props.isDisplayScrambleSmall}\n            isDisplayScrambleMedium={this.props.isDisplayScrambleMedium}\n            scrambleRegular={this.props.scrambleRegular}\n            isBackgroundLight={this.props.isBackgroundLight}\n            megaminxScramble={this.props.megaminxScramble}\n            multiBLDScramble={this.props.multiBLDScramble}\n            />\n\n            <TimerClock \n            isBackgroundLight={this.props.isBackgroundLight}\n            id={this.props.id}\n            solvesApp={this.props.solves}\n            send={this.props.send}\n            getSolveFromInterface={this.props.getSolveFromInterface}\n            getInterfaceSolvesSingle={this.props.getInterfaceSolvesSingle}\n            solves={this.state.solves}\n            sendToSolves={this.sendToSolves}\n            sessionName={this.props.sessionName}\n            sessions={this.props.sessions}\n            twoFormatted={this.state.twoFormatted}\n            megaminxScramble={this.props.megaminxScramble}\n            scrambleRegular={this.props.scrambleRegular}\n            scramble={this.props.scramble}\n            multiBLDScramble={this.props.multiBLDScramble}\n            puzzleType={this.props.puzzleType}\n            displayTimeFormatted={this.state.displayTimeFormatted}\n            converter={this.converter}\n            isManualEnter={this.props.isManualEnter}\n            timerFormatted={this.state.timerFormatted}\n            />\n          </div>\n\n\n          <ButtonTop \n          isManualEnter={this.props.isManualEnter}\n          isMobileGoing={this.props.isMobileGoing}\n          isMobile={this.props.isMobile}\n          beginMobile={this.beginMobile}\n          color={this.color}\n          isBackgroundLight={this.props.isBackgroundLight}\n          />\n\n\n          {this.state.isMobileGoing ? \n            <div></div>\n            :\n            <Scroll isBackgroundLight={this.props.isBackgroundLight} isMobile={this.props.isMobile}>\n              <Table \n              solvesApp={this.props.solves}\n              id={this.props.id}\n              aoNum2={this.props.aoNum2} \n              aoNum={this.props.aoNum} \n              toggleDNFInterface={this.toggleDNFInterface}\n              togglePlusTwo={this.togglePlusTwoInterface}\n              plusTwo={this.plusTwo} \n              solves={this.props.solvesInterface} \n              removeTime={this.removeTime} \n              styles={this.props.isBackgroundLight}/>\n            </Scroll >\n          }\n          <ButtonBottom \n          isManualEnter={this.props.isManualEnter}\n          isMobileGoing={this.props.isMobileGoing}\n          isMobile={this.props.isMobile}\n          beginMobile={this.beginMobile}\n          color={this.color}\n          isBackgroundLight={this.props.isBackgroundLight}/> \n\n          <div id=\"light\">\n            <Footer \n            isSessionName={this.props.isSessionName}\n            id={this.props.id}\n            sessionInterface={this.props.sessionInterface}\n            sessionName={this.props.sessionName}\n            puzzleType={this.props.puzzleType}\n            />\n            <Average \n            solves={this.props.solvesInterface} \n            /> \n            <CustomAverage  \n            aoNum={this.props.aoNum} \n            solves={this.props.solvesInterface} \n            />\n            {\n            this.props.id ? \n              <h1 ><button  onClick={this.newSession} style={{marginLeft:\"1rem\", color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\">New Session</button></h1>\n            :\n            <h1> </h1>\n            }\n          </div>\n          <br></br>\n        </div>\n        )\n        }\n      </div>\n    )\n  }\n\n\n\n  componentDidMount() {\n    setTimeout(()=>this.getCountDownNumber(),1)\n    setTimeout(()=>this.props.getTheme(),1)\n    document.addEventListener('mouseup', this.colorRegular)\n    document.addEventListener('touchend', this.colorRegular)\n    document.addEventListener('keyup', this.begin)\n    document.addEventListener('keyup', this.countDownRun)\n    document.addEventListener('keydown', this.stop)\n    document.addEventListener('keyup', this.preventStartLoop)\n    document.addEventListener('keydown', this.keyPressStop)\n    document.addEventListener('keydown', this.keyPressSafetyStop)\n    document.addEventListener('keydown', this.keyPressSafety)\n    document.addEventListener('keyup', this.keyPressStart)\n    document.addEventListener('keyup', this.keyPressSafetyUndo)\n    document.addEventListener('keyup', this.keyPressSafetyUndoStop)\n    document.addEventListener('keyup', this.beginAfterDelaySafety)\n    document.addEventListener('keydown', this.beginAfterDelay)\n  }\n}\n\nexport default TimerInterface;\n","import React, { Component } from 'react'\nimport Chart from \"chart.js\";\n// import classes from \"./LineGraph.module.css\";\nlet newChart\n\n\nexport default class GraphNumberSolves extends Component {\n    chartRef = React.createRef();\n\n    state = {\n        indexNumber: 0\n    }\n    \n    // options = () =>{\n    //     let optionsArray = this.props.categories\n    //     optionsArray = [\"All solves\", ...optionsArray]\n    //     const selectbox = document.getElementById(\"categoriesNumberSolves\")\n    //     optionsArray.map((option,index)=>{\n    //         let newOption = document.createElement(\"option\")\n    //         newOption.text = option\n    //         newOption.value = index\n    //         selectbox.add(newOption)\n    //         return(null)\n    //     })\n    // }\n\n    // getIndexNumber = () =>{\n    //     const x = document.getElementById(\"categoriesNumberSolves\")\n    //     const y = x.options[x.selectedIndex].value\n    //     this.setState({\n    //         indexNumber: y\n    //     })\n    // }\n\n    componentDidMount() {\n        // console.log(this.props.numberSolves)\n        // console.log(this.props.dates)\n        this.solvesChart()\n        // this.options()\n    }\n\n    componentDidUpdate() {\n        this.solvesChart()\n    }\n\n    solvesChart = () =>{\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        if (typeof newChart !== \"undefined\") newChart.destroy();\n        newChart = new Chart(myChartRef, {\n            type: \"line\",\n            data: \n            {\n                labels: this.props.dates[this.props.timePeriod][this.props.indexNumberGraphs],\n                // labels: [\"2020-06-12T21:35:34.466Z\", \"2020-06-15T21:35:34.466Z\", \"2020-07-10T07:00:00.000Z\"],\n                // labels: [\"Fri, 12 Jun 2020 18:47:15 +0000\", \"Fri, 19 Jun 2020 18:47:15 +0000\", \"2020-06-21T18:56:07.457Z\", \"2020-06-29T07:00:00.000Z\"],\n    \n                datasets: [{\n                  label: \"Averages Over Time\",\n                //   data: [10.22, 12.32, 6.94],\n                data: this.props.numberSolves[this.props.timePeriod][this.props.indexNumberGraphs],\n                backgroundColor: this.props.isBackgroundLight ? \"rgba(0,0,190,.1)\" : \"rgba(250,250,250,.8)\" ,\n                borderColor: \"light red\",\n                // borderWidth: 10,\n                pointRadius: 5,\n                }]\n              },\n            \n            options: {\n                events: [],\n                title: {\n                    display: true,\n                    text: \"Number of Solves by Date\",\n                    fontColor: this.props.isBackgroundLight ? \"rgba(10,10,10,.8)\" : \"rgba(250,250,250,1)\",\n                },\n                responsive: true,\n                scales: {\n                    xAxes: [{\n                        type: 'time',\n                        time: {\n                            unit: 'day',\n                            displayFormats: {\n                                'millisecond': 'MMM DD',\n                                'second': 'MMM DD',\n                                'minute': 'MMM DD',\n                                'hour': 'MMM DD',\n                                'day': 'MMM DD',\n                                'week': 'MMM DD',\n                                'month': 'MMM DD',\n                                'quarter': 'MMM DD',\n                                'year': 'MMM DD',\n                            }\n                        },\n                        distribution: 'linear',\n                        gridLines: {\n                            color: this.props.isBackgroundLight ? \"rgba(10,10,10,.1)\" : \"rgba(250,250,250,.4)\"\n                        },\n                        ticks: {\n                            fontColor: this.props.isBackgroundLight ? \"rgba(10,10,10,.8)\" : \"rgba(250,250,250,1)\",\n                        }\n                    }],\n                    yAxes : [{\n                        ticks : {\n                            beginAtZero : true,\n                            maxTicksLimit: 20,\n                            fontColor: this.props.isBackgroundLight ? \"rgba(10,10,10,.8)\" : \"rgba(250,250,250,1)\",\n                            stepSize: 1,\n                        },   \n                        gridLines: {\n                            color: this.props.isBackgroundLight ? \"rgba(10,10,10,.1)\" : \"rgba(250,250,250,.4)\"\n                        },\n                    }],\n                },\n                legend:{\n                    display: false\n                }\n            },\n    \n        });\n    }\n\n\n    render() {\n        return (\n            <div >\n                {/* <div className=\"center\">\n                    <select onChange={this.getIndexNumber} id=\"categoriesNumberSolves\"></select>\n                </div> */}\n                <canvas\n                    id=\"myChart\"\n                    ref={this.chartRef}\n                />\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Chart from \"chart.js\";\nlet newChart;\n\nfunction minutesToHours(secondsTotal) {\n    var hours = Math.floor(secondsTotal / 3600)\n    var minutes = Math.floor((secondsTotal / 60)%60);\n    var seconds = secondsTotal % 60;\n    var milliseconds = \"00\"\n    let zero = \"0\"\n    if (hours > 0) {\n        if(seconds< 10){\n            return (hours + \":\" + minutes + \":\" + zero + seconds + \".\" + milliseconds)\n        }else{\n            return (hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds)\n        }\n    }else if (minutes > 0) {\n        if(seconds< 10){\n            return (minutes + \":\" + zero + seconds + \".\" + milliseconds)\n        }else{\n            return (minutes + \":\" + seconds + \".\" + milliseconds)\n        }\n    }else{\n        return (seconds + \".\" + milliseconds)\n    }\n}\n\n\nexport default class Graph extends Component {\n    chartRef = React.createRef();\n    \n    state={\n        data: \"\",\n        indexNumber: \"\",\n        test: \"\",\n    }\n\n\n\n    compare = (a,b) => {\n        return a - b\n    }\n\n    changeData = () => {\n        this.setState({\n            data: [5.55, 8.41, 9.99]\n        })\n    }\n\n    options = () => {\n        let optionsArray = this.props.categories\n        optionsArray = [\"All solves\", ...optionsArray]\n        const selectbox = document.getElementById(\"categories\")\n        optionsArray.map((option, index)=> {\n            let newOption = document.createElement(\"option\")\n            newOption.text=option\n            newOption.value=index\n            selectbox.add(newOption)\n            return(null)\n        })\n    }\n\n    optionsTimePeriod = () => {\n        let optionsArray = [\"All time\", \"Week\", \"Month\", \"Year\",]\n        const selectbox = document.getElementById(\"timePeriod\")\n        optionsArray.map((option, index)=> {\n            let newOption = document.createElement(\"option\")\n            newOption.text=option\n            newOption.value=index\n            selectbox.add(newOption)\n            return(null)\n        })\n    }\n\n    changeIndexNumber = () =>{\n        this.props.changeIndexNumber(\"categories\")\n        const x = document.getElementById(\"categories\")\n        const y = x.options[x.selectedIndex].value\n        this.setState({\n            indexNumber: y\n        })\n    }\n\n    changeTimePeriod = () =>{\n        this.props.changeTimePeriod(\"timePeriod\")\n        const x = document.getElementById(\"timePeriod\")\n        const y = x.options[x.selectedIndex].value\n        this.setState({\n            timePeriod: y\n        })\n    }\n\n    test = () =>{\n        let testArray = new Set(this.props.averages)\n        this.setState({\n            test: testArray\n        })\n        // console.log(\"test\", this.state.test)\n    }\n\n\n    componentDidMount() {\n        this.optionsTimePeriod()\n        setTimeout(()=>this.changeIndexNumber(),10)\n        // setTimeout(()=>console.log(this.props.averages),100)\n        // setTimeout(()=>console.log(this.props.dates),100)\n        this.options()\n        this.buildChart()\n    }\n\n    componentDidUpdate() {\n        this.buildChart()\n    }\n\n    buildChart = () => {\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        if (typeof newChart !== \"undefined\") newChart.destroy();\n        newChart = new Chart(myChartRef, {\n            type: \"line\",\n            data: \n            {\n                labels: this.props.dates[this.props.timePeriod][this.state.indexNumber],\n    \n                datasets: [{\n                    label: \"Averages by Date\",\n                    data: this.props.averages[this.props.timePeriod][this.state.indexNumber],\n                    backgroundColor: this.props.isBackgroundLight ? \"rgba(0,0,190,.1)\" : \"rgba(250,250,250,.8)\" ,\n                    borderColor: \"light red\"\n    \n                }]\n              },\n            \n            options: {\n                events: [],\n                title: {\n                    display: true,\n                    text: \"Averages Over Time\",\n                    fontColor: this.props.isBackgroundLight ? \"rgba(10,10,10,.8)\" : \"rgba(250,250,250,1)\",\n                },\n                responsive: true,\n                scales: {\n                    xAxes: [{\n                        type: 'time',\n                        time: {\n                            unit: 'day',\n                            displayFormats: {\n                                'millisecond': 'MMM DD',\n                                'second': 'MMM DD',\n                                'minute': 'MMM DD',\n                                'hour': 'MMM DD',\n                                'day': 'MMM DD',\n                                'week': 'MMM DD',\n                                'month': 'MMM DD',\n                                'quarter': 'MMM DD',\n                                'year': 'MMM DD',\n                            }\n                        },\n                        distribution: 'linear',\n                        gridLines: {\n                            color: this.props.isBackgroundLight ? \"rgba(10,10,10,.1)\" : \"rgba(250,250,250,.4)\"\n                        },\n                        ticks: {\n                            fontColor: this.props.isBackgroundLight ? \"rgba(10,10,10,.8)\" : \"rgba(250,250,250,1)\",\n                        }\n                    }],\n                    yAxes : [{\n                        ticks : {\n                            stepSize: 1,\n                            beginAtZero : true,\n    \n                            userCallback: function(item) {\n                                return minutesToHours(item)\n                            },\n                            maxTicksLimit: 20,\n                            fontColor: this.props.isBackgroundLight ? \"rgba(10,10,10,.8)\" : \"rgba(250,250,250,1)\",\n                        },   \n                        gridLines: {\n                            color: this.props.isBackgroundLight ? \"rgba(10,10,10,.1)\" : \"rgba(250,250,250,.4)\"\n                        },\n                    }],\n                },\n                legend:{\n                    display: false\n                }\n            }\n        });\n    }\n\n\n    render() {\n        return (\n            <div >\n                <div className=\"center\">\n                    {this.props.isBackgroundLight ? \n                    <select className=\"pa1 ba b--green bg-white\" style={{color: \"black\"}}  onChange={this.changeIndexNumber} id=\"categories\"></select>\n                    :\n                    <select className=\"pa1 ba b--green bg-black\" style={{color: \"white\"}}  onChange={this.changeIndexNumber} id=\"categories\"></select>\n                    }\n                    {this.props.isBackgroundLight ? \n                    <select onChange={this.changeTimePeriod} id=\"timePeriod\" className=\"pa1 ba b--green bg-white\" style={{color: \"black\"}}></select>\n                    :\n                    <select onChange={this.changeTimePeriod} id=\"timePeriod\" className=\"pa1 ba b--green bg-black\" style={{color: \"white\"}}></select>\n                    }\n                </div>\n                <canvas\n                    id=\"myChart\"\n                    ref={this.chartRef}\n                />\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\n\nclass Card extends Component {\n    deleteSession=()=>{\n        this.props.removeSessionFromState(this.props.session)\n        let solvesToDB = this.props.solves.filter(sessions=>{\n            return sessions.session!==this.props.uniqueSession\n        })\n        this.props.send(solvesToDB)\n        let offline = JSON.parse(localStorage.getItem(\"offline\"))\n        if(offline){\n            localStorage.setItem(\"offlinesolves\", JSON.stringify({\"solves\": [...solvesToDB]}))\n        }\n        this.props.removeFromSolvesInterface(this.props.uniqueSession)\n        this.props.removeFromSolves(this.props.uniqueSession)\n        let x = this.props.uniqueSessionsDB\n        x.splice(x.indexOf(this.props.uniqueSession), 1)\n        if (x.length===0){\n            this.props.getSessionNumber(1)\n            this.props.getInterfaceSession(1)\n            this.props.getSessionNameOnLoad(null, \"3x3\")\n        }else if (this.props.uniqueSession===this.props.sessions) {\n            let c = x.length \n            // this.props.getSessionNumber(Math.max(...x))\n            // this.props.getInterfaceSession(c)\n            this.props.loadPastSessionSolveData(Math.max(...x), c,false)\n        } else {\n            let a = [...x].sort(this.compare).indexOf(this.props.sessions)\n            this.props.getInterfaceSession(a+1)\n        }\n    }\n\n    removeSessionDB = () =>{\n        this.props.removeFromUniqueSessionsDB(this.props.uniqueSession) \n    }\n\n    deleteFunc = () => {\n        const runDelete = async () => {\n            await this.deleteSession()\n            await this.removeSessionDB()\n            await this.props.getSolves()\n        };\n        if (this.props.isConfirmSessionDelete){\n            let confirm = window.confirm(`Are you sure you would like to remove session ${this.props.sessionDisplayName}? Action cannot be undone.`)\n            if (confirm) {\n                runDelete()\n            }\n        }else{\n            runDelete()\n        }\n    };\n\n    compare = (a,b) => {\n        return a-b\n    }\n\n    test = () => {\n        console.log(this.props.uniqueSessionsDB)\n    }\n    \n    render() {\n        return(\n            <div className=\"summary-center\">\n                {/* <button onClick={this.test}>Card</button> */}\n                <div id=\"max-width\" className={this.props.isBackgroundLight ? \" bg-white dib br3 pa3 ma2 bw2 shadow-5\" : \" bg-black dib br3 pa3 ma2 bw2 shadow-5\"}>\n                    \n                    {this.props.puzzle ? \n                    <h2 className=\"tc\" style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Session: {this.props.sessionDisplayName} | {this.props.puzzle}</h2>\n                    :\n                    <h2 className=\"tc\" style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Session: {this.props.sessionDisplayName}</h2>\n\n                    }\n                    {this.props.isSessionName ? \n                    <h4 className=\"tc\" style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Name: {this.props.sessionname}</h4>\n                    :\n                    <h4> </h4>\n                    }\n                    {this.props.date ? \n                    <h4 className=\"tc\" style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Date: {this.props.date}</h4>\n                    :\n                    <h4> </h4>\n                    }\n                    {\n                    this.props.isCompact ? \n                    null\n                    :\n                    <h4 className=\"display-linebreak\" style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>{this.props.row}</h4>\n                    }\n                    <h4 className=\"tc\" style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Average: {this.props.average}</h4>\n                    <h4 className=\"tc\" style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Best single: {this.props.puzzleBest[this.props.sessionDisplayName-1]}</h4>\n                    <h4 className=\"tc\" style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Worst single: {this.props.puzzleWorst[this.props.sessionDisplayName-1]}</h4>\n                    <div className=\"tc\">\n                    {\n                        this.props.ao5 ? \n                    <table className=\"summary-center\">\n                        <thead>\n                            <tr>\n                                <td>\n                                </td>\n                                <td>\n                                    <h4>Current:</h4>\n                                </td>\n                                <td>\n                                    <h4>Best:</h4>\n                                </td>\n                                <td>\n                                    <h4>Worst:</h4>\n                                </td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {this.props.mo3 ? \n                        <tr>\n                            <td>\n                                <h4>\n                                mo3\n                                </h4>\n                            </td>\n                        </tr>\n                        :\n                        <tr></tr>\n                        }\n                        {this.props.ao5 ? \n                        <tr>\n                            <td>\n                                <h4>\n                                ao5\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao5}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao5BestAndWorst[1]}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao5BestAndWorst[0]}\n                                </h4>\n                            </td>\n                        </tr>\n                        :\n                        <tr></tr>\n                        }\n                        {this.props.ao12 ? \n                        <tr>\n                            <td>\n                                <h4>\n                                ao12\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao12}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao12BestAndWorst[1]}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao12BestAndWorst[0]}\n                                </h4>\n                            </td>\n                        </tr>\n                        :\n                        <tr></tr>\n                        }\n                        {this.props.ao25 ? \n                        <tr>\n                            <td>\n                                <h4>\n                                ao25\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao25}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao25BestAndWorst[1]}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao25BestAndWorst[0]}\n                                </h4>\n                            </td>\n                        </tr>\n                        :\n                        <tr></tr>\n                        }\n                        {this.props.ao50 ? \n                        <tr>\n                            <td>\n                                <h4>\n                                ao50\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao50}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao50BestAndWorst[1]}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao50BestAndWorst[0]}\n                                </h4>\n                            </td>\n                        </tr>\n                        :\n                        <tr></tr>\n                        }\n                        {this.props.ao100 ? \n                        <tr>\n                            <td>\n                                <h4>\n                                ao100\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao100}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao100BestAndWorst[1]}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao100BestAndWorst[0]}\n                                </h4>\n                            </td>\n                        </tr>\n                        :\n                        <tr></tr>\n                        }\n                        {this.props.ao200 ? \n                        <tr>\n                            <td>\n                                <h4>\n                                ao200\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao200}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao200BestAndWorst[1]}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao200BestAndWorst[0]}\n                                </h4>\n                            </td>\n                        </tr>\n                        :\n                        <tr></tr>\n                        }\n                        {this.props.ao500 ? \n                        <tr>\n                            <td>\n                                <h4>\n                                ao500\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao500}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao500BestAndWorst[1]}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao500BestAndWorst[0]}\n                                </h4>\n                            </td>\n                        </tr>\n                        :\n                        <tr></tr>\n                        }\n                        {this.props.ao1000 ? \n                        <tr>\n                            <td>\n                                <h4>\n                                ao1000\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao1000}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao1000BestAndWorst[1]}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao1000BestAndWorst[0]}\n                                </h4>\n                            </td>\n                        </tr>\n                        :\n                        <tr></tr>\n                        }\n                        {this.props.ao5000 ? \n                        <tr>\n                            <td>\n                                <h4>\n                                ao5000\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao5000}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao5000BestAndWorst[1]}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao5000BestAndWorst[0]}\n                                </h4>\n                            </td>\n                        </tr>\n                        :\n                        <tr></tr>\n                        }\n                        {this.props.ao10000 ? \n                        <tr>\n                            <td>\n                                <h4>\n                                ao10000\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao10000}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao10000BestAndWorst[1]}\n                                </h4>\n                            </td>\n                            <td>\n                                <h4>\n                                {this.props.ao10000BestAndWorst[0]}\n                                </h4>\n                            </td>\n                        </tr>\n                        :\n                        <tr></tr>\n                        }\n                        </tbody>\n                    </table>\n                        :\n                        <table></table>\n                        }\n                        <h1><button className=\"button2\" onClick={()=>this.props.loadPastSessionSolveData(this.props.uniqueSession, this.props.ind, true)} style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"white\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Resume Session</button></h1>\n                        <button className=\"button2\" onClick={this.deleteFunc} style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"white\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Delete Session</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Card;","import React, { Component } from \"react\";\nimport Card from \"./Card\";\n\nclass CardList extends Component {\n    compare = (a,b) => {\n        return b - a\n    } \n\n    checkIsCompact = () => {\n        if (this.props.isCompact) {\n            document.getElementById('sessionconfirm').checked = true\n        }\n    }\n\n    componentDidMount() {\n        this.checkIsCompact()\n        console.log('hello')\n    }\n\n    average = (solve, ao) => {\n        let timesMS = []\n        let divisor = 0\n        let dnfCount = 0\n        let totalMS = 0\n        let finalAverage = \"\"\n        let solves = [...solve].reverse()\n        for(let i = 0; i<ao; i++){\n            divisor++\n            if(solves[i].isplustwo){\n                timesMS.push(Number(solves[i].millisecondstwo))\n            }else if (solves[i].isdnf) {\n                dnfCount++\n            }else{\n                timesMS.push(Number(solves[i].milliseconds))\n            }\n        }\n        timesMS.sort(this.compare)\n        if(dnfCount===0){\n            timesMS.pop()\n        }\n        timesMS.shift()\n        for (const milliseconds of timesMS){\n            totalMS += Number(milliseconds)\n        }\n        let averageMS = totalMS / (divisor-2)\n        if(dnfCount>1){\n            finalAverage+=\"DNF\"\n        }else{\n            let hours = Math.floor((averageMS / 3600000))\n            let minutes = Math.floor((averageMS / 60000)%60)\n            let seconds = Math.floor((averageMS / 1000)%60)\n            let milliseconds = Math.round(averageMS % 1000)\n            finalAverage = \"\"\n            if (hours > 0){\n                finalAverage += hours +\":\"\n            }\n            if (minutes > 0){\n                finalAverage += minutes +\":\"\n                if(seconds<10){\n                    finalAverage+=\"0\"\n                }\n            }\n            finalAverage += seconds + \".\"\n            if (milliseconds < 10){\n                finalAverage += \"00\"\n            }\n            if (milliseconds < 100){\n                if (milliseconds > 9){\n                    finalAverage += \"0\"\n                }\n            }\n            finalAverage += milliseconds\n        }\n        return finalAverage\n    }\n\n\n\n    bestWorstAverage = (solve, ao) => {\n        let finalAverages = []\n        let solves = [...solve].reverse()\n        let loopNumber = solves.length - (ao-1)\n        let averagesMS = []\n        while(loopNumber>0){\n            let divisor = 0\n            let totalMS = 0\n            let solvesArray = []\n            let averageMS = 0 \n            let dnfCount = 0\n            for (let i = 0; i < ao; i++){\n                divisor++\n                if(solves[i].isplustwo){\n                    solvesArray.push(Number(solves[i].millisecondstwo))\n                }else if (solves[i].isdnf) {\n                    dnfCount++\n                }else{\n                    solvesArray.push(Number(solves[i].milliseconds))\n                }\n            }\n            solvesArray.sort(this.compare)\n            if(dnfCount===0){\n                solvesArray.pop()\n            }\n            solvesArray.shift()\n            for (const milliseconds of solvesArray){\n                totalMS += Number(milliseconds)\n            }\n            loopNumber--\n            averageMS = totalMS / (divisor-2)\n            if(dnfCount<2){\n                averagesMS.push(averageMS)\n            }\n            solves.shift()  \n            // finalAverages.push(finalAverage)\n        }\n        let bestAndWorst = []\n        bestAndWorst.push(Math.max(...averagesMS))\n        bestAndWorst.push(Math.min(...averagesMS))\n        for (let i = 0; i<2; i++){\n            let finalAverage = \"\"\n            let hours = Math.floor((bestAndWorst[i] / 3600000))\n            let minutes = Math.floor((bestAndWorst[i] / 60000)%60)\n            let seconds = Math.floor((bestAndWorst[i] / 1000)%60)\n            let milliseconds = Math.round(bestAndWorst[i] % 1000)\n            finalAverage = \"\"\n            if (hours > 0){\n                finalAverage += hours +\":\"\n            }\n            if (minutes > 0){\n                finalAverage += minutes +\":\"\n                if(seconds<10){\n                    finalAverage+=\"0\"\n                }\n            }\n            finalAverage += seconds + \".\"\n            if (milliseconds < 10){\n                finalAverage += \"00\"\n            }\n            if (milliseconds < 100){\n                if (milliseconds > 9){\n                    finalAverage += \"0\"\n                }\n            }\n            finalAverage += milliseconds\n            finalAverages.push(finalAverage)\n        }\n        return finalAverages\n    }\n \n    render() {\n        let sessionDisplayName = (this.props.solvesSorted.length+1)\n        return(\n            <div>\n                {\n                this.props.solvesSorted.map((solve,i)=>{\n                    this.bestWorstAverage(solve, 5)\n                    let ao5 \n                    let ao12\n                    let ao25\n                    let ao50\n                    let ao100\n                    let ao200\n                    let ao500\n                    let ao1000\n                    let ao5000\n                    let ao10000\n                    let ao5BestAndWorst\n                    let ao12BestAndWorst\n                    let ao25BestAndWorst\n                    let ao50BestAndWorst\n                    let ao100BestAndWorst\n                    let ao200BestAndWorst\n                    let ao500BestAndWorst\n                    let ao1000BestAndWorst\n                    let ao5000BestAndWorst\n                    let ao10000BestAndWorst \n                    if(solve.length>4){\n                        ao5 = this.average(solve, 5)\n                        ao5BestAndWorst = this.bestWorstAverage(solve,5)\n                    }\n                    if(solve.length>11){\n                        ao12 = this.average(solve, 12)\n                        ao12BestAndWorst = this.bestWorstAverage(solve,12)\n                    }\n                    if(solve.length>24){\n                        ao25 = this.average(solve, 25)\n                        ao25BestAndWorst = this.bestWorstAverage(solve,25)\n                    }\n                    if(solve.length>49){\n                        ao50 = this.average(solve, 50)\n                        ao50BestAndWorst = this.bestWorstAverage(solve,50)\n                    }\n                    if(solve.length>99){\n                        ao100 = this.average(solve, 100)\n                        ao100BestAndWorst = this.bestWorstAverage(solve,100)\n                    }\n                    if(solve.length>199){\n                        ao200 = this.average(solve, 200)\n                        ao200BestAndWorst = this.bestWorstAverage(solve,200)\n                    }\n                    if(solve.length>499){\n                        ao500 = this.average(solve, 500)\n                        ao500BestAndWorst = this.bestWorstAverage(solve,500)\n                    }\n                    if(solve.length>999){\n                        ao1000 = this.average(solve, 1000)\n                        ao1000BestAndWorst = this.bestWorstAverage(solve,1000)\n                    }\n                    if(solve.length>4999){\n                        ao5000 = this.average(solve, 5000)\n                        ao5000BestAndWorst = this.bestWorstAverage(solve,5000)\n                    }\n                    if(solve.length>9999){\n                        ao10000 = this.average(solve, 10000)\n                        ao10000BestAndWorst = this.bestWorstAverage(solve,10000)\n                    }\n                    let session = -1\n                    let date = \"\"\n                    let rawDate2 = \"\"\n                    let rawDate3 = \"\"\n                    let rawDate4 = \"\"\n                    session++\n                    sessionDisplayName--\n                    let totalMS = 0\n                    let divisor = 0\n                    let avgMS = 0\n                    let average = \"0.000\"\n                    let uniqueSessions = \"\"\n                    let ind = this.props.solvesSorted.length-i\n                    let sessionname = \"\"\n                    let isSessionName=false\n                    let puzzle = \"\"\n                    let solveNumber = 0\n                    let solveid = []\n                    const row = solve.map((solve2, index)=>{\n                    uniqueSessions = solve2.session\n                    if (Object.keys(this.props.interfaceSession).length>0){\n                        if (solve2.session in this.props.interfaceSession){\n                            sessionDisplayName = this.props.interfaceSession[solve2.session]\n                            ind=this.props.interfaceSession[solve2.session]\n                        }\n                    }\n                    solveid = [...solveid, solve2.solveid]\n                    solveNumber = solve2.solvenumber\n                    if (index===0){\n                        if (solve2.sessionname){\n                            sessionname = solve2.sessionname\n                            isSessionName = true\n                        }else{\n                            isSessionName=false\n                        }\n                        puzzle = solve2.puzzle\n                        date=\"\"\n                        if (solve2.date){\n                            let rawDate = solve2.date\n                            rawDate2 = rawDate.slice(5,7)\n                            rawDate3 = rawDate.slice(8,10)\n                            rawDate4 = rawDate.slice(0,4)\n                            date += rawDate2 + \"-\"\n                            date += rawDate3 + \"-\"\n                            date += rawDate4\n                        }  \n                    }\n                    if (solve2.isdnf){\n                    \n                    }else if (solve2.isplustwo){\n                        totalMS += Number(solve2.millisecondstwo)\n                        divisor += 1\n\n                    }else{\n                        totalMS += Number(solve2.milliseconds)\n                        divisor += 1\n                    }\n                    if (divisor > 0){\n                        avgMS = (totalMS/divisor)\n                        let hours = Math.floor((avgMS / 3600000))\n                        let minutes = Math.floor((avgMS / 60000)%60)\n                        let seconds = Math.floor((avgMS / 1000)%60)\n                        let milliseconds = Math.round(avgMS % 1000)\n                        average = \"\"\n                        if (hours > 0){\n                            average += hours +\":\"\n                        }\n                        if (minutes > 0){\n                            average += minutes +\":\"\n                            if(seconds<10){\n                                average+=\"0\"\n                            }\n                        }\n                        average += seconds + \".\"\n                        if (milliseconds < 10){\n                            average += \"00\"\n                        }\n                        if (milliseconds < 100){\n                            if (milliseconds > 9){\n                                average += \"0\"\n                            }\n                        }\n                        average += milliseconds\n                    }\n                    return(\n                    <table key={index}>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    {index+1}.\n                                </td>\n                                <td>\n                                    {solve2.isplustwo ?\n                                    solve2.plustwo\n                                    :\n                                    solve2.solve\n                                    }\n                                </td>\n                                {solve2.scramble ? \n                                (solve2.scramble.includes(\"++\")? \n                                <td>\n                                    <h4 className=\"megaminx megaminxSmallCardListScramble min-width\">\n                                    {solve2.scramble}\n                                    </h4>\n                                </td>\n                                :\n                                <td>\n                                    <h4>\n                                    {solve2.scramble}\n                                    </h4>\n                                </td>\n                                )\n                                :\n                                <td></td>\n                                }\n                                <td>\n                                    {solve2.isdnf ?\n                                    \"(DNF)\"\n                                    :\n                                    \"\"\n                                    }\n                                </td>\n                                <td>\n                                    {solve2.isplustwo ?\n                                    \"(+2)\"\n                                    :\n                                    \"\"\n                                    }\n                                </td>\n                            </tr>\n                        </tbody> \n                    </table>\n                    )\n                }) \n                    return(<Card\n                        isCompact={this.props.isCompact}\n                        loadPastSessionSolveData={this.props.loadPastSessionSolveData}\n                        removeFromSolvesInterface={this.props.removeFromSolvesInterface}\n                        send={this.props.send}\n                        ao5BestAndWorst={ao5BestAndWorst}\n                        ao12BestAndWorst={ao12BestAndWorst}\n                        ao25BestAndWorst={ao25BestAndWorst}\n                        ao50BestAndWorst={ao50BestAndWorst}\n                        ao100BestAndWorst={ao100BestAndWorst}\n                        ao200BestAndWorst={ao200BestAndWorst}\n                        ao500BestAndWorst={ao500BestAndWorst}\n                        ao1000BestAndWorst={ao1000BestAndWorst}\n                        ao5000BestAndWorst={ao5000BestAndWorst}\n                        ao10000BestAndWorst ={ao10000BestAndWorst}\n                        ao5={ao5}\n                        ao12={ao12}\n                        ao25={ao25}\n                        ao50={ao50}\n                        ao100={ao100}\n                        ao200={ao200}\n                        ao500={ao500}\n                        ao1000={ao1000}\n                        ao5000={ao5000}\n                        ao10000={ao10000}\n                        puzzleBest={[...this.props.puzzleBest].reverse()}\n                        puzzleWorst={[...this.props.puzzleWorst].reverse()}\n                        getSessionNameOnLoad={this.props.getSessionNameOnLoad}\n                        isConfirmSessionDelete={this.props.isConfirmSessionDelete}\n                        isConfirmSolveDelete={this.props.isConfirmSolveDelete}\n                        getSolves = {this.props.getSolves}\n                        solveNumber={solveNumber}\n                        removeFromSolves={this.props.removeFromSolves}\n                        puzzle={puzzle}\n                        isSessionName={isSessionName}\n                        sessionname={sessionname}\n                        ind={ind}\n                        sessions={this.props.sessions}\n                        getSessionNumber={this.props.getSessionNumber}\n                        getInterfaceSession={this.props.getInterfaceSession}\n                        removeFromUniqueSessionsDB={this.props.removeFromUniqueSessionsDB}\n                        uniqueSessionsDB={this.props.uniqueSessionsDB} \n                        uniqueSession={uniqueSessions}\n                        date={date}\n                        sessionDisplayName={sessionDisplayName}\n                        removeSessionFromState={this.props.removeSessionFromState}\n                        average={average}\n                        isBackgroundLight={this.props.isBackgroundLight}\n                        key={i}\n                        session={session} \n                        row={row} \n                        id={this.props.id}\n                        solves={this.props.solves}\n                        />\n                    );\n                }) \n                }\n            </div>\n        );\n    }\n}\n\n\n\nexport default CardList;\n\n\n","import React, { Component } from \"react\"\nimport moment from \"moment\"\n\nclass ImportSolves extends Component{\n\n    state={\n        solve: \"\",\n        scramble: \"\",\n        session: \"\",\n        hours: \"\",\n        minutes: \"\", \n        secondsTwo: \"\", \n        seconds: \"\",\n        milliseconds: \"\",\n        displayTimeFormatted: \"\",\n        isIncorrectFormat: false, \n    }\n\n    jsonError = (input) => {\n        try {\n            return JSON.parse(input);\n        } catch (err) {\n            return false;\n        }\n    }   \n\n    importLoop = () => {\n        let sessionArray = [...this.props.uniqueSessionsDB].reverse()\n        let session = 0 \n        if (this.props.uniqueSessionsDB.length>0){\n            session = Math.max(...this.props.uniqueSessionsDB) \n        }\n        let error = this.jsonError(this.props.importSolves)\n        if (error !== false){\n            this.setState({\n                isIncorrectFormat: false,\n            })\n            let x = JSON.parse(this.props.importSolves)\n            delete x[\"properties\"]\n            let y = JSON.parse(this.props.importSolves)\n            let propertiesArray = []\n            if (y[\"properties\"]){\n                let z = JSON.parse(y[\"properties\"][\"sessionData\"])\n                for (const value of Object.values(z)){\n                    propertiesArray.push(value)\n                }\n            }\n            let solvesArray = []\n            var values1 = []\n            for (const value of Object.values(x)) {\n                if(value.length>0){\n                    values1.push(value)\n                }\n            }\n            \n            values1.map((solve1,index)=>{\n                session++\n                sessionArray.push(session)\n                let puzzleType = \"\"\n                let sessionName = \"\"\n                if (propertiesArray[index]){\n                    if (propertiesArray[index][\"opt\"]['scrType']){\n                        puzzleType = propertiesArray[index][\"opt\"]['scrType']\n                    }else{\n                        puzzleType = \"\"\n                    }\n                    if (propertiesArray[index][\"name\"]){\n                        sessionName = propertiesArray[index][\"name\"]\n                    }else{\n                        sessionName = null\n                    }\n                }\n                for (const solve of solve1){\n                    let solveToDB = {}\n                    if (puzzleType === \"\"){\n                        solveToDB[\"puzzle\"]= \"3x3\"\n                    }\n                    if (puzzleType === \"mgmp\"){\n                        solveToDB[\"puzzle\"] = \"Megaminx\"\n                    }\n                    if (puzzleType === \"777wca\"){\n                        solveToDB[\"puzzle\"] = \"7x7\"\n                    }\n                    if (puzzleType === \"222so\"){\n                        solveToDB[\"puzzle\"] = \"2x2\"\n                    }\n                    if (puzzleType === \"444bld\"){\n                        solveToDB[\"puzzle\"] = \"4x4 BLD\"\n                    }\n                    if (puzzleType === \"555bld\"){\n                        solveToDB[\"puzzle\"] = \"5x5 BLD\"\n                    }\n                    if (puzzleType === \"sqrs\"){\n                        solveToDB[\"puzzle\"] = \"Square-1\"\n                    }\n                    if (puzzleType === \"skbo\"){\n                        solveToDB[\"puzzle\"] = \"Skewb\"\n                    }\n                    if (puzzleType === \"pyrso\"){\n                        solveToDB[\"puzzle\"] = \"Pyraminx\"\n                    }\n                    if (puzzleType === \"clkwca\"){\n                        solveToDB[\"puzzle\"] = \"Clock\"\n                    }\n                    if (puzzleType === \"333oh\"){\n                        solveToDB[\"puzzle\"] = \"3x3 OH\"\n                    }\n                    if (puzzleType === \"333ni\"){\n                        solveToDB[\"puzzle\"] = \"3x3 BLD\"\n                    }\n                    if (puzzleType === \"666wca\"){\n                        solveToDB[\"puzzle\"] = \"6x6\"\n                    }\n                    if (puzzleType === \"555wca\"){\n                        solveToDB[\"puzzle\"] = \"5x5\"\n                    }\n                    if (puzzleType === \"444wca\"){\n                        solveToDB[\"puzzle\"] = \"4x4\"\n                    }\n                    if (puzzleType === \"r3ni\"){\n                        solveToDB[\"puzzle\"] = \"Multi-BLD\"\n                    }\n                    \n                    const hours = Math.floor(solve[0][1] / 3600000)\n                    const minutes = Math.floor((solve[0][1] / 60000)%60)\n                    const seconds = Math.floor((solve[0][1] / 1000)%60)\n                    const milliseconds = (solve[0][1] % 1000)\n                    let msTwo = Number(solve[0][1]) + 2000\n                    const hoursTwo = Math.floor(msTwo / 3600000)\n                    const minutesTwo = Math.floor((msTwo / 60000)%60)\n                    const secondsTwo = Math.floor((msTwo / 1000)%60)\n                    const millisecondsTwo = (msTwo % 1000)\n                    var time = \"\"\n                    let timeTwo = \"\"\n                    if (hours > 0){\n                        time += hours + \":\"\n                    }\n                    if(minutes>0){\n                        time += minutes \n                        time += \":\"\n                        if(seconds<10){\n                            time+=\"0\"\n                        }\n                    }\n                    time += seconds  + \".\"\n                    if (milliseconds < 10){\n                        time += \"00\"\n                    }\n                    if (milliseconds < 100){\n                        if (milliseconds > 9){\n                            time += \"0\"\n                        }\n                    }\n                    time += milliseconds\n                    \n                    if (hoursTwo > 0){\n                        timeTwo += hoursTwo + \":\"\n                    }\n                    if(minutesTwo>0){\n                        timeTwo += minutesTwo \n                        timeTwo += \":\"\n                        if(secondsTwo<10){\n                            timeTwo+=\"0\"\n                        }\n                    }\n                    timeTwo += secondsTwo  + \".\"\n                    if (millisecondsTwo < 10){\n                        timeTwo += \"00\"\n                    }\n                    if (millisecondsTwo < 100){\n                        if (millisecondsTwo > 9){\n                            timeTwo += \"0\"\n                        }\n                    }\n                    timeTwo += millisecondsTwo\n                    \n                    let solveid = \"\"\n                    solveid += Date.now() \n                    \n                    if (solve[0][0]===2000){\n                        solveToDB[\"isplustwo\"] = true\n                    }\n                    if (solve[0][0]===0){\n                        solveToDB[\"isplustwo\"] = false\n                    }\n                    if (solve[0][0]===-1){\n                        solveToDB[\"isdnf\"] = true\n                    }else{\n                        solveToDB[\"isdnf\"] = false\n                    }\n                    solveToDB[\"solve\"]=time\n                    solveToDB[\"plustwo\"] = String(timeTwo)\n                    solveToDB[\"milliseconds\"]=String(solve[0][1])\n                    solveToDB[\"millisecondstwo\"] = String(Number(solve[0][1]) + 2000)\n                    if (solve[1]===null){\n                        solveToDB[\"scramble\"]=null\n                    }else{\n                        solveToDB[\"scramble\"]=solve[1]\n                    }\n                    var abc2 = solve[3]*1000\n                    if (solve[3] === null){\n                        solveToDB[\"date\"]=null\n                    }else{\n                        var dateString = moment.unix(abc2/1000).format(\"YYYY-MM-DD\");\n                        let date = new Date(abc2).toISOString()\n                        date = date.slice(0,10)\n                        solveToDB[\"date\"]= dateString\n                    }\n                    solveToDB[\"session\"]=session\n                    solveToDB[\"id\"]=this.props.id\n                    if (solve[3] === null){\n                        solveToDB[\"unix\"]= null\n                    }else{\n                        solveToDB[\"unix\"]=solve[3]\n                    }\n                    solveToDB[\"sessionname\"]=sessionName\n                    if (solve[4]){\n                        if(sessionName===\"\" && solve[4]===\"\"){\n                            solveToDB[\"sessionname\"]=null\n                        }else{\n                            solveToDB[\"sessionname\"]=solve[4]\n                        }\n                    }\n                    if (solve[5]){\n                        solveToDB[\"puzzle\"] = solve[5]\n                    }\n                    solveToDB[\"solveid\"] = solveid\n                    solvesArray.push(solveToDB)\n                }\n                return(null)\n            }) \n            this.props.getSolvesFromImport(solvesArray)\n            this.props.addToUniqueSessionsDB(sessionArray)\n            setTimeout(()=>this.props.manageSolveData(),100)\n            setTimeout(()=>this.props.loadPastSessionSolveData(session, sessionArray.length, false),100)\n            // setTimeout(()=>this.props.getInterfaceSession(sessionArray.length),100)\n            // setTimeout(()=>this.props.getSessionNumber(session),100)\n        }else{\n            this.setState({\n                isIncorrectFormat: true,\n            })\n        }\n    }\n\n    handleButtonClick = () => {\n        const test1 = async () => {\n            await this.importLoop()\n            await this.props.handleImportSolvesSubmit()\n            await setTimeout(()=>this.props.getSolves(),1)\n        };\n        test1();\n    };\n\n    sessionNumber = () => {\n        this.setState({\n            session: Math.max(...this.props.uniqueSessionsDB)\n        })\n    }\n\n    componentDidMount() {\n        setTimeout(()=>this.sessionNumber(),10)\n    }\n\n    render() {\n        return(\n            <div className=\"center\">\n                {this.props.isImportFromFile ? \n                    <div>\n                        <h4>Copy and paste .json data from .txt file</h4>\n                        {this.props.isBackgroundLight ? \n                        <textarea style={{color: \"rgb(25, 25, 25)\"}} id=\"importSolves\" className=\"pa2 ba b--green bg-white\" onChange={this.props.handleImportSolvesChange} rows=\"13\" cols=\"80\"></textarea>\n                        :\n                        <textarea style={{color: \"white\"}}  id=\"importSolves\" className=\"pa2 ba b--green bg-black\" onChange={this.props.handleImportSolvesChange} rows=\"13\" cols=\"80\"></textarea>\n                        }\n                    </div>\n                    :\n                    <div></div>\n                }\n\n                {this.state.isIncorrectFormat ? \n                <h4 style={{color: \"red\"}}>unreadable format</h4>\n                :\n                <h4> </h4>\n                }\n                {this.props.isImportFromFile ? \n                <h1><button onClick={this.handleButtonClick} style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\" >Import</button></h1>\n                :\n                <h1><button onClick={this.props.isImportFromFileFunc} style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\" >Import From File</button></h1>\n                }\n                <br></br>\n            </div>\n        )\n    }\n}\n\nexport default ImportSolves","import React, { Component } from \"react\"\nimport moment from \"moment\"\n\nclass ImportManual extends Component{\n\n    state={\n        session: null,\n        count: 0,\n        pastSessionName: null,\n        pastPuzzle: null,\n        pastDate: null,\n        isDateWrong: false,\n        isSolveEntered: false,\n        isTimeWrong: false,\n    }\n\n    componentDidMount(){\n        this.getSession()\n    }\n\n    getSession = () => {\n        this.setState({\n            session: Math.max(...this.props.uniqueSessionsDB)+1\n        })\n    }\n\n    sendToDB = () =>{\n        let isSolveEntered = false\n        if (this.props.time > 0){\n            isSolveEntered = true\n        }\n        if (isSolveEntered){\n            this.setState({\n                isSolveEntered: false\n            })\n            let result = true\n            if (this.props.date) {\n                let regex = /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/\n                let date = this.props.date\n                result = regex.test(date)\n            }\n            if (result){\n                if (this.state.isDateWrong){\n                    this.setState({\n                        isDateWrong: false,\n                    })\n                }\n                    if (this.props.time) {\n                        let regex = /^[ 0-9.,]/\n                        let time = this.props.time\n                        result = regex.test(time)\n                    }\n                    if (result){\n                        if (this.state.isTimeWrong){\n                            this.setState({\n                                isTimeWrong: false,\n                            })\n                        }\n                    let tempSession = this.state.session\n                    if (this.state.count > 0) {\n                        if (this.props.importManualTextAreaName !== this.state.pastSessionName\n                            || this.props.date !== this.state.pastDate\n                            || this.props.puzzle !== this.state.pastPuzzle){\n                            this.setState(prevState=>({\n                                session: prevState.session + 1\n                            }))\n                            tempSession += 1\n                        }\n                    }\n                    var x = this.props.time\n                    var y = x.match(/\\d+/g)\n                    var z = y.slice().reverse()\n                    var ms = 0\n                    z.map((number, index) =>{\n                        if(index===0){\n                            if (number.length===1){\n                                ms+=number*100\n                            }\n                            if (number.length===2){\n                                ms+=number*10\n                            }\n                            if (number.length===3){\n                                ms+=number*1\n                            }\n                        }\n                        if(index===1){\n                            ms+=number*1000\n                        }\n                        if(index===2){\n                            ms+=number*60000\n                        }\n                        if(index===3){\n                            ms+=number*3600000\n                        }\n                        return(null)\n                    })\n                    let timeFormatted = \"\"\n                    let one = \"\"\n                    let two = \"\"\n                    let three = \"\"\n                    let four = \"\"\n            \n                    four += \".\" + (y[y.length-1])\n                    if(y[y.length-1].length===1){\n                        four += \"00\"\n                    }\n                    if(y[y.length-1].length===2){\n                        four += \"0\"\n                    }\n                    if(y[y.length-2]){\n                        if(y[y.length-3]){\n                            if (y[y.length-2]<10){\n                                if (!y[y.length-2].includes(0)){\n                                    three+=\"0\"\n                                }\n                            }\n                        }\n                        three += y[y.length-2]\n                    }else{\n                        three+=\"0\"\n                    }\n                    if(y[y.length-3]){\n                        if(y[y.length-4]){\n                            if (y[y.length-3]<10){\n                                if (!y[y.length-3].includes(0)){\n                                    two+=\"0\"\n                                }\n                            }\n                        }\n                        two += y[y.length-3]\n                        two+=\":\"\n                    }\n                    if(y[y.length-4]){\n                        one += y[y.length-4]\n                        one+=\":\"\n                    }\n                    timeFormatted += one + two + three + four\n                    let msTwo = ms + 2000\n                    let msTwoFinal = \"\"\n                    const hours = Math.floor(msTwo / 3600000)\n                    const minutes = Math.floor((msTwo / 60000)%60)\n                    const seconds = Math.floor((msTwo / 1000)%60)\n                    const milliseconds = (msTwo % 1000)\n                    if (hours>0){\n                        msTwoFinal +=  hours + \":\"\n                    }\n                    if (minutes>0) {\n                        if (minutes < 10){\n                            msTwoFinal += \"0\"\n                        }\n                        msTwoFinal +=  minutes + \":\"\n                        if (seconds < 10){\n                            msTwoFinal += \"0\"\n                        }\n                    }\n                    if (minutes === \"0\" || minutes===\"00\"){\n                        msTwoFinal += \"0:\"\n                    }\n                    if (seconds > 0) {\n                        msTwoFinal += seconds + \".\"\n                    }\n                    msTwoFinal += milliseconds\n                    \n                    \n                    let unix = null\n                    if (this.props.date){\n                        unix = moment(this.props.date, \"YYYY-MM-DD\").unix();\n                    }\n                    \n                    let solveid = \"\"\n                    solveid+=Date.now()\n                    \n                    let solvesToAppState = {}\n                    \n                    let scramble = \"\"\n\n                    if(this.props.puzzle===\"Multi-BLD\"){\n                        let multiScramble = this.props.scramble.split(\" \")\n                        for (const letter of multiScramble){\n                            if(letter.includes(\")\")){\n                                scramble += \"\\n\" \n                            }\n                            scramble += letter\n                            scramble+=\" \"\n                        }\n                    }else if(this.props.puzzle===\"Megaminx\"){\n                        let megaminxScramble = this.props.scramble.split(\" \")\n                        for (const letter of megaminxScramble) { \n                            scramble += letter\n                            if (letter ===\"U\" || letter===\"U'\"){\n                                scramble += \"\\n\"\n                            }\n                            scramble+=\" \"\n                        }\n                    }else{\n                        scramble=this.props.scramble\n                    }\n\n                    solvesToAppState[\"scramble\"] = scramble\n\n                    solvesToAppState[\"id\"] = this.props.id\n                    \n                    solvesToAppState[\"session\"] = tempSession\n                    if(this.props.date===null){\n                        solvesToAppState[\"date\"] = null\n                    }else{\n                        solvesToAppState[\"date\"] = this.props.date\n                    }\n                    solvesToAppState[\"solve\"] = timeFormatted\n                    solvesToAppState[\"unix\"] = String(unix)\n                    solvesToAppState[\"puzzle\"] = this.props.puzzle\n                    solvesToAppState[\"milliseconds\"] = ms\n                    solvesToAppState[\"sessionname\"] = this.props.importManualTextAreaName\n                    solvesToAppState[\"solveid\"] = solveid\n                    solvesToAppState[\"plustwo\"] = msTwoFinal\n                    solvesToAppState[\"isdnf\"] = false\n                    solvesToAppState[\"isplustwo\"] = false\n                    solvesToAppState[\"millisecondstwo\"] = ms + 2000\n            \n                    this.props.getSolvesFromImportManual(solvesToAppState)\n                    this.props.handleImportManualSubmit()\n                    this.setState({\n                        pastSessionName: this.props.importManualTextAreaName,\n                        pastPuzzle: this.props.puzzle,\n                        pastDate: this.props.date,\n                    })\n                    this.setState(prevState=>({\n                        count: prevState.count + 1\n                    }))\n                    setTimeout(()=>this.props.getSolves(),10)\n                    setTimeout(()=>this.props.manageSolveData(), 10)\n                    setTimeout(()=>this.props.addToUniqueSessionsDB(this.state.session), 10)\n                    setTimeout(()=>this.props.loadPastSessionSolveData(this.state.session, this.props.uniqueSessionsDB.length, false),10)\n                }else{\n                    this.setState({\n                        isDateWrong: true,\n                    })\n                }\n            }else{\n                this.setState({\n                    isDateWrong: true,\n                })\n            }\n        }else{\n            this.setState({\n                isTimeWrong: true,\n            })\n        }\n    }\n\n        \n\n    render(){\n        return(\n            <div className=\"center\">\n                {this.props.isManual ? \n                <div>\n                    <h4>Time (H:M:S.MS):</h4>\n                    <input id=\"importManualTime\" rows=\"1\" cols=\"10\" style={{color: this.props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} className={this.props.isBackgroundLight ? \"pa2 ba b--green bg-white form-input\": \"pa2 ba b--green bg-black form-input\"} onChange={this.props.handleImportManualTimeChange} type=\"text\"></input>\n\n                    <h4>Scramble:</h4>\n                    <input id=\"importManualScramble\" rows=\"1\" cols=\"10\" style={{color: this.props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} className={this.props.isBackgroundLight ? \"pa2 ba b--green bg-white form-input\": \"pa2 ba b--green bg-black form-input\"} onChange={this.props.handleImportManualScrambleChange} type=\"text\"></input>\n                    <h4>\n                        Date (YYYY-MM-DD): \n                    </h4>\n                    <h4>\n                        *Use of charts requires date\n                    </h4>\n                    <input id=\"importManualDate\" rows=\"1\" cols=\"10\" style={{color: this.props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} className={this.props.isBackgroundLight ? \"pa2 ba b--green bg-white form-input\": \"pa2 ba b--green bg-black form-input\"} onChange={this.props.handleImportManualDateChange} type=\"text\"></input>\n                    <h4>Session name:</h4>\n                    <input id=\"importManualName\" rows=\"1\" cols=\"10\" style={{color: this.props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} className={this.props.isBackgroundLight ? \"pa2 ba b--green bg-white form-input\": \"pa2 ba b--green bg-black form-input\"} onChange={this.handleImportManualNameChange} type=\"text\"></input>\n                    <h4>Puzzle:</h4>\n\n                    <select className={this.props.isBackgroundLight ? \"pa2 ba b--green bg-white form-input\": \"pa2 ba b--green bg-black form-input\"} onChange={this.props.getPuzzleType} id=\"puzzle\" style={{color: this.props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}}>\n                        <option value=\"3x3\">3x3</option>\n                        <option value=\"2x2\">2x2</option>\n                        <option value=\"4x4\">4x4</option>\n                        <option value=\"5x5\">5x5</option>\n                        <option value=\"6x6\">6x6</option>\n                        <option value=\"7x7\">7x7</option>\n                        <option value=\"Pyraminx\">Pyraminx</option>\n                        <option value=\"Megaminx\">Megaminx</option>\n                        <option value=\"Skewb\">Skewb</option>\n                        <option value=\"Square-1\">Square-1</option>\n                        <option value=\"Clock\">Clock</option>\n                        <option value=\"3x3 BLD\">3x3 BLD</option>\n                        <option value=\"3x3 OH\">3x3 OH</option>\n                        <option value=\"4x4 BLD\">4x4 BLD</option>\n                        <option value=\"5x5 BLD\">5x5 BLD</option>\n                        <option value=\"Multi-BLD\">Multi-BLD</option>\n                    </select>\n                </div>\n                :\n                <div></div>\n                }\n                {this.state.isDateWrong ? \n                <h4 style={{color: \"red\"}}>Invalid date format</h4>\n                :\n                <h4> </h4>\n                }\n                {this.state.isTimeWrong ? \n                <h4 style={{color: \"red\"}}>Invalid time format</h4>\n                :\n                <h4> </h4>\n                }\n                {this.state.isSolveEntered ? \n                <h4 style={{color: \"red\"}}>You must enter a solve time</h4>\n                :\n                <h4> </h4>\n                }\n                {this.props.isManual ? \n                <h1><button onClick={this.sendToDB} className=\"button2\" style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Import</button></h1>\n                :\n                <h1><button onClick={this.props.isManualFunc} className=\"button2\" style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Import Manually</button></h1>\n                }\n            </div>\n        )\n    }\n}\n\nexport default ImportManual","import React, { Component } from \"react\"\n\nclass DownloadSolves extends Component{\n\n    state = {\n        solves: [],\n        formattedSolves: [],\n        finalOutput: {}\n    }\n    \n    download = (filename, text) => {\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n    }\n\n    getSolvesFromDashboard = () => {\n        let solves = [...this.props.solves].reverse()\n        this.setState({\n            solves: solves\n        })\n        this.formattedSolves()\n    }\n\n    formattedSolves = () => {\n        // let properties = {}\n        var masterObject = {}\n        let sessionData = {}\n        this.state.solves.map((solves, index) => {\n            let puzzleType = (solves[0].puzzle)\n            let puzzle = \"\"\n            if (puzzleType === \"3x3\"){\n                puzzle = \"\"\n            }\n            if (puzzleType === \"megaminx\"){\n                puzzle = \"mgmp\"\n            }\n            if (puzzleType === \"7x7\"){\n                puzzle = \"777wca\"\n            }\n            if (puzzleType === \"2x2\"){\n                puzzle = \"222so\"\n            }\n            if (puzzleType === \"4x4 BLD\"){\n                puzzle = \"444bld\"\n            }\n            if (puzzleType === \"5x5 BLD\"){\n                puzzle = \"555bld\"\n            }\n            if (puzzleType === \"Square-1\"){\n                puzzle = \"sqrs\"\n            }\n            if (puzzleType === \"skewb\"){\n                puzzle = \"skbso\"\n            }\n            if (puzzleType === \"pyraminx\"){\n                puzzle = \"pyrso\"\n            }\n            if (puzzleType === \"Clock\"){\n                puzzle = \"clkwca\"\n            }\n            if (puzzleType === \"3x3 OH\"){\n                puzzle = \"333oh\"\n            }\n            if (puzzleType === \"3x3 BLD\"){\n                puzzle = \"333ni\"\n            }\n            if (puzzleType === \"6x6\"){\n                puzzle = \"666wca\"\n            }\n            if (puzzleType === \"5x5\"){\n                puzzle = \"555wca\"\n            }\n            if (puzzleType === \"4x4\"){\n                puzzle = \"444wca\"\n            }\n            var session = []\n            let i = index + 1\n            let objTest = {\n                \"name\": i,\n                \"opt\": {\n                    \"scrType\": puzzle\n                },\n                \"rank\": i,\n                \"stat\": [1,0,890],\n                \"date\": [1594487042,1594487046],\n            } \n            sessionData[i] = objTest \n\n\n            // let opt = {}\n            // let newOb = {}\n            // let name = {}\n            // sessionData[\"name\"] = index + 1\n            // opt[\"scrType\"] = puzzle \n            // sessionData[\"opt\"] = opt\n            solves.map(solve => {\n                var solveArray = []\n                var time = []\n                if (solve.isplustwo){\n                    time.push(2000, Number(solve.milliseconds))\n                }else if (solve.isdnf){\n                    time.push(-1, Number(solve.milliseconds))\n                }else{\n                    time.push(0, Number(solve.milliseconds))\n                }\n                solveArray.push(time)\n                solveArray.push(solve.scramble)\n                solveArray.push(\"\")\n                solveArray.push(solve.unix)\n                solveArray.push(solve.sessionname)\n                solveArray.push(solve.puzzle)\n                session.push(solveArray)\n                return(null)\n            }) \n            masterObject[\"session\" + (index +1)] = session\n            return(null)\n        })\n        \n        // properties[\"sessionData\"] = sessionData\n        // masterObject[\"properties\"] = properties\n        this.setState({\n            finalOutput: JSON.stringify(masterObject)\n        })\n    }\n    \n\n    componentDidMount() {\n        // this.props.getSolves()\n        setTimeout(()=>this.getSolvesFromDashboard(), 500)\n    }\n        \n    render() {\n        return(\n            <div className=\"center\">\n                <div>\n                <h1><button onClick={()=>this.download(\"solves\", this.state.finalOutput)} style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\" >Export Solves</button></h1> \n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default DownloadSolves","import React, { Component } from \"react\"\n\n\n\nclass DownloadSolves extends Component{\n\n    state = {\n        solves: [],\n        formattedSolves: [],\n        finalOutput: []\n    }\n\n    export2csv = () => {\n        let data = \"\";\n        const tableData = [];\n        const rows = this.state.finalOutput\n        for (const row of rows) {\n            const rowData = [];\n            for (const column of row) {\n                rowData.push(column);\n            }\n            tableData.push(rowData.join(\",\"));\n        }\n        data += tableData.join(\"\\n\");\n        const a = document.createElement(\"a\");\n        a.href = URL.createObjectURL(new Blob([data], { type: \"text/csv\" }));\n        a.setAttribute(\"download\", \"solves.csv\");\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    }\n\n    getSolvesFromDashboard = () => {\n        let sortedSolves = []\n        for (const solve of this.props.solves){\n            sortedSolves = [solve, ...sortedSolves]\n        }\n        this.setState({\n            solves: sortedSolves\n        })\n        this.formattedSolves()\n    }\n\n\n\n    formattedSolves = () => {\n        var session = []\n        var header = [] \n        header.push(\"session\")\n        header.push(\"session name\")\n        header.push(\"solve\")\n        header.push(\"time\")\n        header.push(\"scramble\")\n        header.push(\"date\")\n        session.push(header)\n        this.state.solves.map((solves, index) => {\n            var solveArray = []\n            solves.map((solve, i) => {\n                var solveArray = []\n                solveArray.push(index + 1)\n                solveArray.push(solve.sessionname)\n                solveArray.push(i + 1)\n                solveArray.push(solve.solve)\n                let scramble = \"\\\"\"\n                scramble+=solve.scramble + \"\\\"\"\n                // solveArray.push(solve.scramble)\n                solveArray.push(scramble)\n                if (solve.date){\n                    var date = solve.date\n                    var date2 = date.substring(5,7) + \"-\" + date.substring(8,10) + \"-\" + date.substring(0,4)\n                }\n                solveArray.push(date2)\n                session.push(solveArray)\n                return(null)\n            }) \n            session.push(solveArray)\n            return(null)\n        })\n        this.setState({\n            finalOutput: session\n        })\n    }\n    \n\n    componentDidMount() {\n        // this.props.getSolves()\n        setTimeout(()=>this.getSolvesFromDashboard(), 500)\n    }\n    \n    \n    \n    render() {\n        return(\n            <div className=\"center\">\n                <div>\n                {/* <h1><button onClick={()=>this.download(\"solves\", this.state.finalOutput)} style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\" >Export CSV</button></h1>  */}\n                {/* <h1><button onClick={()=>this.download(\"hello\", this.state.finalOutput )} style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\" >Export CSV</button></h1>  */}\n                <h1><button onClick={this.export2csv} style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\" >Export CSV</button></h1> \n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default DownloadSolves","import React from \"react\"\n\nconst InspectionTime = props => {\n    return(\n        <div className=\"center\">\n            <h4>Inspection time:</h4>  \n                <div >\n                    {props.isBackgroundLight ? \n                    <input className=\"test11 pa2 ba b--green bg-white form-input\" style={{ color: props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} placeholder={props.inspectionTime}  onChange={props.inspectionTimeToState} type=\"number\" min=\"0\" max=\"100\"></input>\n                    :\n                    <input className=\"test11 pa2 ba b--green bg-black form-input\" style={{ width: \"100px\", color: props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} placeholder={props.inspectionTime}  onChange={props.inspectionTimeToState} type=\"number\" min=\"0\" max=\"100\"></input>\n                    }\n                    <h1 className=\"test11 test22\"><button onClick={()=>props.changeInspectionTime(props.inspectionTimeFromState)} className=\"button2\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Change inspection time</button></h1>\n                </div>\n                {props.isInspectionSubmitted ? \n                <h4 style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Inspection time has been updated</h4>\n                :\n                <h4> </h4>\n                }\n                {props.isInvalidInspection ? \n                <h4 style={{color: \"red\"}}>Number must be between 0 and 100</h4>\n                :\n                <h4> </h4>\n                }\n                <br></br>\n            </div>\n    )\n}\n\nexport default InspectionTime","import React from \"react\"\n\nconst ChangeAO1 = props => {\n    return(\n        <div className=\"center\">\n            <h4>ao #</h4>   \n            <div >\n                {props.isBackgroundLight ? \n                <input className=\"test11 pa2 ba b--green bg-white form-input\" style={{ color: props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} placeholder={props.aoNum}  onChange={props.aoNumInput} type=\"number\" min=\"4\" max=\"1000\"></input>\n                :\n                <input className=\"test11 pa2 ba b--green bg-black form-input\" style={{ width: \"100px\", color: props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} placeholder={props.aoNum}  onChange={props.aoNumInput} type=\"number\" min=\"4\" max=\"1000\"></input>\n                }\n                <h1 className=\"test11 test22\"><button onClick={()=>props.aoNumChange(props.aoNumState)} className=\"button2\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Change AO number 1</button></h1>\n            </div>\n\n            {props.isAoSubmitted ? \n            <h4 style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Number has been updated</h4>\n            :\n            <h4> </h4>\n            }\n            {props.isInvalidAoNum ? \n            <h4 style={{color: \"red\"}}>Number must be between 4 and 1000</h4>\n            :\n            <h4> </h4>\n            }\n        </div>\n    )\n}\n\nexport default ChangeAO1","import React from \"react\"\n\nconst ChangeAO2 = props => {\n    return(\n        <div className=\"center\">\n            <div >\n                {props.isBackgroundLight ? \n                <input className=\"test11 pa2 ba b--green bg-white form-input\" style={{ color: props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} placeholder={props.aoNum2}  onChange={props.aoNumInput2} type=\"number\" min=\"4\" max=\"1000\"></input>\n                :\n                <input className=\"test11 pa2 ba b--green bg-black form-input\" style={{ width: \"100px\", color: props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} placeholder={props.aoNum2}  onChange={props.aoNumInput2} type=\"number\" min=\"4\" max=\"1000\"></input>\n                }\n                <h1 className=\"test11 test22\"><button onClick={()=>props.aoNumChange2(props.aoNumState2)} className=\"button2\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Change AO number 2</button></h1>\n            </div>\n\n\n            {props.isAoSubmitted2 ? \n            <h4 style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Number has been updated</h4>\n            :\n            <h4> </h4>\n            }\n            {props.isInvalidAoNum2 ? \n            <h4 style={{color: \"red\"}}>Number must be between 4 and 1000</h4>\n            :\n            <h4> </h4>\n            }\n            <br></br>\n        </div>\n    )\n}\n\nexport default ChangeAO2","import React from \"react\"\n\nconst Toggles = props => {\n    return(\n        <ul className=\"summary-center\">      \n            <li>\n                <label htmlFor=\"mobile\" className=\"label1\"><h4>Touch start/stop (for large mobile devices)</h4></label>\n                <input type=\"checkbox\" id=\"mobile\" className=\"checkbox input1\" onClick={props.isMobile} />  \n                <label htmlFor=\"mobile\" className=\"switch\"></label>\n            </li>  \n            <br></br>\n            <li>\n                <label htmlFor=\"solveconfirm\" className=\"label1\"><h4>Confirm before deleting solve</h4></label>\n                <input type=\"checkbox\" id=\"solveconfirm\" className=\"checkbox input1\" onClick={props.isConfirmSolve} />  \n                <label htmlFor=\"solveconfirm\" className=\"switch\"></label>\n            </li>  \n            <br></br>\n            <li>\n                <label htmlFor=\"sessionconfirm\" className=\"label1\"><h4>Confirm before deleting session</h4></label>\n                <input type=\"checkbox\" id=\"sessionconfirm\" className=\"checkbox input1\" onClick={props.isConfirmSession} />  \n                <label htmlFor=\"sessionconfirm\" className=\"switch\"></label>\n            </li>\n            <br></br>\n            <li>\n                <label htmlFor=\"manualenter\" className=\"label1\"><h4>Manually enter times (when using StackMat)</h4></label>\n                <input type=\"checkbox\" id=\"manualenter\" className=\"checkbox input1\" onClick={props.isManualEnter} />  \n                <label htmlFor=\"manualenter\" className=\"switch\"></label>\n            </li>\n            <br></br>\n            <li>\n                <label htmlFor=\"disabletimer\" className=\"label1\"><h4>Deactivate timer during solve</h4></label>\n                <input type=\"checkbox\" id=\"disabletimer\" className=\"checkbox input1\" onClick={props.isDisableTimer} />  \n                <label htmlFor=\"disabletimer\" className=\"switch\"></label>\n            </li>\n            <br></br>\n            <li>\n                <label htmlFor=\"offline\" className=\"label1\"><h4>Offline mode</h4></label>\n                <input type=\"checkbox\" id=\"offline\" className=\"checkbox input1\" onClick={props.offlineConfirm} />  \n                <label htmlFor=\"offline\" className=\"switch\"></label>\n            </li>\n            <br></br>\n            <li>\n                {props.didOnlineSyncWork ? \n                <label className=\"label1\">\n                    <h4>Sync was successful</h4>\n                </label>\n                :\n                <h4> </h4>\n                }\n                {props.isSyncUnsuccessful ? \n                <label className=\"label1\">\n                    <h4 style={{color: \"red\"}}>Sync failed</h4>\n                </label>\n                :\n                <h4> </h4>\n                }\n                {props.didOfflineSyncWork ? \n                <label className=\"label1\">\n                    <h4>Offline mode activated</h4>\n                </label>\n                :\n                <h4> </h4>\n                }\n                {props.isUploading ? \n                <label className=\"label1\">\n                    <h4>Syncing...</h4>\n                </label>\n                :\n                <h4> </h4>\n                }\n                {props.isDownloading ? \n                <label className=\"label1\">\n                    <h4>Downloading...</h4>\n                </label>\n                :\n                <h4> </h4>\n                }\n            </li>\n            <br></br>\n        </ul>\n    )\n}\n\nexport default Toggles","import React from \"react\"\n\nconst ChangeUsername = props => {\n    return(\n        <div className=\"center\"> \n            <br></br>\n            <h2>Change username:</h2>\n            <br></br>\n            {props.isBackgroundLight ? \n            <input id=\"txt-input\" style={{width: \"200px\", color: props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} placeholder=\"Enter new username\" className=\"pa2 ba b--green bg-white form-input\" onChange={props.username} type=\"text\"></input>\n            :\n            <input id=\"txt-input\" style={{width: \"200px\", color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"white\"}} placeholder=\"Enter new username\" className=\"pa2 ba b--green bg-black form-input\"  onChange={props.username} type=\"text\"></input>\n            }\n            {\n                props.usernameExists ? \n                <h4 style={{color: \"red\"}}>Username unavailable</h4>\n                :\n                <h4> </h4>\n            }\n            {\n            props.isUsernameChanged ?\n            <h4>Username has been changed</h4> \n            :\n            <h4> </h4>\n            }\n            <h1><button onClick={props.changeUsername} className=\"button2\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Change</button></h1>\n        </div>\n    )\n}\n\nexport default ChangeUsername","import React from \"react\"\n\nconst ChangePassword = props => {\n    return(\n        <div className=\"center\">\n            <br></br>\n            <h2>Change password:</h2>\n            <br></br>\n            {props.isBackgroundLight ? \n            <input id=\"change2\" style={{width: \"200px\",color: props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} placeholder=\"Enter current password\" className=\"pa2 ba b--green bg-white form-input\" onChange={props.oldPassword} type=\"password\"></input>\n            :\n            <input id=\"change2\" style={{width: \"200px\", color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"white\"}} placeholder=\"Enter current password\" className=\"pa2 ba b--green bg-black form-input\"  onChange={props.oldPassword} type=\"password\"></input>\n            }\n            <br></br>\n            <br></br>\n            {props.isBackgroundLight ? \n            <input id=\"change\" style={{width: \"200px\", color: props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} placeholder=\"Enter new password\" className=\"pa2 ba b--green bg-white form-input\" onChange={props.newPassword} type=\"password\"></input>\n            :\n            <input id=\"change\" style={{width: \"200px\", color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"white\"}} placeholder=\"Enter new password\" className=\"pa2 ba b--green bg-black form-input\"  onChange={props.newPassword} type=\"password\"></input>\n            }\n            {props.isBackgroundLight ? \n            <input id=\"change3\" style={{width: \"200px\", color: props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} placeholder=\"Re-enter new password\" className=\"pa2 ba b--green bg-white form-input\" onChange={props.newPasswordReenter} type=\"password\"></input>\n            :\n            <input id=\"change3\" style={{width: \"200px\", color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"white\"}} placeholder=\"Re-enter new password\" className=\"pa2 ba b--green bg-black form-input\"  onChange={props.newPasswordReenter} type=\"password\"></input>\n            }\n            {props.isPasswordChanged ? \n            <h4>Password has been changed</h4> \n            :\n            <h4> </h4>\n            }\n            {\n            props.isWrongPassword ?\n            <h4 style={{color: \"red\"}}>Current password is incorrect</h4>\n            :\n            <h4> </h4>\n            }\n            {\n            props.isPasswordMatch ?\n            <h4> </h4>\n            :\n            <h4 style={{color: \"red\"}}>Passwords do not match</h4>\n            }\n            <h1><button type=\"button\" onClick={props.changePassword} className=\"button2\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Change</button></h1>\n            <br></br>\n        </div>\n    )\n}\n\nexport default ChangePassword","import React from \"react\"\n\nconst DeleteAccount = props => {\n    return(\n        <div className=\"center\">\n            <h2>Delete account:</h2>\n            <br></br>\n            {props.isBackgroundLight ? \n            <input style={{width: \"200px\", color: props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"white\"}} className=\"pa2 ba b--green bg-white form-input\" placeholder=\"Enter password\" onChange={props.deleteAccountPassword}type=\"password\"></input>\n            :\n            <input style={{width: \"200px\", color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"white\"}} className=\"pa2 ba b--green bg-black form-input\" placeholder=\"Enter password\" onChange={props.deleteAccountPassword} type=\"password\"></input>\n            }\n            {\n                props.isWrongPassword2 ?\n                <h4 style={{color: \"red\"}}>Incorrect password</h4>\n                :\n                <h4> </h4>\n            }\n            <h1><button onClick={props.deleteAccountConfirm} className=\"button2\" style={{color: props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Delete Account</button></h1>\n            <br></br>\n            {/* <br></br> */}\n        </div>\n    )\n}\n\nexport default DeleteAccount","import React, { Component } from \"react\"\nimport \"./Settings.css\"\nimport ImportSolves from \"./ImportSolves\"\nimport ImportManual from \"./ImportManual\"\nimport DownloadSolves from \"./DownloadSolves\"\nimport DownloadCSV from \"./DownloadCSV\"\nimport InspectionTime from \"./InspectionTime\"\nimport ChangeAO1 from \"./ChangeAO1\"\nimport ChangeAO2 from \"./ChangeAO2\"\nimport Toggles from \"./Toggles\"\nimport ChangeUsername from \"./ChangeUsername\"\nimport ChangePassword from \"./ChangePassword\"\nimport DeleteAccount from \"./DeleteAccount\"\n\nclass Settings extends Component{\n\n    state = {\n        importSolvesTextArea: \"\",\n        importSolves: \"\",\n        importManualTextAreaTime: \"\",\n        importManualTextAreaScramble: null,\n        importManualTextAreaDate: null,\n        importManualTextAreaName: null,\n        puzzle: \"3x3\",\n        isManual: false,\n        isImportFromFile: false,\n        session: 1,\n        aoNum: \"\",\n        aoNum2: \"\",\n        isInvalidAoNum: false,\n        isAoSubmitted: false,\n        isInvalidAoNum2: false,\n        isAoSubmitted2: false,\n        inspectionTime: \"\",\n        isInspectionSubmitted: false,\n        isInvalidInspection: false,\n        didOnlineSyncWork: false,\n        isSyncUnsuccessful: false,\n        isDownloading: false,\n        isUploading: false,\n    }\n\n    aoNumInput = (e) => {\n        this.setState({\n            aoNum: e.target.value\n        })\n    }\n\n    aoNumInput2 = (e) => {\n        this.setState({\n            aoNum2: e.target.value\n        })\n    }\n\n    inspectionTimeToState = (e) => {\n        this.setState({\n            inspectionTime: e.target.value\n        })\n    }\n\n    changeInspectionTime = (input) => {\n        if (input < 101 && input > -1){\n            this.props.changeInspectionTime(input)\n            this.setState({\n                isInvalidInspection: false,\n                isInspectionSubmitted: true, \n            })\n        }else{\n            this.setState({\n                isInvalidInspection: true,\n                isInspectionSubmitted: false, \n            })\n        }\n    }\n\n    aoNumChange = (input) => {\n        if (input>3 && input<1001){\n            let offline = JSON.parse(localStorage.getItem(\"offline\"))\n            if(!offline){\n                fetch(\"https://blooming-hollows-98248.herokuapp.com/ao\", {\n                    method: \"put\",\n                    headers: {\"Content-Type\": \"application/json\"},\n                    body: JSON.stringify({\n                        id: this.props.id,\n                        aonumber: input\n                    })\n                }).then(response=>response.json())\n            }\n            localStorage.setItem(\"ao\", JSON.stringify(input))\n            this.props.aoNumChange(input)\n            this.setState({\n                isInvalidAoNum: false,\n                isAoSubmitted: true,\n            })\n        }else{\n            this.setState({\n                isInvalidAoNum: true,\n                isAoSubmitted: false,\n            })\n        }\n    }\n\n    aoNumChange2 = (input) => {\n        if (input>3 && input<1001){\n            // console.log(input)\n            let offline = JSON.parse(localStorage.getItem(\"offline\"))\n            if(!offline){\n                fetch(\"https://blooming-hollows-98248.herokuapp.com/ao2\", {\n                    method: \"put\",\n                    headers: {\"Content-Type\": \"application/json\"},\n                    body: JSON.stringify({\n                        id: this.props.id,\n                        aonumber2: input\n                    })\n                }).then(response=>response.json())\n            }\n            localStorage.setItem(\"ao2\", JSON.stringify(input))\n            this.props.aoNumChange2(input)\n            this.setState({\n                isInvalidAoNum2: false,\n                isAoSubmitted2: true,\n            })\n        }else{\n            this.setState({\n                isInvalidAoNum2: true,\n                isAoSubmitted2: false,\n            })\n        }\n    }\n    \n    isCountDownActivated = () => {\n        this.props.inspection()\n        if (document.getElementById(\"countdown\").checked===true){\n            localStorage.setItem(\"countDown\", JSON.stringify(true))\n        }\n        if(document.getElementById(\"countdown\").checked===false){\n            localStorage.setItem(\"countDown\", JSON.stringify(false))\n        }\n    }\n\n    isConfirmSolve = () => {\n        this.props.confirmSolveDelete()\n        if(document.getElementById(\"solveconfirm\").checked===true){\n            localStorage.setItem(\"solveconfirm\", JSON.stringify(true))\n        }\n        if(document.getElementById(\"solveconfirm\").checked===false){\n            localStorage.setItem(\"solveconfirm\", JSON.stringify(false))\n        }\n    }\n\n    isMobile = () => {\n        this.props.mobileStartStop()\n        if(document.getElementById(\"mobile\").checked===true){\n            localStorage.setItem(\"mobile\", JSON.stringify(true))\n        }\n        if(document.getElementById(\"mobile\").checked===false){\n            localStorage.setItem(\"mobile\", JSON.stringify(false))\n        }\n    }\n\n    isManualEnter = () => {\n        // toggleIsManualEnter\n        this.props.manualEnter()\n        if(document.getElementById(\"manualenter\").checked===true){\n            localStorage.setItem(\"manualenter\", JSON.stringify(true))\n        }\n        if(document.getElementById(\"manualenter\").checked===false){\n            localStorage.setItem(\"manualenter\", JSON.stringify(false))\n        }\n    }\n\n    isConfirmSession = () => {\n        this.props.confirmSessionDelete()\n        if(document.getElementById(\"sessionconfirm\").checked===true){\n            localStorage.setItem(\"sessionconfirm\", JSON.stringify(true))\n        }\n        if(document.getElementById(\"sessionconfirm\").checked===false){\n            localStorage.setItem(\"sessionconfirm\", JSON.stringify(false))\n        }\n    }\n\n    isDisableTimer = () => {\n        this.props.disableTimer()\n        if(document.getElementById(\"disabletimer\").checked===true){\n            localStorage.setItem(\"disabletimer\", JSON.stringify(true))\n        }\n        if(document.getElementById(\"disabletimer\").checked===false){\n            localStorage.setItem(\"disabletimer\", JSON.stringify(false))\n        }\n    }\n\n    getOffline= () => {\n        if(localStorage.offline) {\n            let x = JSON.parse(localStorage.getItem(\"offline\"))\n            document.getElementById(\"offline\").checked=x\n        }\n    }\n\n    offlineConfirm = () => {\n        if(localStorage.offline) {\n            let x = JSON.parse(localStorage.getItem(\"offline\"))\n            if(x){\n                let solves = localStorage.getItem(\"offlinesolves\")\n                let offlineCount = localStorage.getItem(\"offlinecount\")\n                let offlineDifference = Number(JSON.parse(solves).solves.length)-Number(offlineCount)\n                let summary = \"\"\n                if(JSON.parse(solves).solves.length===0){\n                    summary+= \"DELETING ALL SOLVES\"\n                }else if(offlineDifference > -1){\n                    summary+= `adding ${offlineDifference} `\n                    if (offlineDifference===1){\n                        summary+=\"solve\"\n                    }else{\n                        summary+=\"solves\"\n                    }\n                }else{\n                    offlineDifference = offlineDifference * -1\n                    summary+= `deleting ${offlineDifference} `\n                    if (offlineDifference===1){\n                        summary+=\"solve\"\n                    }else{\n                        summary+=\"solves\"\n                    }\n                }\n                let confirmation = window.confirm(`You are now going online. To reconnect, be sure to have a wifi connection. Backing up (downloading solves) prior to going online is recommended. \\n \\n You will be ${summary}.`)\n                if (confirmation) {\n                    if(localStorage.offlinesolves){\n                        let online = navigator.onLine;\n                        if(online){\n                            this.setState({\n                                isUploading: true,\n                                didOfflineSyncWork: false,\n                            })\n                            fetch(\"https://blooming-hollows-98248.herokuapp.com/sendonline\",{\n                            method: \"put\",\n                            headers: {\"Content-Type\": \"application/json\"},\n                            body: JSON.stringify({\n                              id: this.props.id,\n                              solves: {\"allsolves\": JSON.parse(solves).solves},\n                              theme: JSON.parse(localStorage.getItem(\"theme\")),\n                              aonumber: JSON.parse(localStorage.getItem(\"ao\")),\n                              confirmsession: JSON.parse(localStorage.getItem(\"sessionconfirm\")),\n                              confirmsolve: JSON.parse(localStorage.getItem(\"solveconfirm\")),\n                              inspection: JSON.parse(localStorage.getItem(\"countDown\")),\n                              inspectiontime: JSON.parse(localStorage.getItem(\"inspectionTime\")),\n                              mobile: JSON.parse(localStorage.getItem(\"mobile\")),\n                              disabletimer: JSON.parse(localStorage.getItem(\"disabletimer\")),\n                              aonumber2: JSON.parse(localStorage.getItem(\"ao2\")),\n                              offline: JSON.parse(localStorage.getItem(\"offline\")),\n                            })\n                            }).then(response=>response.json())\n                            .then(response=> {\n                              if(response===\"unable to send online\"){\n                                document.getElementById(\"offline\").checked=x\n                                localStorage.setItem(\"offline\", JSON.stringify(x))\n                                alert(\"Unable to conncect to database. Try again.\")\n                                this.setState({\n                                    isSyncUnsuccessful: true,\n                                    didOnlineSyncWork: false,\n                                    didOfflineSyncWork: false,\n                                    isUploading: false,\n                                })\n                              }else{\n                                fetch(\"https://blooming-hollows-98248.herokuapp.com/offline\", {\n                                method: \"post\",\n                                headers: {\"Content-Type\": \"application/json\"},\n                                body: JSON.stringify({\n                                    id: this.props.id,\n                                    offline: !x,\n                                })\n                                }).then(response=>response.json())\n                                .then(data=> {\n                                    document.getElementById(\"offline\").checked=!x\n                                    localStorage.setItem(\"offline\", JSON.stringify(!x))\n                                    localStorage.removeItem(\"offlinesolves\")\n                                    localStorage.removeItem(\"offlinecount\")\n                                    this.setState({\n                                        didOnlineSyncWork: true,\n                                        didOfflineSyncWork: false,\n                                        isSyncUnsuccessful: false,\n                                        isUploading: false,\n                                    })\n                                })\n                              }\n                            })\n                        }else{\n                            alert(\"You are offline. Try again.\")\n                            document.getElementById(\"offline\").checked=x\n                            localStorage.setItem(\"offline\", JSON.stringify(x))\n                        }\n                    }\n                }else{\n                    document.getElementById(\"offline\").checked=x\n                    localStorage.setItem(\"offline\", JSON.stringify(x))\n                }\n            }else{\n                let confirmation = window.confirm(\"You are now entering offline mode. \\n-Wifi is required to activate. \\n-Only use if wifi will not be available; e.g. on an airplane. \\n -Backing up solves is highly recommended. \\n -You must remain signed in. \\n -Solve data will no longer be updated to the database. \\n -To reconnect, be sure to have a wifi connection before turning off offline mode.\")\n                if (confirmation) {\n                    let online = navigator.onLine;\n                    if(online){\n                        fetch(\"https://blooming-hollows-98248.herokuapp.com/offline\", {\n                        method: \"post\",\n                        headers: {\"Content-Type\": \"application/json\"},\n                        body: JSON.stringify({\n                            id: this.props.id,\n                            offline: !x,\n                        })\n                        }).then(response=>response.json())\n                        .then(data=> {\n                            this.setState({\n                                didOnlineSyncWork:false,\n                                isDownloading:true,\n                            })\n                            document.getElementById(\"offline\").checked=!x\n                            localStorage.setItem(\"offline\", JSON.stringify(!x))\n                            fetch(\"https://blooming-hollows-98248.herokuapp.com/receive\",{\n                                method: \"post\",\n                                headers: {\"Content-Type\": \"application/json\"},\n                                body: JSON.stringify({\n                                    id: this.props.id,\n                                })\n                            }).then(response=>response.json())\n                            .then(data=>{\n                                if(data){\n                                    if(data[0].solves){\n                                        let solvesOffline = JSON.parse(data[0].solves).allsolves\n                                        localStorage.setItem(\"offlinecount\", JSON.stringify(solvesOffline.length))\n                                        localStorage.setItem(\"offlinesolves\", JSON.stringify({\"solves\": solvesOffline}))\n                                    }\n                                }\n                                this.setState({\n                                    didOfflineSyncWork: true,\n                                    didOnlineSyncWork: false,\n                                    isSyncUnsuccessful: false,\n                                    isDownloading: false,\n                                })\n                            })\n                        })\n                    }else{\n                        alert(\"You must be online to activate offline mode.\")\n                        document.getElementById(\"offline\").checked=x\n                        localStorage.setItem(\"offline\", JSON.stringify(x))\n                    }\n                }else{\n                    document.getElementById(\"offline\").checked=x\n                    localStorage.setItem(\"offline\", JSON.stringify(x))\n                }\n            }\n        }\n    }\n\n    getManualEnterOnMount = () => {\n        if(localStorage.manualenter) {\n            let x = JSON.parse(localStorage.getItem(\"manualenter\"))\n            document.getElementById(\"manualenter\").checked=x\n        }\n    }\n\n    getMobileOnMount = () => {\n        if(localStorage.mobile) {\n            let x = JSON.parse(localStorage.getItem(\"mobile\"))\n            document.getElementById(\"mobile\").checked=x\n        }\n    }\n\n    getConfirmSessionOnMount = () => {\n        if(localStorage.solveconfirm) {\n            let x = JSON.parse(localStorage.getItem(\"sessionconfirm\"))\n            document.getElementById(\"sessionconfirm\").checked=x\n        }\n    }\n\n    getDisableTimerOnMount= () => {\n        if(localStorage.disabletimer) {\n            let x = JSON.parse(localStorage.getItem(\"disabletimer\"))\n            document.getElementById(\"disabletimer\").checked=x\n        }\n    }\n\n    getConfirmSolveOnMount = () => {\n        if(localStorage.solveconfirm) {\n            let x = JSON.parse(localStorage.getItem(\"solveconfirm\"))\n            document.getElementById(\"solveconfirm\").checked=x\n        }\n    }\n \n\n    handleImportSolvesChange = (event) => {\n        this.setState({\n            importSolvesTextArea: event.target.value\n        })\n    }\n\n    handleImportManualTimeChange = (event) => {\n        this.setState({\n            importManualTextAreaTime: event.target.value\n        })\n    }\n\n    handleImportManualScrambleChange = (event) => {\n        this.setState({\n            importManualTextAreaScramble: event.target.value\n        })\n    }\n\n    handleImportManualDateChange = (event) => {\n        this.setState({\n            importManualTextAreaDate: event.target.value\n        })\n    }\n\n    handleImportManualNameChange = (event) => {\n        this.setState({\n            importManualTextAreaName: event.target.value\n        })\n    }\n\n    handleImportSolvesSubmit = () => {\n        this.setState({\n            importSolves: this.state.importSolvesTextArea\n        })\n        document.getElementById(\"importSolves\").value=\" \"\n    }\n\n    handleImportManualSubmit = () => {\n        this.setState({\n            importSolves: this.state.importSolvesTextArea\n        })\n        document.getElementById(\"importManualTime\").value=\" \"\n        if (this.state.importManualTextAreaScramble) {\n            document.getElementById(\"importManualScramble\").value=\" \"\n        }\n    }\n\n    isManual = () => {\n        if(this.props.uniqueSessionsDB.length >0){\n            const session = this.props.uniqueSessionsDB.length + 1\n            this.setState({\n                session: session,\n            })\n        }\n        this.setState({\n            isManual: true,\n        })\n    }\n\n    isImportFromFile = () => { \n        this.setState({\n            isImportFromFile: true,\n        })\n    }\n\n    componentDidMount() {\n        this.getManualEnterOnMount()\n        this.getOffline()\n        this.getConfirmSolveOnMount()\n        this.getConfirmSessionOnMount()\n        this.getMobileOnMount()\n        this.getDisableTimerOnMount()\n    }\n\n    getPuzzleType = () => {\n        const x = document.getElementById(\"puzzle\")\n        const y = x.options[x.selectedIndex].value\n        this.setState({\n            puzzle: y,\n        })\n    }\n\n    deleteAccountConfirm = () => {\n        let confirmation = window.confirm(\"Are you sure you want to DELETE your account? This cannot be undone.\")\n        if (confirmation) {\n            this.props.deleteAccount()\n        }\n    }\n\n    changeUsername = () => {\n        localStorage.setItem(\"user\", JSON.stringify(this.props.user))\n\n    }\n\n    render() {\n        return(\n            <div style={{backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", color: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>\n                {this.props.isBackgroundLight \n                ? <h1 className=\"center\"><button style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\" onClick={this.props.themeToDB}>Dark</button></h1> \n                : <h1 className=\"center\"><button style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\" onClick={this.props.themeToDB}>Light</button></h1>\n                }\n\n                <h1 className=\"center\"><button onClick={this.props.signout} className=\"button2\" style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>Sign Out</button></h1>\n                <h1 className=\"center\" style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\"}}>Preferences</h1>\n\n                <InspectionTime \n                isBackgroundLight={this.props.isBackgroundLight}\n                inspectionTime={this.props.inspectionTime}\n                inspectionTimeToState={this.inspectionTimeToState}\n                changeInspectionTime={this.changeInspectionTime}\n                inspectionTimeFromState={this.state.inspectionTime}\n                isInspectionSubmitted={this.state.isInspectionSubmitted}\n                isInvalidInspection={this.state.isInvalidInspection}\n                />\n\n                <ChangeAO1 \n                isBackgroundLight={this.props.isBackgroundLight}\n                aoNum={this.props.aoNum}\n                aoNumInput={this.aoNumInput}\n                aoNumChange={this.aoNumChange}\n                aoNumState={this.state.aoNum}\n                isAoSubmitted={this.state.isAoSubmitted}\n                isInvalidAoNum={this.state.isInvalidAoNum}\n                />\n\n                <ChangeAO2 \n                isBackgroundLight={this.props.isBackgroundLight}\n                aoNum2={this.props.aoNum2}\n                aoNumInput2={this.aoNumInput2}\n                aoNumChange2={this.aoNumChange2}\n                aoNumState2={this.state.aoNum2}\n                isAoSubmitted2={this.state.isAoSubmitted2}\n                isInvalidAoNum2={this.state.isInvalidAoNum2}\n                />\n\n                <Toggles \n                isManualEnter={this.isManualEnter}\n                isDownloading={this.state.isDownloading}\n                isUploading={this.state.isUploading}\n                isMobile={this.isMobile}\n                isConfirmSolve={this.isConfirmSolve}\n                isConfirmSession={this.isConfirmSession}\n                isDisableTimer={this.isDisableTimer}\n                offlineConfirm={this.offlineConfirm}\n                didOnlineSyncWork={this.state.didOnlineSyncWork}\n                isSyncUnsuccessful={this.state.isSyncUnsuccessful}\n                didOfflineSyncWork={this.state.didOfflineSyncWork}\n                />\n                \n                <hr></hr>\n                <h1 className=\"center\" style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\"}}>Export Solves</h1>\n\n                <DownloadSolves \n                isBackgroundLight={this.props.isBackgroundLight} \n                solves={this.props.solves} getSolves={this.props.getSolves}\n                averageMS={this.props.averageMS}\n                getAveragesMS={this.props.getAveragesMS}\n                />\n                <DownloadCSV \n                isBackgroundLight={this.props.isBackgroundLight}  \n                solves={this.props.solves} \n                getSolves={this.props.getSolves}\n                />\n\n                <h1 className=\"center\" style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\"}}>Import Solves</h1>\n                \n                <ImportManual \n                loadPastSessionSolveData={this.props.loadPastSessionSolveData}\n                getPuzzleType={this.getPuzzleType}\n                handleImportManualNameChange={this.handleImportManualNameChange}\n                handleImportManualDateChange={this.handleImportManualDateChange}\n                handleImportManualScrambleChange={this.handleImportManualScrambleChange}\n                handleImportManualTimeChange={this.handleImportManualTimeChange}\n                addToUniqueSessionsDB={this.props.addToUniqueSessionsDB}\n                getInterfaceSession={this.props.getInterfaceSession}\n                getSessionNumber={this.props.getSessionNumber}\n                manageSolveData={this.props.manageSolveData}\n                getSolves={this.props.getSolves}\n                getSolvesFromImportManual={this.props.getSolvesFromImportManual} \n                getCategories={this.props.getCategories}  \n                puzzle={this.state.puzzle} \n                importManualTextAreaName={this.state.importManualTextAreaName} \n                isBackgroundLight={this.props.isBackgroundLight}  \n                session={this.state.session} \n                isManualFunc={this.isManual} \n                isManual={this.state.isManual} \n                date={this.state.importManualTextAreaDate} \n                scramble={this.state.importManualTextAreaScramble} \n                handleImportManualSubmit={this.handleImportManualSubmit} \n                id={this.props.id} \n                uniqueSessionsDB={this.props.uniqueSessionsDB} \n                time={this.state.importManualTextAreaTime}/>\n                     \n                <ImportSolves \n                loadPastSessionSolveData={this.props.loadPastSessionSolveData}\n                handleButtonClick={this.props.handleButtonClick}\n                handleImportSolvesChange={this.handleImportSolvesChange}\n                addToUniqueSessionsDB={this.props.addToUniqueSessionsDB}\n                getInterfaceSession={this.props.getInterfaceSession}\n                getSessionNumber={this.props.getSessionNumber}\n                manageSolveData={this.props.manageSolveData}\n                getSolvesFromImport={this.props.getSolvesFromImport}\n                getSolves={this.props.getSolves}\n                getSolvesFromImportManual={this.props.getSolvesFromImportManual}\n                getCategories={this.props.getCategories}  \n                isBackgroundLight={this.props.isBackgroundLight}  \n                isImportFromFile={this.state.isImportFromFile} \n                isImportFromFileFunc={this.isImportFromFile} \n                handleImportSolvesSubmit={this.handleImportSolvesSubmit} \n                id={this.props.id} \n                uniqueSessionsDB={this.props.uniqueSessionsDB} \n                importSolves={this.state.importSolvesTextArea}\n                />\n                \n                <hr></hr>\n                \n                <ChangeUsername \n                isBackgroundLight={this.props.isBackgroundLight}\n                username={this.props.username}\n                usernameExists={this.props.usernameExists}\n                isUsernameChanged={this.props.isUsernameChanged}\n                changeUsername={this.props.changeUsername}\n                />\n\n                <ChangePassword \n                isBackgroundLight={this.props.isBackgroundLight}\n                oldPassword={this.props.oldPassword}\n                newPassword={this.props.newPassword}\n                newPasswordReenter={this.props.newPasswordReenter}\n                isPasswordChanged={this.props.isPasswordChanged}\n                isWrongPassword={this.props.isWrongPassword}\n                isPasswordMatch={this.props.isPasswordMatch}\n                changePassword={this.props.changePassword}\n                />\n                \n                <DeleteAccount \n                isBackgroundLight={this.props.isBackgroundLight}\n                deleteAccountPassword={this.props.deleteAccountPassword}\n                isWrongPassword2={this.props.isWrongPassword2}\n                deleteAccountConfirm={this.deleteAccountConfirm}\n                />\n            <div className=\"no-select\" style={{textAlign: \"center\"}}>Comments, criticisms, or bugs? Send a message to:</div>\n            <div style={{textAlign: \"center\", paddingBottom: \"40px\"}}>contactcubeclock@gmail.com</div>\n            </div>\n        )\n    }\n}\n\nexport default Settings","import React, { Component } from \"react\"\nimport Chart from \"chart.js\";\nlet newChart;\n\nclass Donut extends Component {\n    chartRef = React.createRef();\n\n\n\n    componentDidMount() {\n        // console.log(this.props.puzzles)\n        // console.log(this.props.numberSolvesCategory)\n        this.buildChart()\n    }\n\n    componentDidUpdate() {\n        this.buildChart()\n    }\n\n\n    buildChart = () => {\n        // this.disableAnimation()\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        if (typeof newChart !== \"undefined\") newChart.destroy();\n        newChart = new Chart(myChartRef, {\n            type: \"doughnut\",\n            data: \n            {\n                labels: this.props.puzzles[this.props.timePeriod],\n                // labels: [\"2020-06-12T21:35:34.466Z\", \"2020-06-15T21:35:34.466Z\", \"2020-07-10T07:00:00.000Z\"],\n                // labels: [\"Fri, 12 Jun 2020 18:47:15 +0000\", \"Fri, 19 Jun 2020 18:47:15 +0000\", \"2020-06-21T18:56:07.457Z\", \"2020-06-29T07:00:00.000Z\"],\n    \n                datasets: [{\n                    label: \"Puzzle Type\",\n                    // data: [(Math.random() > 0.5 ? 1.0 : 0) * Math.round(Math.random() * 100)],\n                    data: this.props.numberSolvesCategory[this.props.timePeriod],\n                    // data: [5.55, 8.41, 9.99],\n                    // backgroundColor: this.props.isBackgroundLight ? \"rgba(0,0,190,.1)\" : \"rgba(250,250,250,.8)\" ,\n                    backgroundColor: this.props.isBackgroundLight ? [\"#B09E99\", '#FEE9E1', \"#FAD4C0\", \"#64B6AC\", \"C0FDFB\", \"#966B9D\", \"#C98686\", \"#F2B880\", \"#FFF4EC\", \"#E7CFBC\", \"#B0D0D3\", \"#C08497\", \"#F7AF9D\", \"#F7E3AF\", \"#F3EEC3\", \"#FAD4C0\"] : [\"#F9C80E\", \"#F86624\", \"#EA3546\", \"#662E9B\", \"#43BCCD\", \"#1B998B\", \"#2D3047\", \"#FFFD82\", \"#FF9B71\", \"#E84855\", \"#50514F\", \"#F25F5C\", \"#FFE066\", \"#247BA0\", \"#70C1B3\", \"#43BCCD\"],\n                    // [\"#E7E6F7\", \"E3D0D8\", \"AEA3B0\", \"827081\", \"C6D2ED\"]\n                    // [\"#031A6B\", \"#033860\", \"#087CA7\", \"#004385\", \"#05B2DC\"]\n                    borderColor: \"light red\"\n    \n                }]\n              },\n            \n            options: {\n                animation: 0,\n                title: {\n                    display: true,\n                    text: \"Puzzle Type\",\n                    fontColor: this.props.isBackgroundLight ? \"rgba(10,10,10,.8)\" : \"rgba(250,250,250,1)\",\n                },\n                responsive: true,\n                legend:{\n                    display: false\n                }\n            }\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <canvas\n                    id=\"myChart\"\n                    ref={this.chartRef}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Donut","import { Grid } from 'gridjs-react';\nimport \"gridjs/dist/theme/mermaid.css\";\nimport React, { Component } from \"react\";\n\nclass Summary extends Component{\n  render(){\n      return(\n          <Grid\n          data={this.props.data}\n          columns={this.props.columns}\n          style={{\n            th: {\n                \"background-color\": this.props.isBackgroundLight ? \"d4d4d4\" : \"#1f1d1d\",\n                color: this.props.isBackgroundLight ? \"1f1d1d\" : \"white\"\n            },\n            td: {\n                \"background-color\": this.props.isBackgroundLight ? \"white\" :  \"#262525\",\n                color: this.props.isBackgroundLight ? \"3b3939\" : \"white\"\n            }\n          }}\n          />\n      )\n  }\n}\n\n\nexport default Summary","import React, { Component } from \"react\"\nimport \"./Dashboard.css\"\nimport CardList from \"./CardList\"\nimport GraphNumberSolves from \"./GraphNumberSolves\"\nimport Settings from \"../Settings/Settings\"\nimport Graph from \"./GraphAverages\"\nimport Donut from \"./GraphDonut\"\nimport Summary from \"./Summary\"\n\nclass Dashboard extends Component{\n\n    state = {\n        username: \"\",\n        newPassword: \"\",\n        oldPassword: \"\",\n        solves: [],\n        solvesSorted: [],\n        sessions: 0,\n        isAnalytics: true,\n        deleteAccountPassword: \"\",\n        isWrongPassword: false,\n        isWrongPassword2: false,\n        isUsernameChanged: false,\n        sessionsDBunique: [],\n        datesWeek: [],\n        datesMonth: [],\n        datesYear: [],\n        allDates: [],\n        datesDBunique: [],\n        averagesWeek: [],\n        averagesMonth: [],\n        averagesYear: [],\n        allDateAverages: [],\n        dateAverages: [],\n        isSolves: true,\n        usernameExists: false,\n        categories: [],\n        puzzles: [],\n        categoryDates: [],\n        indexNumberGraphs: \"\",\n        cardSortValue: \"\",\n        interfaceSession: {},\n        timePeriod: 0,\n        numberSolvesCategory: [], \n        optionSelected: \"\",\n        countNumberSolves: [],\n        countNumberSolvesWeek: [],\n        countNumberSolvesMonth: [],\n        countNumberSolvesYear: [],\n        allCounts: [],\n        averagesMS: [],\n        puzzlesSummary: [],\n        newPasswordReenter: \"\",\n        isPasswordMatch: true,\n        isPasswordChanged: false,\n        solvesSortedCardList: [],\n        puzzleWorst: [],\n        puzzleBest: [],\n        isCompact: false,\n    }\n\n    manageSolveData = () => {\n        const doAll = async () => {\n            await this.getSolves()\n            await this.sortSolves()\n            await this.sortDates()\n            await this.getCategories()\n            await this.sortCategories()\n            await this.getPuzzles()\n            await this.sortPuzzles()\n            await this.consolidateAllDatesAndSolves()\n            await this.getBestTimes()\n        };\n        doAll();\n    };\n\n    getSolves = () => {\n        if (this.props.id){\n            this.setState({\n                dateAverages: [],\n                solves: [],\n                solvesSorted: [],\n                solvesSortedCardList: [],\n                datesDBunique: [],\n                categories: [],\n                puzzles: [],\n                categoryDates: [],\n                countNumberSolves: [],\n                numberSolvesCategory: [],\n                datesWeek: [],\n                datesMonth: [],\n                datesYear: [],\n                allDates: [],\n                averagesWeek: [],\n                allDateAverages: [],\n                averagesMonth: [],\n                averagesYear: [],\n            })\n            const allSessions = []\n            const allDates = []\n            let datesWeek = []\n            let datesMonth = []\n            let datesYear = []\n            let solvesByUnix = [...this.props.solves].sort(this.compareUnix)\n            let threshold = Math.round(Date.now()/1000)\n            for (const solve of solvesByUnix) {\n                allSessions.push(solve.session)\n                if (solve.date){\n                    allDates.push(solve.date)\n                }\n                if (solve.unix > (threshold-604800)){\n                    datesWeek.push(solve.date)\n                }\n                if (solve.unix > (threshold-2592000)){\n                    datesMonth.push(solve.date)\n                }\n                if (solve.unix > (threshold-31536000)){\n                    datesYear.push(solve.date)\n                }\n            }\n            datesWeek = [...new Set(datesWeek)]\n            datesMonth = [...new Set(datesMonth)]\n            datesYear = [...new Set(datesYear)]\n            let uniqueSessions = [...new Set(allSessions)]\n            let uniqueDates = [...new Set(allDates)]\n            this.setState({\n                sessionsDBunique: uniqueSessions,\n                sessions: uniqueSessions.length, \n                datesDBunique: [uniqueDates, ...this.state.datesDBunique],\n                datesWeek: [datesWeek, ...this.state.datesWeek],\n                datesMonth: [datesMonth, ...this.state.datesMonth],\n                datesYear: [datesYear, ...this.state.datesYear],\n            })\n        }\n    }\n\n    sortSolves = () => {\n        //sorts solves by session\n        let sessionsDBuniqueInOrder = this.state.sessionsDBunique.sort(this.compare)\n        let bestTimes = []\n        let worstTimes = []\n        for (const session of sessionsDBuniqueInOrder) {\n            const solves = []\n            const ms = []\n            const times = []\n            let solvesInOrder = this.props.solves.sort(this.compareUnix)\n            for (const solve of solvesInOrder) {\n                if (solve.session === session){\n                    solves.push(solve)\n                    ms.push(Number(solve.milliseconds))\n                    times.push(solve.solve)\n                }\n            }\n            this.setState({\n                solvesSorted: [solves, ...this.state.solvesSorted],\n                solvesSortedCardList: [solves, ...this.state.solvesSorted]\n            })\n            let lowestMS = Math.min(...ms)\n            bestTimes.push(times[ms.indexOf(lowestMS)])\n            let highestMS = Math.max(...ms)\n            worstTimes.push(times[ms.indexOf(highestMS)])\n        }\n        bestTimes.reverse()\n        worstTimes.reverse()\n        this.setState({\n            puzzleBest: bestTimes,\n            puzzleWorst: worstTimes,\n        })\n    }\n\n    sortDates = () => {\n        //sorts all solves by date\n        //also gets number of solves based on date\n        const numberSolves = []\n        const numberSolvesWeek = []\n        const numberSolvesMonth = []\n        const numberSolvesYear = []\n        const threshold = Math.round(Date.now()/1000)\n        for (const date of this.state.datesDBunique[0]) {\n            const masterArray = []\n            let numberSolvesWeekCount = 0\n            let numberSolvesMonthCount = 0\n            let numberSolvesYearCount = 0\n            for (const solve of this.props.solves) {\n                if (solve.date === date){\n                    masterArray.push(solve.milliseconds)\n                    if (solve.unix > (threshold-604800)){\n                        numberSolvesWeekCount++\n                    }\n                    if (solve.unix > (threshold-2592000)){\n                        numberSolvesMonthCount++\n                    }\n                    if (solve.unix > (threshold-31536000)){\n                        numberSolvesYearCount++\n                    }\n                }\n            }\n            if (masterArray.length > 0){\n                numberSolves.push(masterArray.length)\n            }\n            if(numberSolvesWeekCount>0){\n                numberSolvesWeek.push(numberSolvesWeekCount)\n            }\n            if(numberSolvesMonthCount>0){\n                numberSolvesMonth.push(numberSolvesMonthCount)\n            }\n            if(numberSolvesYearCount>0){\n                numberSolvesYear.push(numberSolvesYearCount)\n            }\n        }\n        this.setState({\n            countNumberSolves: [...this.state.countNumberSolves, numberSolves],\n            countNumberSolvesWeek: [...this.state.countNumberSolvesWeek, numberSolvesWeek],\n            countNumberSolvesMonth: [...this.state.countNumberSolvesMonth, numberSolvesMonth],\n            countNumberSolvesYear: [...this.state.countNumberSolvesYear, numberSolvesYear],\n        })\n        this.dateAverage()\n    }\n\n    getCategories = () => {\n        //creates array of unique categories\n        //then puts them into state\n        let categories = []\n        for (const solves of this.props.solves) {\n            if (solves.sessionname){\n                categories=[...categories, solves.sessionname]\n            }\n        }\n        categories = new Set(categories)\n        categories = Array.from(categories)\n        this.setState({\n            categories: categories,\n        })\n    }\n\n    sortCategories = () => {\n        let threshold = Math.round(Date.now()/1000)\n        for (const category of this.state.categories) {\n            let categoryDates = []\n            let categorySolves = []\n            let solves = []\n            let numberSolves = []\n            let categoryDatesWeek = []\n            let categorySolvesWeek = []\n            let solvesWeek = []\n            let numberSolvesWeek = []\n            let categoryDatesMonth = []\n            let categorySolvesMonth = []\n            let solvesMonth = []\n            let numberSolvesMonth = []\n            let categoryDatesYear = []\n            let categorySolvesYear = []\n            let solvesYear = []\n            let numberSolvesYear = []\n            for (const date of this.state.datesDBunique[0]) {\n                let totalMS = 0\n                let count = 0\n                let totalMSWeek = 0\n                let countWeek = 0\n                let totalMSMonth = 0\n                let countMonth = 0\n                let totalMSYear = 0\n                let countYear = 0\n                for (const solve of this.props.solves) {\n                    if (solve.date===date && solve.sessionname===category){\n                        totalMS += Number(solve.milliseconds)\n                        count ++\n                        categoryDates.push(date)\n                        if (solve.unix > (threshold-604800)){\n                            totalMSWeek += Number(solve.milliseconds)\n                            countWeek ++\n                            categoryDatesWeek.push(date)\n                        }\n                        if (solve.unix > (threshold-2592000)){\n                            totalMSMonth += Number(solve.milliseconds)\n                            countMonth ++\n                            categoryDatesMonth.push(date)\n                        }\n                        if (solve.unix > (threshold-31536000)){\n                            totalMSYear += Number(solve.milliseconds)\n                            countYear ++\n                            categoryDatesYear.push(date)\n                        }\n                    }\n                }\n                if (count>0){\n                    numberSolves.push(count)\n                }\n                if (countWeek>0){\n                    numberSolvesWeek.push(countWeek)\n                }\n                if (countMonth>0){\n                    numberSolvesMonth.push(count)\n                }\n                if (countYear>0){\n                    numberSolvesYear.push(countYear)\n                }\n                let average = Number((totalMS/count/1000).toFixed(3))\n                if(average>0){\n                    categorySolves.push(average)\n                }\n                let averageWeek = Number((totalMSWeek/countWeek/1000).toFixed(3))\n                if(averageWeek>0){\n                    categorySolvesWeek.push(averageWeek)\n                }\n                let averageMonth = Number((totalMSMonth/countMonth/1000).toFixed(3))\n                if(averageMonth>0){\n                    categorySolvesMonth.push(averageMonth)\n                }\n                let averageYear = Number((totalMSYear/countYear/1000).toFixed(3))\n                if(averageYear>0){\n                    categorySolvesYear.push(averageYear)\n                }\n            }\n            categoryDates = [...new Set(categoryDates)]\n            if(solves.length>0){\n                categorySolves = [...categorySolves, solves]\n            }\n            categoryDatesWeek = [...new Set(categoryDatesWeek)]\n            if(solvesWeek.length>0){\n                categorySolvesWeek = [...categorySolvesWeek, solvesWeek]\n            }\n            categoryDatesMonth = [...new Set(categoryDatesMonth)]\n            if(solvesMonth.length>0){\n                categorySolvesMonth = [...categorySolvesMonth, solvesMonth]\n            }\n            categoryDatesYear = [...new Set(categoryDatesYear)]\n            if(solvesYear.length>0){\n                categorySolvesYear = [...categorySolvesYear, solvesYear]\n            }\n            \n            this.setState({\n                averagesYear: [...this.state.averagesYear, categorySolvesYear],\n                datesYear: [...this.state.datesYear, categoryDatesYear],\n                averagesMonth: [...this.state.averagesMonth, categorySolvesMonth],\n                datesMonth: [...this.state.datesMonth, categoryDatesMonth],\n                averagesWeek: [...this.state.averagesWeek, categorySolvesWeek],\n                datesWeek: [...this.state.datesWeek, categoryDatesWeek],\n                dateAverages: [...this.state.dateAverages, categorySolves],\n                datesDBunique: [...this.state.datesDBunique, categoryDates],\n                countNumberSolves: [...this.state.countNumberSolves, numberSolves],\n                countNumberSolvesWeek: [...this.state.countNumberSolvesWeek, numberSolvesWeek],\n                countNumberSolvesMonth: [...this.state.countNumberSolvesMonth, numberSolvesMonth],\n                countNumberSolvesYear: [...this.state.countNumberSolvesYear, numberSolvesYear],\n            })\n        }\n    }\n\n    \n\n    getPuzzles = () => {\n        let allPuzzles = []\n        let puzzles = []\n        let puzzlesWeek = []\n        let puzzlesMonth = []\n        let puzzlesYear = []\n        let threshold = Math.round(Date.now()/1000)\n        for (const solves of this.props.solves){\n            if (solves.date){\n                puzzles = [...puzzles, solves.puzzle]\n            }\n            if (solves.unix > (threshold-604800)){\n                puzzlesWeek = [...puzzlesWeek, solves.puzzle]\n            }\n            if (solves.unix > (threshold-2592000)){\n                puzzlesMonth = [...puzzlesMonth, solves.puzzle]\n            }\n            if (solves.unix > (threshold-31536000)){\n                puzzlesYear = [...puzzlesYear, solves.puzzle]\n            }\n        }\n        puzzles = [...new Set(puzzles)]\n        puzzlesWeek = [...new Set(puzzlesWeek)]\n        puzzlesMonth = [...new Set(puzzlesMonth)]\n        puzzlesYear = [...new Set(puzzlesYear)]\n        allPuzzles = [puzzles, puzzlesWeek, puzzlesMonth, puzzlesYear]\n        this.setState({\n            puzzles: allPuzzles,\n            puzzlesSummary: puzzles,\n        })\n        for (const puzzle of puzzles) {\n            this.setState({\n                categories: [...this.state.categories, puzzle],\n            })\n        }\n    }\n\n    sortPuzzles = () => {\n        let numberSolvesCategoryAllTime = []\n        let numberSolvesCategoryWeek = []\n        let numberSolvesCategoryMonth = []\n        let numberSolvesCategoryYear = []\n        let threshold = Math.round(Date.now()/1000)\n        for (const puzzle of this.state.puzzles[0]){\n            let puzzleSolves = []\n            let puzzleDates = []\n            let numberSolves = []\n            let puzzleSolvesWeek = []\n            let puzzleDatesWeek = []\n            let numberSolvesWeek = []\n            let puzzleSolvesMonth = []\n            let puzzleDatesMonth = []\n            let numberSolvesMonth = []\n            let puzzleSolvesYear = []\n            let puzzleDatesYear = []\n            let numberSolvesYear = []\n            let countNumberSolvesCategory = 0\n            let countNumberSolvesCategoryWeek = 0\n            let countNumberSolvesCategoryMonth = 0\n            let countNumberSolvesCategoryYear = 0\n            for (const date of this.state.datesDBunique[0]){\n                let totalMS = 0\n                let count = 0\n                let totalMSWeek = 0\n                let countWeek = 0\n                let totalMSMonth = 0\n                let countMonth = 0\n                let totalMSYear = 0\n                let countYear = 0\n                for (const solve of this.props.solves){\n                    if (solve.date===date && solve.puzzle===puzzle){\n                        totalMS += Number(solve.milliseconds)\n                        count ++\n                        puzzleDates.push(date)\n                        if (puzzle !== null){\n                            countNumberSolvesCategory++\n                        }\n                        if (solve.unix > (threshold-604800)){\n                            totalMSWeek += Number(solve.milliseconds)\n                            countWeek ++\n                            puzzleDatesWeek.push(date)\n                            if (puzzle !== null){\n                                countNumberSolvesCategoryWeek++\n                            }\n                        }\n                        if (solve.unix > (threshold-2592000)){\n                            totalMSMonth += Number(solve.milliseconds)\n                            countMonth ++\n                            puzzleDatesMonth.push(date)\n                            if (puzzle !== null){\n                                countNumberSolvesCategoryMonth++\n                            }\n                        }\n                        if (solve.unix > (threshold-31536000)){\n                            totalMSYear += Number(solve.milliseconds)\n                            countYear ++\n                            puzzleDatesYear.push(date)\n                            if (puzzle !== null){\n                                countNumberSolvesCategoryYear++\n                            }\n                        }\n                    }\n                }\n                let average = Number((totalMS/count/1000).toFixed(3))\n                if(average>0){\n                    puzzleSolves.push(average)\n                }\n                if(count>0){\n                    numberSolves.push(count)\n                }\n                let averageWeek = Number((totalMSWeek/countWeek/1000).toFixed(3))\n                if(averageWeek>0){\n                    puzzleSolvesWeek.push(averageWeek)\n                }\n                if(countWeek>0){\n                    numberSolvesWeek.push(countWeek)\n                }\n                let averageMonth = Number((totalMSMonth/countMonth/1000).toFixed(3))\n                if(averageMonth>0){\n                    puzzleSolvesMonth.push(averageMonth)\n                }\n                if(countMonth>0){\n                    numberSolvesMonth.push(countMonth)\n                }\n                let averageYear = Number((totalMSYear/countYear/1000).toFixed(3))\n                if(averageYear>0){\n                    puzzleSolvesYear.push(averageYear)\n                }\n                if(countYear>0){\n                    numberSolvesYear.push(countYear)\n                }\n            }\n            numberSolvesCategoryAllTime.push(countNumberSolvesCategory)\n            puzzleDates = [...new Set(puzzleDates)]\n            numberSolvesCategoryWeek.push(countNumberSolvesCategoryWeek)\n            puzzleDatesWeek = [...new Set(puzzleDatesWeek)]\n            numberSolvesCategoryMonth.push(countNumberSolvesCategoryMonth)\n            puzzleDatesMonth = [...new Set(puzzleDatesMonth)]\n            numberSolvesCategoryYear.push(countNumberSolvesCategoryYear)\n            puzzleDatesYear = [...new Set(puzzleDatesYear)]\n\n            this.setState({\n                datesYear: [...this.state.datesYear, puzzleDatesYear],\n                averagesYear: [...this.state.averagesYear, puzzleSolvesYear],\n                datesMonth: [...this.state.datesMonth, puzzleDatesMonth],\n                averagesMonth: [...this.state.averagesMonth, puzzleSolvesMonth],\n                datesWeek: [...this.state.datesWeek, puzzleDatesWeek],\n                averagesWeek: [...this.state.averagesWeek, puzzleSolvesWeek],\n                dateAverages: [...this.state.dateAverages, puzzleSolves],\n                datesDBunique: [...this.state.datesDBunique, puzzleDates],\n                countNumberSolves: [...this.state.countNumberSolves, numberSolves],\n                countNumberSolvesWeek: [...this.state.countNumberSolvesWeek, numberSolvesWeek],\n                countNumberSolvesMonth: [...this.state.countNumberSolvesMonth, numberSolvesMonth],\n                countNumberSolvesYear: [...this.state.countNumberSolvesYear, numberSolvesYear],\n                \n            })\n        }\n        this.setState({\n            numberSolvesCategory: [...this.state.numberSolvesCategory, numberSolvesCategoryAllTime, numberSolvesCategoryWeek, numberSolvesCategoryMonth,numberSolvesCategoryYear]\n        })\n    }\n\n    consolidateAllDatesAndSolves = () => {\n        this.setState({\n            allDateAverages: [this.state.dateAverages, this.state.averagesWeek, this.state.averagesMonth, this.state.averagesYear,],\n            allDates: [this.state.datesDBunique, this.state.datesWeek, this.state.datesMonth, this.state.datesYear,],\n            allCounts: [this.state.countNumberSolves, this.state.countNumberSolvesWeek, this.state.countNumberSolvesMonth, this.state.countNumberSolvesYear],\n        })\n    }\n\n    getBestTimes = () => {\n        let puzzleBestTimesSummary = []\n        for (const puzzle of this.state.puzzlesSummary){\n            let timesAndPuzzle = []\n            let allTimesMS = []\n            let allTimes = []\n            for (const solve of this.props.solves){\n                if (solve.puzzle===puzzle){\n                    if(solve.isplustwo){\n                        allTimesMS.push(solve.millisecondstwo)\n                        allTimes.push(solve.plustwo)\n                    }else{\n                        allTimesMS.push(solve.milliseconds)\n                        allTimes.push(solve.solve)\n                    }\n                }\n            }\n            let index = allTimesMS.indexOf(String(Math.min(...allTimesMS)))\n            timesAndPuzzle.push(puzzle)\n            timesAndPuzzle.push(allTimes[index])\n            timesAndPuzzle.push(allTimes.length)\n            puzzleBestTimesSummary.push(timesAndPuzzle)\n        }\n        this.setState({\n            puzzlesSummary: puzzleBestTimesSummary,\n        })\n    }\n\n    compare2 = (a,b) => {\n        return b-a\n    }\n\n    compare = (a,b) => {\n        return a - b\n    }\n\n    compareUnix = (a,b) => {\n        if (a.unix > b.unix){\n            return 1\n        }\n        if (a.unix < b.unix){\n            return -1\n        }\n        return 0\n    }\n\n    dateAverage = () => {\n        //gets average of solves by date \n        let threshold = Math.round(Date.now()/1000)\n        let finalAverages  = []\n        let finalAveragesWeek  = []\n        let finalAveragesMonth  = []\n        let finalAveragesYear  = []\n        let allMS = []\n        let allMSWeek = []\n        let allMSMonth = []\n        let allMSYear = []\n        for (const date of this.state.datesDBunique[0]) {\n            let solvesArray = []\n            let solvesArrayWeek = []\n            let solvesArrayMonth = []\n            let solvesArrayYear = []\n            for (const solve of this.props.solves) {\n                if (solve.date===date){\n                    solvesArray.push(solve.milliseconds)\n                    if (solve.unix > (threshold-604800)){\n                        solvesArrayWeek.push(solve.milliseconds)\n                    }\n                    if (solve.unix > (threshold-2592000)){\n                        solvesArrayMonth.push(solve.milliseconds)\n                    }\n                    if (solve.unix > (threshold-31536000)){\n                        solvesArrayYear.push(solve.milliseconds)\n                    }\n                }\n            }\n            if(solvesArray.length){\n                allMS.push(solvesArray)\n            }\n            if(solvesArrayWeek.length){\n                allMSWeek.push(solvesArrayWeek)\n            }\n            if(solvesArrayMonth.length){\n                allMSMonth.push(solvesArrayMonth)\n            }\n            if(solvesArrayYear.length){\n                allMSYear.push(solvesArrayYear)\n            }\n        }\n        for (const array1 of allMS) {\n            let totalMS = 0\n            let divisor = 0\n            for (const time of array1) {\n                totalMS += Number(time)\n                divisor ++\n            }\n            let avg = (totalMS/divisor)/1000\n            finalAverages.push(Number(avg.toFixed(3)))\n        }\n        for (const array1 of allMSWeek) {\n            let totalMS = 0\n            let divisor = 0\n            for (const time of array1) {\n                totalMS += Number(time)\n                divisor ++\n            }\n            let avg = (totalMS/divisor)/1000\n            finalAveragesWeek.push(Number(avg.toFixed(3)))\n        }\n        for (const array1 of allMSMonth) {\n            var totalMS = 0\n            var divisor = 0\n            for (const time of array1) {\n                totalMS += Number(time)\n                divisor ++\n            }\n            let avg = (totalMS/divisor)/1000\n            finalAveragesMonth.push(Number(avg.toFixed(3)))\n        }\n        for (const array1 of allMSYear) {\n            let totalMS = 0\n            let divisor = 0\n            for (const time of array1) {\n                totalMS += Number(time)\n                divisor ++\n            }\n            let avg = (totalMS/divisor)/1000\n            finalAveragesYear.push(Number(avg.toFixed(3)))\n        }\n\n        this.setState({\n            averagesYear: [finalAveragesYear, ...this.state.averagesYear],\n            averagesMonth: [finalAveragesMonth, ...this.state.averagesMonth],\n            averagesWeek: [finalAveragesWeek, ...this.state.averagesWeek],\n            dateAverages: [finalAverages, ...this.state.dateAverages]\n        })\n    }\n\n    username = (event) => {\n        this.setState({\n            username: event.target.value\n        })\n    }\n\n    newPassword = (event) => {\n        this.setState({\n            newPassword: event.target.value\n        })\n    }\n\n    newPasswordReenter = (event) => {\n        this.setState({\n            newPasswordReenter: event.target.value\n        })\n    }\n\n    oldPassword = (event) => {\n        this.setState({\n            oldPassword: event.target.value\n        })\n    }\n\n    removeSessionFromState = index => {\n        const { solvesSorted } = this.state;\n        this.setState({\n            solvesSorted: solvesSorted.filter((solve, i) => { \n                return i !== index;\n            }),\n        });\n    }\n\n    changeUsername = () => {\n        if (this.state.username.length>2){\n            fetch(\"https://blooming-hollows-98248.herokuapp.com/updateusername\", {\n                method: \"put\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    newUsername: this.state.username,\n                    id: this.props.id\n                })\n            })\n            .then(response=>response.json())\n            .then(data=>{\n                if (data === \"username exists\"){\n                    this.setState({\n                        usernameExists: true, \n                    })\n                }else{\n                    this.props.getNewUsername(this.state.username)\n                    this.props.loadUser(data)\n                    this.usernameChanged()\n                    document.getElementById('txt-input').value='';\n                    this.setState({\n                        usernameExists: false, \n                    })\n                }\n            })\n        }\n    }\n\n    usernameChanged = () => {\n        this.setState({\n            isUsernameChanged: true,\n        })\n    }\n\n    changePassword = () => {\n        if (this.state.newPassword===this.state.newPasswordReenter){\n            fetch(\"https://blooming-hollows-98248.herokuapp.com/updatepassword\",{\n                method: \"put\",\n                headers: {\"Content-Type\":\"application/json\"},\n                body: JSON.stringify({\n                    id: this.props.id,\n                    oldPassword: this.state.oldPassword,\n                    newPassword: this.state.newPassword,\n                }) \n            })\n            .then(response=>response.json())\n            .then(data=>{\n                if(data===\"incorrect password\") {\n                    this.setState({\n                        isWrongPassword: true,\n                    })\n                }else{\n                    this.props.loadUser(data)\n                    document.getElementById(\"change\").value=\"\"\n                    document.getElementById(\"change2\").value=\"\"\n                    document.getElementById(\"change3\").value=\"\"\n                    this.setState({\n                        isWrongPassword: false,\n                        isPasswordMatch: true,\n                        isPasswordChanged: true,\n                    })\n                }\n            })\n        }else{\n            this.setState({\n                isPasswordMatch: false,\n            })\n        }\n    }  \n\n    deleteAccount = () => {\n        fetch(\"https://blooming-hollows-98248.herokuapp.com/deleteaccount\", {\n            method: \"delete\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                password: this.state.deleteAccountPassword,\n                id: this.props.id,\n            })\n        }).then(response=> response.json())\n        .then(data=> {\n            if(data===\"incorrect password\"){\n                this.setState({\n                    isWrongPassword2: true,\n                })\n            }\n            else{\n                localStorage.setItem(\"theme\", JSON.stringify(true))\n                this.props.signIn()\n                this.props.signedIn()\n                sessionStorage.removeItem(\"solvesStored\")\n                localStorage.removeItem(\"scrambleLength\")\n                localStorage.removeItem(\"mobile\")\n                localStorage.removeItem(\"sessionconfirm\")\n                localStorage.removeItem(\"theme\")\n                localStorage.removeItem(\"user\")\n                localStorage.removeItem(\"lastsession\")\n                localStorage.removeItem(\"isCountDownActivated\")\n                localStorage.removeItem(\"ao\")\n                localStorage.removeItem(\"ao2\")\n                localStorage.removeItem(\"inspectionTime\") \n                localStorage.removeItem(\"solveconfirm\")\n                localStorage.removeItem(\"xyz\")\n                localStorage.removeItem(\"color\")\n                localStorage.removeItem(\"offline\")\n                localStorage.setItem(\"countDown\", JSON.stringify(false))\n                localStorage.setItem(\"scrambleLength\", 22)\n                this.props.signout()\n                this.setState({\n                    isWrongPassword2: false,\n                })\n                this.props.scramble(\"3x3\")\n            }\n        })\n    }\n\n    deleteAccountPassword = (event) => {\n        this.setState({\n            deleteAccountPassword: event.target.value\n        })\n    }\n\n    themeToDB = () => {\n        if (this.props.isBackgroundLight){\n            this.props.dark()\n        }else {\n            this.props.light()\n        }\n        localStorage.setItem(\"theme\", JSON.stringify(!this.props.isBackgroundLight))\n        let offline = JSON.parse(localStorage.getItem(\"offline\"))\n        if(!offline){\n            fetch(\"https://blooming-hollows-98248.herokuapp.com/theme\", {\n                method: \"put\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    id: this.props.id,\n                    theme: !this.props.isBackgroundLight\n                })\n            }).then(res=>res.json())\n        }\n    }\n\n    analytics = () => {\n        //route change\n        this.setState({\n            isAnalytics: true,\n            isSolves: false,\n        })\n    }\n\n    settings = () => {\n         //route change   \n        this.setState({\n            isAnalytics: false,\n        })\n    }\n\n    solvesRoute = () => {\n        setTimeout(()=>this.optionSelectOnMount(),5)\n        setTimeout(()=>this.options(),3)\n        this.setState({\n            cardSortValue: \"All sessions\",\n            isSolves: true,\n            isAnalytics: true,\n        })\n    }\n\n    componentDidMount(){\n        this.manageSolveData()\n        setTimeout(()=>this.options(),100)\n        setTimeout(()=>this.cardSortValue(),200)\n    }\n\n    changeIndexNumber = (input) =>{\n        const x = document.getElementById(input)\n        const y = x.options[x.selectedIndex].value\n        this.setState({\n            indexNumberGraphs: y\n        })\n    }\n\n    changeTimePeriod = (input) =>{\n        const x = document.getElementById(input)\n        const y = x.options[x.selectedIndex].value\n        this.setState({\n            timePeriod: y\n        })\n    }\n\n    options = () => {\n        if (document.getElementById(\"cardSelect\")){\n            let optionsArray = [\"All sessions\", ...this.state.categories]\n            const selectbox = document.getElementById(\"cardSelect\")\n            for (const option of optionsArray) {\n                let newOption = document.createElement(\"option\")\n                newOption.text=option\n                newOption.value=option\n                selectbox.add(newOption)\n            }\n        }\n    }\n\n    cardSortValue = () =>{\n        if (this.props.uniqueSessionsDB.length > 4 ){\n            const x = document.getElementById(\"cardSelect\")\n            const y = x.options[x.selectedIndex].value\n            let array1 = []\n            let sessions = []\n            let interfaceSession = {}\n            let countDown = this.state.solvesSorted.length \n            for (const solve of this.state.solvesSorted){\n                let array2 = []\n                for (const solve2 of solve){\n                    if (solve2.puzzle===y || solve2.sessionname===y) {\n                        interfaceSession[solve2.session] = countDown\n                        array2.push(solve2)\n                        sessions.push(solve2.session)\n                    }\n                }\n                countDown--\n                if(array2.length>0){\n                    array1.push(array2)\n                }\n            }\n            sessions = new Set(sessions)\n            sessions = Array.from(sessions)\n            if (array1.length===0){\n                array1=this.state.solvesSorted\n                sessions=this.props.uniqueSessionsDB\n            }\n            \n            this.setState({\n                solvesSortedCardList: array1,\n                cardSortValue: y,\n                interfaceSession: interfaceSession,\n                optionSelected: y,\n            })\n        }\n    }\n\n    optionSelectOnMount = () => {\n        if (this.state.optionSelected.length > 0){\n            let val = this.state.optionSelected;\n            let sel = document.getElementById('cardSelect');\n            let opts = sel.options;\n            let counter = opts.length -1\n            let opt = \"\"\n            let j = 0\n            while (counter > 0) {\n                counter--\n                j++\n                opt = opts[j]\n                if (opt.value === val) {\n                    sel.selectedIndex = j;\n                    break;\n                }\n            }\n        }\n    }\n\n    getAveragesMS = () => {\n        let averageArray = []\n        for (const solves of this.state.solvesSorted) {\n            let msTotal = 0\n            let count = 0\n            for (const solve of solves){\n                msTotal += Number(solve.milliseconds)\n                count++\n            }\n            averageArray.push(Math.round(msTotal/count))\n        }\n        this.setState({\n            averagesMS: averageArray,\n        })\n    }\n\n    compact = () => {\n        this.setState({\n            isCompact: !this.state.isCompact\n        })\n    }\n\n\n    test = () => {\n        // console.log(this.state.cardSortValue)\n    }\n\n    render() {\n        return(\n            <div>\n                {/* <button onClick={this.test}>push</button> */}\n                    <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <div style={{marginRight: \"6%\"}}>\n                        <h1><button onClick={this.props.signIn} style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\">Home</button></h1>\n                        </div>\n                    </nav>\n            \n                <h1 className=\"summary-center\" > <nav style={{display: 'flex'}}>\n                <button onClick={this.solvesRoute} style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\">Solves</button> \n                <button onClick={this.analytics} style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\">Analytics</button> \n                <button onClick={this.settings} style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\">Settings</button> \n                </nav></h1>\n                {this.state.isAnalytics \n                ?\n                (this.state.isSolves ?\n                <div  style={{backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", color: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}}>\n                    {this.props.uniqueSessionsDB.length > 4 ? \n                    <div className=\"compact-container\">\n                        <select style={{color: this.props.isBackgroundLight ?  \"black\" : \"white\"}} className={this.props.isBackgroundLight ? \"summary-center pa1 ba b--green bg-white\" : \"summary-center pa1 ba b--green bg-black\"} onChange={this.cardSortValue} id=\"cardSelect\"></select>\n                        <br></br>\n                        <ul className=\"summary-center\">\n                            <li>\n                                <label htmlFor=\"sessionconfirm\" className=\"label2\"><h4>Compact view:</h4></label>\n                                <input type=\"checkbox\" id=\"sessionconfirm\" className=\" input2\" onClick={this.compact} />  \n                                {/* <label htmlFor=\"sessionconfirm\" className=\"switch compact-switch\"></label> */}\n                            </li>\n                        </ul>\n                    </div>\n                    :\n                    <h1> </h1>\n                    }\n                    <CardList \n                    isCompact={this.state.isCompact}\n                    removeFromSolvesInterface={this.props.removeFromSolvesInterface}\n                    solves={this.props.solves}\n                    send={this.props.send}\n                    puzzleBest={this.state.puzzleBest}\n                    puzzleWorst={this.state.puzzleWorst}\n                    interfaceSession={this.state.interfaceSession}\n                    getSessionNameOnLoad={this.props.getSessionNameOnLoad}\n                    isConfirmSessionDelete={this.props.isConfirmSessionDelete}\n                    isConfirmSolveDelete={this.props.isConfirmSolveDelete}\n                    removeFromSolves={this.props.removeFromSolves} \n                    getSessionNumber={this.props.getSessionNumber} \n                    sessions={this.props.sessions} \n                    getInterfaceSession={this.props.getInterfaceSession} \n                    removeFromUniqueSessionsDB={this.props.removeFromUniqueSessionsDB} \n                    uniqueSessionsDB={this.props.uniqueSessionsDB} \n                    loadPastSessionSolveData={this.props.loadPastSessionSolveData} \n                    removeSessionFromState={this.removeSessionFromState} \n                    getSolves={this.manageSolveData} \n                    id={this.props.id} \n                    solvesSorted={this.state.solvesSortedCardList} \n                    isBackgroundLight={this.props.isBackgroundLight}\n                    />                \n                </div>\n                :\n                <div>\n                    <Graph\n                    timePeriod={this.state.timePeriod}\n                    changeTimePeriod={this.changeTimePeriod}\n                    changeIndexNumber={this.changeIndexNumber}\n                    categories={this.state.categories} \n                    isBackgroundLight={this.props.isBackgroundLight} \n                    averages={this.state.allDateAverages} \n                    dates={this.state.allDates} \n                    />\n                    <GraphNumberSolves \n                    timePeriod={this.state.timePeriod}\n                    indexNumberGraphs={this.state.indexNumberGraphs}\n                    categories={this.state.categories} \n                    isBackgroundLight={this.props.isBackgroundLight} \n                    numberSolves={this.state.allCounts} \n                    dates={this.state.allDates}\n                    />\n                    <Summary \n                    isBackgroundLight={this.props.isBackgroundLight}\n                    data={this.state.puzzlesSummary}\n                    columns={['Puzzle', 'Best Time', 'Total Number of Solves']}\n                    />\n                    <Donut \n                    timePeriod={this.state.timePeriod}\n                    isBackgroundLight={this.props.isBackgroundLight}\n                    numberSolvesCategory={this.state.numberSolvesCategory}\n                    puzzles={this.state.puzzles}\n                    />\n                </div>                    \n                )\n                :\n                <Settings \n                manualEnter={this.props.manualEnter}\n                loadPastSessionSolveData={this.props.loadPastSessionSolveData}\n                solvesApp={this.props.solves}\n                offlineState={this.props.offlineState}\n                changeInspectionTime={this.props.changeInspectionTime}\n                aoNum2={this.props.aoNum2} \n                aoNumChange2={this.props.aoNumChange2}\n                disableTimer={this.props.disableTimer}\n                mobileStartStop={this.props.mobileStartStop}\n                isPasswordChanged={this.state.isPasswordChanged}\n                newPasswordReenter={this.newPasswordReenter}\n                isPasswordMatch={this.state.isPasswordMatch}\n                aoNumChange={this.props.aoNumChange}\n                averagesMS={this.state.averagesMS}\n                getAveragesMS={this.getAveragesMS}\n                addToUniqueSessionsDB={this.props.addToUniqueSessionsDB}\n                getInterfaceSession={this.props.getInterfaceSession}\n                getSessionNumber={this.props.getSessionNumber}\n                manageSolveData={this.manageSolveData}\n                inspection={this.props.inspection}\n                confirmSessionDelete={this.props.confirmSessionDelete}\n                confirmSolveDelete={this.props.confirmSolveDelete}\n                getSolvesFromImport={this.props.getSolvesFromImport}\n                getSolvesFromImportManual={this.props.getSolvesFromImportManual} \n                getCategories={this.getCategories} \n                solves={this.state.solvesSorted} \n                getSolves={this.getSolves} \n                scrambleQuantityMinus={this.props.scrambleQuantityMinus}  \n                scrambleQuantityPlus={this.props.scrambleQuantityPlus} \n                id={this.props.id} \n                uniqueSessionsDB={this.props.uniqueSessionsDB} \n                inspectionTimePlus={this.props.inspectionTimePlus} \n                inspectionTimeMinus={this.props.inspectionTimeMinus} \n                inspectionTime={this.props.inspectionTime}  \n                isCountDownActivated={this.props.isCountDownActivated} \n                aoNum={this.props.aoNum} \n                isBackgroundLight={this.props.isBackgroundLight} \n                signout={this.props.signout} \n                scrambleQuantity={this.props.scrambleQuantity} \n                usernameExists={this.state.usernameExists} \n                isUsernameChanged={this.state.isUsernameChanged} \n                changeUsername={this.changeUsername} \n                newPassword={this.newPassword} \n                oldPassword={this.oldPassword} \n                isWrongPassword={this.state.isWrongPassword} \n                changePassword={this.changePassword} \n                deleteAccountPassword={this.deleteAccountPassword} \n                isWrongPassword2={this.state.isWrongPassword2} \n                deleteAccount={this.deleteAccount} \n                themeToDB={this.themeToDB} \n                username={this.username} \n                />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Dashboard","import React, { Component } from \"react\"\n\nclass NewSessionOptions extends Component{\n    state = {\n        sessionName: null,\n    }\n\n    newSession = () => {\n        this.props.clearScramble()\n        const x = document.getElementById(\"puzzle\")\n        const y = x.options[x.selectedIndex].value\n        const newSession = Math.max(...this.props.uniqueSessionsDB)\n        const sessionLength = this.props.uniqueSessionsDB.length\n        if (y.length>0){\n            this.props.createNewSession(y)\n        } \n        this.props.clearSessionInterfaceSolves()\n        this.props.sessionNameOnChange(this.state.sessionName)\n        this.props.isSessionName(this.state.sessionName)\n        if(this.props.solves.length===0){\n            this.props.getInterfaceSession(sessionLength)\n        }else{\n            if (this.props.isNewSession){\n                this.props.getInterfaceSession(sessionLength)\n            }else{\n                this.props.getSessionNumber(newSession+1)\n                this.props.addToUniqueSessionsDB(newSession+1)\n                this.props.getInterfaceSession(sessionLength + 1)\n            }\n        }\n        this.props.scramble(y)\n        this.props.isNewSessionFunction(true)\n    }\n    \n    sessionOnChange = (event) =>{\n        this.setState({\n            sessionName: event.target.value\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"absolute-center tc\">\n                <h2 style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\"}} >Puzzle:</h2>\n                {this.props.isBackgroundLight ? \n                <select style={{color: \"rgb(23, 23, 23)\"}} className=\"pa1 ba b--green bg-white\" id=\"puzzle\" >\n                    <option value=\"3x3\">3x3</option>\n                    <option value=\"2x2\">2x2</option>\n                    <option value=\"4x4\">4x4</option>\n                    <option value=\"5x5\">5x5</option>\n                    <option value=\"6x6\">6x6</option>\n                    <option value=\"7x7\">7x7</option>\n                    <option value=\"Pyraminx\">Pyraminx</option>\n                    <option value=\"Megaminx\">Megaminx</option>\n                    <option value=\"Skewb\">Skewb</option>\n                    <option value=\"Square-1\">Square-1</option>\n                    <option value=\"Clock\">Clock</option>\n                    <option value=\"3x3 BLD\">3x3 BLD</option>\n                    <option value=\"3x3 OH\">3x3 OH</option>\n                    <option value=\"4x4 BLD\">4x4 BLD</option>\n                    <option value=\"5x5 BLD\">5x5 BLD</option>\n                    <option value=\"Multi-BLD\">Multi-BLD</option>\n                </select>\n                :\n                <select style={{color: \"white\"}} className=\"pa1 ba b--green bg-black\" id=\"puzzle\" >\n                    <option value=\"3x3\">3x3</option>\n                    <option value=\"2x2\">2x2</option>\n                    <option value=\"4x4\">4x4</option>\n                    <option value=\"5x5\">5x5</option>\n                    <option value=\"6x6\">6x6</option>\n                    <option value=\"7x7\">7x7</option>\n                    <option value=\"Pyraminx\">Pyraminx</option>\n                    <option value=\"Megaminx\">Megaminx</option>\n                    <option value=\"Skewb\">Skewb</option>\n                    <option value=\"Square-1\">Square-1</option>\n                    <option value=\"Clock\">Clock</option>\n                    <option value=\"3x3 BLD\">3x3 BLD</option>\n                    <option value=\"3x3 OH\">3x3 OH</option>\n                    <option value=\"4x4 BLD\">4x4 BLD</option>\n                    <option value=\"5x5 BLD\">5x5 BLD</option>\n                    <option value=\"Multi-BLD\">Multi-BLD</option>\n                </select>\n                }\n                <h2 style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\"}} >Session name (optional):</h2>\n                {this.props.isBackgroundLight ? \n                <input style={{color: this.props.isBackgroundLight ? \"rgb(25, 25, 25)\" : \"whitesmoke\"}} className=\"pa1 ba b--green bg-white\" onChange={this.sessionOnChange} type=\"text\"></input>\n                :\n                <input style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"pa1 ba b--green bg-black\" onChange={this.sessionOnChange} type=\"text\"></input>\n                }\n                <h1><button onClick={this.newSession} style={{color: this.props.isBackgroundLight ? \"rgb(23, 23, 23)\" : \"whitesmoke\", backgroundColor: this.props.isBackgroundLight ? \"whitesmoke\" : \"rgb(23, 23, 23)\", borderColor: this.props.isBackgroundLight ?  \"rgb(23, 23, 23)\" : \"whitesmoke\"}} className=\"button2\">Create session</button> </h1>\n            </div>\n        )\n    }\n}\n\nexport default NewSessionOptions","import React, { Component } from \"react\"\nimport \"./NewSignIn.css\"\n\nclass Register extends Component {\n\n    state = {\n        name: \"\",\n        password: \"\",\n        isUserExist: false,\n        key: \"\",\n        id:\"\",\n        isNameLengthWrong: false,\n        isPassWordLengthWrong: false,\n    }\n\n    name = (event) => {\n        this.setState({\n            name: event.target.value\n        })\n    }\n\n    password = (event) => {\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    componentDidMount(){\n        this.key()\n    }\n \n    key = () => {\n        let key = \"\"\n        const letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNNOPQRSTUVWXYZ\"\n        const numbers = \"123456789\"\n        const characters = \"!@#$%^&*()_+=-{}|;\"\n        let length = 10 + Math.ceil(Math.random()*8)\n        for (let i =length; i--; i>0){\n            let typeCharacter = Math.round(Math.random()*2)\n            if (typeCharacter===0){\n                key += letters[Math.round(Math.random()*51)]\n            }else if (typeCharacter===1){\n                key += numbers[Math.round(Math.random()*8)]\n            }else{\n                key += characters[Math.round(Math.random()*17)]\n            }\n        }\n        this.setState({\n            id: key,\n        })\n    }\n\n    submit = () => {\n        let key = \"\"\n        const letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNNOPQRSTUVWXYZ\"\n        const numbers = \"123456789\"\n        const characters = \"!@#$%^&*()_+=-{}|;\"\n        let length = 10 + Math.ceil(Math.random()*8)\n        for (let i =length; i--; i>0){\n            let typeCharacter = Math.round(Math.random()*2)\n            if (typeCharacter===0){\n                key += letters[Math.round(Math.random()*51)]\n            }else if (typeCharacter===1){\n                key += numbers[Math.round(Math.random()*8)]\n            }else{\n                key += characters[Math.round(Math.random()*17)]\n            }\n        }\n        if (this.state.name.length>2 && this.state.name.length<30){\n            this.setState({\n                isNameLengthWrong: false,\n            })\n            if(this.state.password.length>5){\n                this.setState({\n                    isPassWordLengthWrong: false,\n                })\n                fetch(\"https://blooming-hollows-98248.herokuapp.com/register\", {\n                    method: \"post\",\n                    headers: {\"Content-Type\": \"application/json\"},\n                    body: JSON.stringify({\n                        username: this.state.name,\n                        password: this.state.password,\n                        id: key,\n                    })\n                })\n                .then(response => response.json())\n                .then (data => {\n                    if (data === \"user exists\"){\n                        this.setState({\n                            isUserExist: true,\n                        })\n                    } else{\n                        this.props.addToUniqueSessionsDB(1)\n                        this.props.clearSolvesState()\n                        this.props.signIn()\n                        this.props.signedIn()\n                        this.props.loadUser(data)\n                        // fetch(\"https://blooming-hollows-98248.herokuapp.com/register2\", {\n                        //     method: \"post\",\n                        //     headers: {\"Content-Type\": \"application/json\"},\n                        //     body: JSON.stringify({\n                        //         id: key,\n                        //     })\n                        // })\n                        // .then(response => response.json())\n                    }\n                })\n            }else{\n                this.setState({\n                    isPassWordLengthWrong: true\n                })\n            }\n        }else{\n            this.setState({\n                isNameLengthWrong: true,\n            })\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"cardpadding absolute-center tc bg-white dib br3 pa3 ma2 bw2 shadow-5\">\n                <h1 id=\"cardpadding\"> </h1>\n                <h1>Register</h1>\n                <br></br>\n                <input onChange={this.name} type=\"text\" placeholder=\"enter username\" className=\"pa2 ba b--black bg-white\"></input>\n                <br></br>\n                <br></br>\n                <input onChange={this.password} type=\"password\" placeholder=\"enter password\" className=\"pa2 ba b--black bg-white\"></input>\n                <br></br>\n                {this.state.isUserExist ? \n                <h4 style={{color: \"red\"}}>Username already in use</h4>\n                :\n                <h4> </h4>\n                }\n                {this.state.isNameLengthWrong ? \n                <h4 style={{color: \"red\"}}>Username must be between 3 and 20 characters</h4>\n                :\n                <h4> </h4>\n                }\n                {this.state.isPassWordLengthWrong ? \n                <h4 style={{color: \"red\"}}>Password must be longer than five characters</h4>\n                :\n                <h4> </h4>\n                }\n                <h1><button onClick={this.submit} className=\"button2\" style={{color:  \"rgb(23, 23, 23)\", backgroundColor:  \"white\", borderColor: \"rgb(23, 23, 23)\"}}>Register</button></h1>\n                <h4><button onClick={this.props.register}  className=\"button2\"  style={{color:  \"rgb(23, 23, 23)\", backgroundColor:  \"white\", borderColor: \"rgb(23, 23, 23)\"}}>sign in</button></h4>\n                <h1 id=\"paddingbottom\"> </h1>\n            </div>\n        )\n    }\n}\n\nexport default Register","import React, { Component } from \"react\"\nimport \"./NewSignIn.css\"\n\nclass SignIn extends Component {\n\n    state = {\n        username: \"\",\n        password: \"\",\n        isWrongUsername: false,\n        confirm: false,\n        isSigningIn: false,\n    }\n\n    username = (event) => {\n        this.setState ({\n            username: event.target.value\n        })\n    }\n\n    password = (event) => {\n        this.setState ({\n            password: event.target.value\n        })\n    }\n\n    isSigningIn = () => {\n        this.setState({\n            isSigningIn: true,\n        })\n    }\n\n    submitWithEnter = (e) => {\n        if(e.keyCode===13&&this.state.username&&this.state.password){\n            this.submit()\n        }\n    }\n\n    submit = () => {\n        this.timeout = setTimeout(()=> this.isSigningIn(), 1000)\n        fetch(\"https://blooming-hollows-98248.herokuapp.com/signin\", {\n            method: \"post\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password\n            })\n        })\n        .then(response => response.json())\n        .then(data => {\n            if (data===\"unable to get user\"){\n                this.setState({\n                    isWrongUsername: true,\n                    isSigningIn: false,\n                })\n                clearTimeout(this.timeout)\n            } else{\n                this.props.clearScramble()\n                this.props.loadUser(data)\n                this.props.signIn()\n                this.props.signedIn()\n                if(this.state.confirm){\n                    localStorage.setItem(\"user\", JSON.stringify(this.props.user))\n                    localStorage.setItem(\"key\", JSON.stringify(data.key))\n                }\n            }\n        })\n    }\n\n    confirm = () => {\n        this.setState({\n            confirm: !this.state.confirm,\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"cardpadding absolute-center tc bg-white dib br3 pa3 ma2 bw2 shadow-5\">\n                <h1 id=\"cardpadding\"> </h1>\n                <h1>Log In</h1>\n                <input onChange={this.username}  type=\"text\" placeholder=\"enter username\" className=\"pa2 ba b--gray bg-white\"></input>\n                <br></br>\n                <br></br>\n                <input onChange={this.password} type=\"password\" placeholder=\"enter password\" className=\"pa2 ba b--gray bg-white\"></input>\n                <br></br>\n                {\n                this.state.isWrongUsername \n                ? \n                <h4 style={{color: \"red\"}}>Incorrect username or password</h4>\n                :\n                <h4> </h4>\n                }\n                <br></br>\n                <label>\n                    <input onClick={this.confirm} type=\"checkbox\"></input>\n                    <span> Stay signed in</span>\n                </label>\n                <br></br>\n                {this.state.isSigningIn ? \n                <div>\n                    <br></br>\n                    <h4>Signing in...</h4>\n                    <br></br>\n                    <br></br>\n                </div>\n                :\n                // <h1> </h1>\n                <h1><button onClick={this.submit} className=\"button2\" style={{color:  \"rgb(23, 23, 23)\", backgroundColor:  \"white\", borderColor: \"rgb(23, 23, 23)\"}}>sign in</button></h1>\n                }\n                <h4><button onClick={this.props.register} className=\"button2\"  style={{color:  \"rgb(23, 23, 23)\", backgroundColor:  \"white\", borderColor: \"rgb(23, 23, 23)\"}}>Register</button></h4>\n                <h1 id=\"paddingbottom\"> </h1>\n            </div>\n        )\n    }\n    componentDidMount(){\n        document.addEventListener(\"keydown\", this.submitWithEnter)\n    }\n}\n\n\nexport default SignIn","import React, {Component} from 'react';\nimport TimerInterface from \"../src/TimerInterface/TimerInterface\"\nimport Dashboard from \"../src/Dashboard/Dashboard\"\nimport NewSessionOptions from \"./NewSessionOptions\"\nimport \"./App.css\"\nimport Register from './NewRegister';\nimport SignIn from './NewSignIn';\nimport confetti from 'canvas-confetti';\n\nclass App extends Component {\n  state = {\n    isHome: true,\n    isRegistered: false,\n    isSignedIn: false,\n    isDashboard: false,\n    isBackgroundLight: true,\n    backgroundColor: \"\",\n    user: {\n      username: \"\",\n      id: \"\",\n    },\n    scrambleQuantity: 22,\n    sessions: \"\",\n    uniqueSessionsDB: [],\n    sessionInterface: \"\",\n    aoNum: 5,\n    aoNum2: 12,\n    isCountDownActivated: false,\n    inspectionTime: 0,\n    puzzleType: \"3x3\",\n    isCreateNewSession: false,\n    sessionName: null,\n    isSessionName: false,\n    isConfirmSolveDelete: false,\n    isConfirmSessionDelete: false,\n    solves: [],\n    isNewSession: false,\n    solvesInterface: [],\n    isMobile: false,\n    isTimerDisabled: false,\n    isOffline: false, \n    isGetSolvesOnMount: false,\n    multiBLDScramble: \"\",\n    scramble: \"\",\n    megaminxScramble: \"\",\n    isDisplayScrambleMedium: false,\n    isDisplayScrambleSmall: false,\n    isManualEnter: false,\n  }\n\n  receive = () => {\n    let offline = false\n    if (localStorage.offline){\n      offline = JSON.parse(localStorage.getItem(\"offline\"))\n    }\n    if(this.state.user.id.length>0){\n      if(!this.isGetSolvesOnMount){\n        if(!offline){\n          this.setState({\n            solves: \"loading...\"\n          })\n          fetch(\"https://blooming-hollows-98248.herokuapp.com/receive\",{\n            method: \"post\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n              id: this.state.user.id,\n            })\n          }).then(response=>response.json())\n          .then(data=>{\n            let parsedData = []\n            if(data.length>0){\n              // console.log((data[0].solves))\n              // console.log(JSON.parse(\"{\\\"solves\\\":\\\"{\\\\\\\"allsolves\\\\\\\":[{\\\\\\\"id\\\\\\\":\\\\\\\")c#|=23U63b$7^\\\\\\\",\\\\\\\"solve\\\\\\\":\\\\\\\"0.369\\\\\\\",\\\\\\\"scramble\\\\\\\":\\\\\\\"R U2 L2 U2 F R U L B2 D B2 R2 D2 F' R' U L2 U2 B' D2 F L U2 \\\\\\\",\\\\\\\"milliseconds\\\\\\\":\\\\\\\"369\\\\\\\",\\\\\\\"isplustwo\\\\\\\":false,\\\\\\\"isdnf\\\\\\\":false,\\\\\\\"date\\\\\\\":\\\\\\\"2020-08-08\\\\\\\",\\\\\\\"solveid\\\\\\\":\\\\\\\"1596938498865\\\\\\\",\\\\\\\"plustwo\\\\\\\":\\\\\\\"2.369\\\\\\\",\\\\\\\"millisecondstwo\\\\\\\":\\\\\\\"2369\\\\\\\",\\\\\\\"session\\\\\\\":1,\\\\\\\"unix\\\\\\\":\\\\\\\"1596938499\\\\\\\",\\\\\\\"puzzle\\\\\\\":\\\\\\\"3x3\\\\\\\",\\\\\\\"sessionname\\\\\\\":null},{\\\\\\\"id\\\\\\\":\\\\\\\")c#|=23U63b$7^\\\\\\\",\\\\\\\"solve\\\\\\\":\\\\\\\"0.303\\\\\\\",\\\\\\\"scramble\\\\\\\":\\\\\\\"B U2 L U' B2 R' U' B L U2 B' L2 D B2 R U' B R U L' U2 B2 R2 \\\\\\\",\\\\\\\"milliseconds\\\\\\\":\\\\\\\"303\\\\\\\",\\\\\\\"isplustwo\\\\\\\":false,\\\\\\\"isdnf\\\\\\\":false,\\\\\\\"date\\\\\\\":\\\\\\\"2020-08-08\\\\\\\",\\\\\\\"solveid\\\\\\\":\\\\\\\"1596938563803\\\\\\\",\\\\\\\"plustwo\\\\\\\":\\\\\\\"2.303\\\\\\\",\\\\\\\"millisecondstwo\\\\\\\":\\\\\\\"2303\\\\\\\",\\\\\\\"session\\\\\\\":1,\\\\\\\"unix\\\\\\\":\\\\\\\"1596938564\\\\\\\",\\\\\\\"puzzle\\\\\\\":\\\\\\\"3x3\\\\\\\",\\\\\\\"sessionname\\\\\\\":null},{\\\\\\\"id\\\\\\\":\\\\\\\")c#|=23U63b$7^\\\\\\\",\\\\\\\"solve\\\\\\\":\\\\\\\"18.831\\\\\\\",\\\\\\\"scramble\\\\\\\":\\\\\\\"B' L U2 F L U2 B' L D2 B2 L' D' F' L' D2 B2 R D B L' D2 F' L2 \\\\\\\",\\\\\\\"milliseconds\\\\\\\":\\\\\\\"18831\\\\\\\",\\\\\\\"isplustwo\\\\\\\":false,\\\\\\\"isdnf\\\\\\\":false,\\\\\\\"date\\\\\\\":\\\\\\\"2020-08-10\\\\\\\",\\\\\\\"solveid\\\\\\\":\\\\\\\"1597110976183\\\\\\\",\\\\\\\"plustwo\\\\\\\":\\\\\\\"20.831\\\\\\\",\\\\\\\"millisecondstwo\\\\\\\":\\\\\\\"20831\\\\\\\",\\\\\\\"session\\\\\\\":2,\\\\\\\"unix\\\\\\\":\\\\\\\"1597110976\\\\\\\",\\\\\\\"puzzle\\\\\\\":\\\\\\\"3x3\\\\\\\",\\\\\\\"sessionname\\\\\\\":null},{\\\\\\\"id\\\\\\\":\\\\\\\")c#|=23U63b$7^\\\\\\\",\\\\\\\"solve\\\\\\\":\\\\\\\"22.060\\\\\\\",\\\\\\\"scramble\\\\\\\":\\\\\\\"D2 L2 F2 U F' L' U B' R D2 F' R D L2 D2 F2 L' U B D2 L2 D B \\\\\\\",\\\\\\\"milliseconds\\\\\\\":\\\\\\\"22060\\\\\\\",\\\\\\\"isplustwo\\\\\\\":false,\\\\\\\"isdnf\\\\\\\":false,\\\\\\\"date\\\\\\\":\\\\\\\"2020-08-10\\\\\\\",\\\\\\\"solveid\\\\\\\":\\\\\\\"1597111029899\\\\\\\",\\\\\\\"plustwo\\\\\\\":\\\\\\\"24.060\\\\\\\",\\\\\\\"millisecondstwo\\\\\\\":\\\\\\\"24060\\\\\\\",\\\\\\\"session\\\\\\\":2,\\\\\\\"unix\\\\\\\":\\\\\\\"1597111030\\\\\\\",\\\\\\\"puzzle\\\\\\\":\\\\\\\"3x3\\\\\\\",\\\\\\\"sessionname\\\\\\\":null},{\\\\\\\"id\\\\\\\":\\\\\\\")c#|=23U63b$7^\\\\\\\",\\\\\\\"solve\\\\\\\":\\\\\\\"18.222\\\\\\\",\\\\\\\"scramble\\\\\\\":\\\\\\\"B U2 L' D' B' R2 D' L2 D2 F L U' F D2 L U2 F2 R2 D' L' F D2 B \\\\\\\",\\\\\\\"milliseconds\\\\\\\":\\\\\\\"18222\\\\\\\",\\\\\\\"isplustwo\\\\\\\":false,\\\\\\\"isdnf\\\\\\\":false,\\\\\\\"date\\\\\\\":\\\\\\\"2020-08-10\\\\\\\",\\\\\\\"solveid\\\\\\\":\\\\\\\"1597111085706\\\\\\\",\\\\\\\"plustwo\\\\\\\":\\\\\\\"20.222\\\\\\\",\\\\\\\"millisecondstwo\\\\\\\":\\\\\\\"20222\\\\\\\",\\\\\\\"session\\\\\\\":2,\\\\\\\"unix\\\\\\\":\\\\\\\"1597111086\\\\\\\",\\\\\\\"puzzle\\\\\\\":\\\\\\\"3x3\\\\\\\",\\\\\\\"sessionname\\\\\\\":null},{\\\\\\\"id\\\\\\\":\\\\\\\")c#|=23U63b$7^\\\\\\\",\\\\\\\"solve\\\\\\\":\\\\\\\"24.099\\\\\\\",\\\\\\\"scramble\\\\\\\":\\\\\\\"L' B' D' L U2 B L U B D' L2 B D2 R2 U F' D B R U2 B L U2 \\\\\\\",\\\\\\\"milliseconds\\\\\\\":\\\\\\\"24099\\\\\\\",\\\\\\\"isplustwo\\\\\\\":false,\\\\\\\"isdnf\\\\\\\":false,\\\\\\\"date\\\\\\\":\\\\\\\"2020-08-10\\\\\\\",\\\\\\\"solveid\\\\\\\":\\\\\\\"1597111142679\\\\\\\",\\\\\\\"plustwo\\\\\\\":\\\\\\\"26.099\\\\\\\",\\\\\\\"millisecondstwo\\\\\\\":\\\\\\\"26099\\\\\\\",\\\\\\\"session\\\\\\\":2,\\\\\\\"unix\\\\\\\":\\\\\\\"1597111143\\\\\\\",\\\\\\\"puzzle\\\\\\\":\\\\\\\"3x3\\\\\\\",\\\\\\\"sessionname\\\\\\\":null},{\\\\\\\"id\\\\\\\":\\\\\\\")c#|=23U63b$7^\\\\\\\",\\\\\\\"solve\\\\\\\":\\\\\\\"27.765\\\\\\\",\\\\\\\"scramble\\\\\\\":\\\\\\\"F2 U B D F R D F2 R D2 B R' U2 F2 R' D' B L' D2 F R' U2 L2 \\\\\\\",\\\\\\\"milliseconds\\\\\\\":\\\\\\\"27765\\\\\\\",\\\\\\\"isplustwo\\\\\\\":false,\\\\\\\"isdnf\\\\\\\":true,\\\\\\\"date\\\\\\\":\\\\\\\"2020-08-10\\\\\\\",\\\\\\\"solveid\\\\\\\":\\\\\\\"1597111197697\\\\\\\",\\\\\\\"plustwo\\\\\\\":\\\\\\\"29.765\\\\\\\",\\\\\\\"millisecondstwo\\\\\\\":\\\\\\\"29765\\\\\\\",\\\\\\\"session\\\\\\\":2,\\\\\\\"unix\\\\\\\":\\\\\\\"1597111198\\\\\\\",\\\\\\\"puzzle\\\\\\\":\\\\\\\"3x3\\\\\\\",\\\\\\\"sessionname\\\\\\\":null},{\\\\\\\"id\\\\\\\":\\\\\\\")c#|=23U63b$7^\\\\\\\",\\\\\\\"solve\\\\\\\":\\\\\\\"26.828\\\\\\\",\\\\\\\"scramble\\\\\\\":\\\\\\\"F U R U B' R2 U2 F L2 U' B' R U2 B' D2 F R2 D' B L2 D' F2 L \\\\\\\",\\\\\\\"milliseconds\\\\\\\":\\\\\\\"26828\\\\\\\",\\\\\\\"isplustwo\\\\\\\":false,\\\\\\\"isdnf\\\\\\\":false,\\\\\\\"date\\\\\\\":\\\\\\\"2020-08-10\\\\\\\",\\\\\\\"solveid\\\\\\\":\\\\\\\"1597111347463\\\\\\\",\\\\\\\"plustwo\\\\\\\":\\\\\\\"28.828\\\\\\\",\\\\\\\"millisecondstwo\\\\\\\":\\\\\\\"28828\\\\\\\",\\\\\\\"session\\\\\\\":2,\\\\\\\"unix\\\\\\\":\\\\\\\"1597111347\\\\\\\",\\\\\\\"puzzle\\\\\\\":\\\\\\\"3x3\\\\\\\",\\\\\\\"sessionname\\\\\\\":null}]}\\\"}\"))\n              if(data[0].solves){\n                parsedData = JSON.parse(data[0].solves).allsolves\n              }\n            }\n            this.getSolvesOnMountPrevent()\n            this.setState({\n              solves: parsedData\n            })\n            let sessions = []\n            if(parsedData.length>0){\n              sessions = parsedData.map(solves => solves.session)\n            }\n            if (sessions.length === 0) {\n              this.addToUniqueSessionsDBOnMount(1)\n              this.getSessionNumber(1)\n              this.getInterfaceSession(1)\n              this.props.scramble(\"3x3\")\n              } else if (parsedData.length===0){\n                this.getInterfaceSession(1)\n                this.props.scramble(\"3x3\")\n                }else{\n                  this.addToUniqueSessionsDBOnMount(Array.from(new Set(sessions)).reverse())\n                  this.getSessionNumber(Math.max.apply(Math,sessions))\n                  this.getInterfaceSession(Array.from(new Set(sessions)).length)\n                  this.getInterfaceSolves([])\n                    let allSolves = []\n                    for (const solve of parsedData){\n                      if (Math.max.apply(Math,sessions) === solve.session){\n                        allSolves = [solve, ...allSolves]\n                        this.getSessionNameOnLoad(solve.sessionname, solve.puzzle)\n                        this.isSessionName(solve.sessionname)\n                        this.props.scramble(solve.puzzle)\n                      }\n                    }\n              this.getInterfaceSolves(allSolves)\n            }\n          })\n        }else{\n          let solves = localStorage.getItem(\"offlinesolves\")\n          solves = JSON.parse(solves).solves\n          this.setState({\n            solves: solves\n          })\n          let sessions = solves.map(solves => solves.session)\n          if (sessions.length === 0) {\n            this.addToUniqueSessionsDBOnMount(1)\n            this.getSessionNumber(1)\n            this.getInterfaceSession(1)\n            this.props.scramble(\"3x3\")\n          } else if (solves.length===0){\n            this.getInterfaceSession(1)\n            this.props.scramble(\"3x3\")\n          }else{\n            this.addToUniqueSessionsDBOnMount(Array.from(new Set(sessions)).reverse())\n            this.getSessionNumber(Math.max.apply(Math,sessions))\n            this.getInterfaceSession(Array.from(new Set(sessions)).length)\n            this.getInterfaceSolves([])\n            let allSolves = []\n            for (const solve of solves){\n              if (Math.max.apply(Math,sessions) === solve.session){\n                allSolves = [solve, ...allSolves]\n                this.getSessionNameOnLoad(solve.sessionname, solve.puzzle)\n                this.isSessionName(solve.sessionname)\n                this.props.scramble(solve.puzzle)\n              }\n            }\n            this.getInterfaceSolves(allSolves)\n          }\n        }\n      }\n    }\n  }\n\n  getSolvesOnMountPrevent = () => {\n    this.setState({\n      isGetSolvesOnMount: true\n    })\n  }\n\n  getUserInfo = () => {\n    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n    if(!offline){\n      if (this.state.user.id){\n        fetch(\"https://blooming-hollows-98248.herokuapp.com/getuserinfo\", {\n          method: \"post\",\n          headers: {\"Content-Type\": \"application/json\"},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response=>response.json())\n        .then(data=>{\n          this.setState({\n            isConfirmSolveDelete: data.confirmsolve,\n            isConfirmSessionDelete: data.confirmsession,\n            inspectionTime: data.inspectiontime,\n            isMobile: data.mobile,\n            isCountDownActivated: data.inspection,\n            isBackgroundLight: data.theme,\n            scrambleQuantity: data.scramblelength,\n            aoNum: data.aonumber, \n            aoNum2: data.aonumber2, \n            isTimerDisabled: data.disabletimer,\n            isOffline: data.offline,\n            isManualEnter: data.manualenter,\n          })\n          let theme = JSON.parse(localStorage.getItem(\"theme\"))\n          localStorage.setItem(\"manualenter\", JSON.stringify(data.manualenter))\n          localStorage.setItem(\"disabletimer\", JSON.stringify(data.disabletimer))\n          localStorage.setItem(\"inspectionTime\", JSON.stringify(data.inspectiontime))\n          localStorage.setItem(\"countDown\", JSON.stringify(data.inspection))\n          localStorage.setItem(\"scrambleLength\", data.scramblelength)\n          localStorage.setItem(\"theme\", JSON.stringify(data.theme))\n          localStorage.setItem(\"ao\", JSON.stringify(data.aonumber))\n          localStorage.setItem(\"ao2\", JSON.stringify(data.aonumber2))\n          localStorage.setItem(\"solveconfirm\", JSON.stringify(data.confirmsolve))\n          localStorage.setItem(\"sessionconfirm\", JSON.stringify(data.confirmsession))\n          localStorage.setItem(\"mobile\", JSON.stringify(data.mobile))\n          localStorage.setItem(\"offline\", JSON.stringify(data.offline))\n          if (data.theme !== theme){\n            this.setState({\n              isBackgroundLight: data.theme,\n            })\n            if (theme){\n              this.dark()\n            }else{\n              this.light()\n            }\n            localStorage.setItem(\"theme\", JSON.stringify(data.theme))\n          }\n        })\n      }else{\n        this.props.scramble(\"3x3\")\n      }\n    }\n    this.receive()\n  }\n\n  send = (input) => {\n    //testing storing all solves in one cell\n    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n    if(!offline){\n      fetch(\"https://blooming-hollows-98248.herokuapp.com/sendsolves\",{\n        method: \"put\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({\n          id: this.state.user.id,\n          solves: {\"allsolves\": input},\n        })\n      }).then(response=>response.json())\n    }\n  }\n\n  getInterfaceSolves = (input) => {\n    this.setState({\n      solvesInterface: input\n    })\n  }\n\n  getInterfaceSolvesSingle = (input) => {\n    this.setState({\n      solvesInterface: [...this.state.solvesInterface, input]\n    })\n  }\n\n  isNewSessionFunction = (input) => {\n    //checks to see if new session has just been created\n    this.setState({\n      isNewSession: input\n    })\n  }\n\n  clearSessionInterfaceSolves = () => {\n    this.setState({\n      solvesInterface: []\n    })\n  }\n\n  disableTimer = () => {\n    //Toggles timer disable in database\n    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n    if(offline){\n      localStorage.setItem(\"disabletimer\", JSON.stringify(!this.state.isTimerDisabled))\n    }else{\n      fetch(\"https://blooming-hollows-98248.herokuapp.com/disabletimer\", {\n        method: \"post\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({\n          id: this.state.user.id,\n          disabletimer: !this.state.isTimerDisabled,\n        })\n      }).then(response=>response.json())\n    }\n    this.setState({\n      isTimerDisabled: !this.state.isTimerDisabled\n    })\n  }\n\n  manualEnter = () => {\n    //Toggles session delete confirm in database\n    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n    if(offline){\n      localStorage.setItem(\"manualenter\", JSON.stringify(!this.state.isManualEnter))\n    }else{\n      fetch(\"https://blooming-hollows-98248.herokuapp.com/manualenter\", {\n        method: \"post\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({\n          id: this.state.user.id,\n          manualenter: !this.state.isManualEnter,\n        })\n      }).then(response=>response.json())\n    }\n    this.setState({\n      isManualEnter: !this.state.isManualEnter\n    })\n  }\n\n  confirmSessionDelete = () => {\n    //Toggles session delete confirm in database\n    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n    if(offline){\n      localStorage.setItem(\"sessionconfirm\", JSON.stringify(!this.state.isConfirmSessionDelete))\n    }else{\n      fetch(\"https://blooming-hollows-98248.herokuapp.com/confirmsession\", {\n        method: \"post\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({\n          id: this.state.user.id,\n          confirmSession: !this.state.isConfirmSessionDelete,\n        })\n      }).then(response=>response.json())\n    }\n    this.setState({\n      isConfirmSessionDelete: !this.state.isConfirmSessionDelete\n    })\n  }\n\n  mobileStartStop = () => {\n    //Toggles mobile in database\n    //If on, there is clickable start button\n    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n    if(offline){\n      localStorage.setItem(\"mobile\", JSON.stringify(!this.state.isMobile))\n      this.setState({\n        isMobile: !this.state.isMobile\n      })\n    }else{\n      fetch(\"https://blooming-hollows-98248.herokuapp.com/mobile\", {\n        method: \"post\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({\n          id: this.state.user.id,\n          mobile: !this.state.isMobile,\n        })\n      }).then(response=>response.json())\n      .then(\n        this.setState({\n          isMobile: !this.state.isMobile\n        })\n      )\n    }\n  }\n\n  confirmSolveDelete = () => {\n    //Toggles solve delete confirm in database\n    //If on, user is asked if they want to delete solves\n    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n    if(offline){\n      localStorage.setItem(\"solveconfirm\", JSON.stringify(!this.state.isConfirmSolveDelete))\n      this.setState({\n        isConfirmSolveDelete: !this.state.isConfirmSolveDelete\n      })\n    }\n    fetch(\"https://blooming-hollows-98248.herokuapp.com/confirmsolve\", {\n      method: \"post\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n        id: this.state.user.id,\n        confirmSolve: !this.state.isConfirmSolveDelete,\n      })\n    }).then(response=>response.json())\n    .then(\n      this.setState({\n        isConfirmSolveDelete: !this.state.isConfirmSolveDelete\n      })\n    )\n  }\n\n  removeFromSolves = (session) => {\n    //Removes solves based on session parameter\n    this.setState({\n      solves: [...this.state.solves].filter(solve=>{\n        return solve.session !== session\n      })\n    })\n  }\n\n  removeFromSolvesInterface = (session) => {\n    //Removes solves based on session parameter\n    this.setState({\n      solvesInterface: [...this.state.solvesInterface].filter(solve=>{\n        return solve.session !== session\n      })\n    })\n  }\n\n  getAllSolves = (input) => {\n    this.setState({\n      solves: input\n    })\n  }\n\n  inspection = () => {\n    //Toggles when inspection time runs or not\n    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n    if(offline){\n      localStorage.setItem(\"countDown\", JSON.stringify(!this.state.isCountDownActivated))\n      this.setState({\n        isCountDownActivated: !this.state.isCountDownActivated\n      })\n    }else{\n      fetch(\"https://blooming-hollows-98248.herokuapp.com/inspection\", {\n        method: \"post\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({\n          id: this.state.user.id,\n          inspection: !this.state.isCountDownActivated,\n        })\n      }).then(response=>response.json())\n      .then(\n        this.setState({\n          isCountDownActivated: !this.state.isCountDownActivated\n        })\n      )\n    }\n  }\n\n  isSessionName = (input) => {\n    //updates state so that timer interface know whether \n    //or not to display session name\n    if(input===null||input===\"\"){\n      this.setState({\n        isSessionName: false,\n      })\n    }else{\n      this.setState({\n        isSessionName: true,\n      })\n    }\n  }\n\n\n  changeInspectionTime = (input) => {\n    //increases inspection time\n      let offline = JSON.parse(localStorage.getItem(\"offline\"))\n      if(offline){\n        localStorage.setItem(\"inspectionTime\", JSON.stringify(input))\n      }else{\n        fetch(\"https://blooming-hollows-98248.herokuapp.com/inspectiontime\", {\n          method: \"put\",\n          headers: {\"Content-Type\": \"application/json\"},\n          body: JSON.stringify({\n            id: this.state.user.id,\n            time: input\n          })\n        }).then(response=>response.json())\n      }\n      this.setState({\n        inspectionTime: input\n      })\n    // }\n  }\n\n  removeFromUniqueSessionsDB = (input) => {\n    let x\n    if (this.state.uniqueSessionsDB.length>0){\n      x = this.state.uniqueSessionsDB.filter(item => item !== input)\n    }\n    if(this.state.uniqueSessionsDB.length===0){\n      x = [1]\n      this.setState({\n        sessionInterface: 1\n      })\n    }\n    this.setState({\n      uniqueSessionsDB: x\n    })\n  }\n\n  addToUniqueSessionsDB = (input) => {\n    if (this.state.uniqueSessionsDB.length===0){\n      this.setState({\n        uniqueSessionsDB: [1]\n      })\n    }else if (input.length>1){\n      this.setState({\n        uniqueSessionsDB: input\n      })\n    }else{\n      this.setState({\n        uniqueSessionsDB: [...this.state.uniqueSessionsDB,input]\n      })\n    }\n  }\n\n  addToUniqueSessionsDBOnMount = (input) => {\n    if (input.length>1){\n      this.setState({\n        uniqueSessionsDB: input\n      })\n    }else if (input.length===1){\n      this.setState({\n        uniqueSessionsDB: [...this.state.uniqueSessionsDB,input]\n      })\n    }else{\n      this.setState({\n        uniqueSessionsDB: [1]\n      })\n    }\n  }\n\n  clearSolvesState = () => {\n    this.setState({\n      solves: []\n    })\n  }\n\n  newSessionApp = () => {\n    //changes route\n    if(this.state.solves!==\"loading...\"){\n      this.setState({\n        isCreateNewSession: true\n      })\n    }\n  }\n\n  createNewSession = (input) => {\n    //creates new session after options have been selected\n    //and changes route\n    this.setState({\n      isCreateNewSession: false,\n    })\n    this.setState({\n      puzzleType: input\n    })\n  }\n\n  sessionName = (name) => {\n    //updates session name on interface\n    this.setState({\n      sessionName: name\n    })\n  }\n\n  signIn = () => {\n    // route switch \n    this.setState ({\n      isHome: !this.state.isHome,\n    })\n  }\n\n  dashboard = () => {\n    // route switch\n    if(this.state.solves!==\"loading...\"){\n      this.setState({\n        isDashboard: !this.state.isDashboard,\n        isHome: !this.state.isHome,\n      })\n    }\n  }\n\n  signedIn = () => {\n    // route switch \n    this.setState ({\n      isSignedIn: !this.state.isSignedIn,\n    })\n  }\n\n  register = () => {\n    //route switch\n    this.setState ({\n      isRegistered: !this.state.isRegistered,\n    })\n  }\n\n  dark = () => {\n    //changes theme to dark\n    document.body.style.backgroundColor = \"rgb(23,23,23)\"\n    this.setState({\n      isBackgroundLight: false,\n    })\n    localStorage.setItem(\"theme\", JSON.stringify(false))\n  }\n\n  light = () => {\n    // changes theme to light\n    document.body.style.backgroundColor = \"whitesmoke\"\n    this.setState({\n      isBackgroundLight: true,\n    })\n    localStorage.setItem(\"theme\", JSON.stringify(true))\n  }\n\n  loadUser = (data) => {\n    // loads user data when sign in successful\n    this.setState ({ \n      user:{\n        username: data.username,\n        id: data.id,\n      },\n      scrambleQuantity: data.scramblelength,\n      isBackgroundLight: data.theme,\n      aoNum: data.aonumber,\n      aoNum2: data.aonumber2,\n      isCountDownActivated: data.inspection, \n      inspectionTime: data.inspectiontime,\n      isMobile: data.mobile,\n      isTimerDisabled: data.disabletimer,\n      isConfirmSolveDelete: data.confirmsolve,\n      isConfirmSessionDelete: data.confirmsession,\n      isOffline: data.offline,\n      isManualEnter: data.manualenter,\n    })\n    if(data.theme){\n      document.body.style.backgroundColor = \"whitesmoke\"\n    }else{\n      document.body.style.backgroundColor = \"rgb(23,23,23)\"\n    }\n    this.receive()\n    localStorage.setItem(\"manualenter\", JSON.stringify(data.manualenter))\n    localStorage.setItem(\"disabletimer\", JSON.stringify(data.disabletimer))\n    localStorage.setItem(\"inspectionTime\", JSON.stringify(data.inspectiontime))\n    localStorage.setItem(\"countDown\", JSON.stringify(data.inspection))\n    localStorage.setItem(\"scrambleLength\", data.scramblelength)\n    localStorage.setItem(\"theme\", JSON.stringify(data.theme))\n    localStorage.setItem(\"ao\", JSON.stringify(data.aonumber))\n    localStorage.setItem(\"ao2\", JSON.stringify(data.aonumber2))\n    localStorage.setItem(\"solveconfirm\", JSON.stringify(data.confirmsolve))\n    localStorage.setItem(\"sessionconfirm\", JSON.stringify(data.confirmsession))\n    localStorage.setItem(\"mobile\", JSON.stringify(data.mobile))\n    localStorage.setItem(\"offline\", JSON.stringify(data.offline))\n  }\n\n  getTheme = () => {\n    // gets theme from local storage\n    if(this.state.user.id.length){\n      if(localStorage.theme){\n        let x = JSON.parse(localStorage.getItem(\"theme\"))\n        if (x !== true) {\n          document.body.style.backgroundColor = \"rgb(23,23,23)\"\n          this.setState({\n            isBackgroundLight: x\n          })\n        }\n      }\n    }\n  }\n\n  signout = () => {\n    //resets settings when signout clicked\n    this.setState({\n      user: {\n        username: \"\",\n        password: \"\",\n        id: 0,\n      },\n      aoNum: 5, \n      aoNum2: 12,\n      scrambleQuantity: 22,\n      isSignedIn: false,\n      isDashboard: false,\n      isHome: true,\n      isRegistered: false,\n      isBackgroundLight: true,\n      puzzleType: \"3x3\",\n      solves: [],\n      isCountDownActivated: false,\n      inspectionTime: 0,\n      solvesInterface: [],\n      isMobile: false,\n      isGetSolvesOnMount: false,\n      isManualEnter: false,\n    })\n    document.body.style.backgroundColor = \"whitesmoke\"\n    localStorage.removeItem(\"manualenter\")\n    localStorage.removeItem(\"mobile\")\n    localStorage.removeItem(\"sessionconfirm\")\n    localStorage.removeItem(\"theme\")\n    localStorage.removeItem(\"user\")\n    localStorage.removeItem(\"lastsession\")\n    localStorage.removeItem(\"isCountDownActivated\")\n    localStorage.removeItem(\"ao\")\n    localStorage.removeItem(\"ao2\")\n    localStorage.removeItem(\"inspectionTime\") \n    localStorage.removeItem(\"solveconfirm\")\n    localStorage.removeItem(\"xyz\")\n    localStorage.removeItem(\"color\")\n    localStorage.removeItem(\"offline\")\n    localStorage.setItem(\"countDown\", JSON.stringify(false))\n    localStorage.setItem(\"scrambleLength\", 22)\n    this.props.scramble(\"3x3\")\n  }\n\n  setScrambleLength = () => {\n    //sets length of scramble stored in localStorage\n    let scramble \n    if(localStorage.scrambleLength){\n      scramble = Number(localStorage.getItem(\"scrambleLength\"))\n    }else{\n      scramble = 22\n    }\n    this.setState({\n      scrambleQuantity: scramble\n    })\n  }\n\n  getSessionNameOnLoad = (name, puzzle) =>{\n    //gets session name and puzzle type \n    if (name === null||name===\"\"){\n      this.setState({\n        isSessionName: false,\n      })\n    }\n    this.setState({\n      sessionName: name,\n      puzzleType: puzzle\n    })\n  }\n\n  loadPastSessionSolveData = (session, index, boolean) => {\n    //resumes session from saved solves list when clicked\n    this.clearScramble()\n    this.setState({\n      sessions: session,\n      sessionInterface: index,\n      // sessions: session,\n      // sessionInterface: index,\n    })\n    if(boolean===true){\n      this.setState({\n      isHome: true,\n      isDashboard: false,\n      })\n    }\n    let allSolves = []\n      for (const solve of this.state.solves){\n        if (session === solve.session){\n          allSolves = [solve, ...allSolves]\n          this.getSessionNameOnLoad(solve.sessionname, solve.puzzle)\n          this.isSessionName(solve.sessionname)\n          this.props.scramble(solve.puzzle)\n        }\n      }\n      this.getInterfaceSolves(allSolves)\n  }\n\n  getSessionNumber = (input) => {\n    this.setState({\n      sessions: input\n    })\n  }\n\n  getInterfaceSession = (input) => {\n    this.setState({\n      sessionInterface: input\n    })\n  }\n\n  aoNumChange = (input) => {\n    this.setState({\n      aoNum: input\n    })\n  }\n\n  aoNumChange2 = (input) => {\n    this.setState({\n      aoNum2: input\n    })\n  }\n\n  getSolveFromInterface = (input) =>{\n    //gets solve when timer stops\n    //puts it into solve in state\n    this.setState({\n      solves: [...this.state.solves, input]\n    })\n  }\n\n  getSolvesFromImportManual = (input) => {\n    //gets solves when user manually imports\n    let solves = [...this.state.solves, input]\n    this.send(solves)\n    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n    if(offline){\n      localStorage.setItem(\"offlinesolves\", JSON.stringify({\"solves\":[...solves]}))\n    }\n    this.setState({\n      solves: solves\n    })\n  }\n\n  getSolvesFromImport = (input) => {\n    let solves = [...this.state.solves.concat(...input)]\n    this.send(solves)\n    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n    if(offline){\n      localStorage.setItem(\"offlinesolves\", JSON.stringify({\"solves\":[...solves]}))\n    }\n    this.setState({\n      solves: solves\n    })\n  }\n\n  fire = (particleRatio, opts, x) => {\n    var count = 500;\n    var defaults = {\n      origin: { y: -.9, x:x },\n      decay: 200,\n      angle: 270,\n      ticks: 300,\n    };\n    confetti(Object.assign({}, defaults, opts, {\n      particleCount: Math.floor(count * particleRatio)\n    }));\n  }\n\n  confettiLaunch = () => {\n    this.fire(0.25, {\n      spread: 26,startVelocity: 55,\n    },.5)\n    this.fire(0.2, {\n      spread: 60,\n    },.5);\n    this.fire(0.35, {\n      spread: 100,\n      decay: 0.91,\n    },.5);\n    this.fire(0.1, {\n      spread: 120,\n      startVelocity: 25,\n      decay: 0.92,\n    },.5);\n    this.fire(0.1, {\n      spread: 120,\n      startVelocity: 45,\n    },.5);\n    this.fire(0.25, \n      {spread: 26,\n      startVelocity: 55,})\n    this.fire(0.2, {\n      spread: 60,\n    },.8);\n    this.fire(0.35, {\n      spread: 100,\n      decay: 0.91,\n    },.8);\n    this.fire(0.1, {\n      spread: 120,\n      startVelocity: 25,\n      decay: 0.92,\n    },.8);\n    this.fire(0.1, {\n      spread: 120,\n      startVelocity: 45,\n    },.2);\n    this.fire(0.25, \n      {spread: 26,\n      startVelocity: 55,})\n    this.fire(0.2, {\n      spread: 60,\n    },.2);\n    this.fire(0.35, {\n      spread: 100,\n      decay: 0.91,\n    },.2);\n    this.fire(0.1, {\n      spread: 120,\n      startVelocity: 25,\n      decay: 0.92,\n    },.2);\n    this.fire(0.1, {\n      spread: 120,\n      startVelocity: 45,\n    },.2);\n  }\n  \n  componentDidMount() {\n    // console.log(Object.keys(localStorage))\n    // console.log(localStorage)\n    setTimeout(()=>this.getUserInfo(),10)\n    if (localStorage.user){\n      let y = JSON.parse(localStorage.getItem(\"user\"))\n      this.setState({\n        user: y,\n        isSignedIn: true,\n      })\n    }\n  }\n\n  removeSolveFromState = (solveid, milliseconds) => {\n    //removes solve when user clicks \"remove\"\n    //on interface page \n    let solves = this.state.solves.filter(solve=> {\n      return solveid !== solve.solveid && milliseconds !== solve.milliseconds\n    })\n    this.setState({\n      solvesInterface: this.state.solvesInterface.filter(solve=>{\n        return solveid !== solve.solveid && milliseconds !== solve.milliseconds\n      }),\n      solves: solves\n    })\n    this.send(solves)\n    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n    if(offline){\n      localStorage.setItem(\"offlinesolves\", JSON.stringify({\"solves\":[...solves]}))\n    }\n  }\n\n  removeSolveFromSolvesState = (solveid, milliseconds) => {\n    //removes solve when user clicks \"remove\"\n    //on interface page \n    this.setState({\n      solves: this.state.solves.filter(solve=>{\n        return solveid !== solve.solveid && milliseconds !== solve.milliseconds\n      })\n    })\n  }\n\n  togglePlusTwo = (input) => {\n    let solves = []\n    for(const solve of this.state.solves) {\n      if (solve.solveid === input){\n        let x = !solve.isplustwo\n        solve[\"isplustwo\"] = x\n      }\n      solves = [...solves, solve]\n    }\n    this.setState({\n      solves: solves\n    })\n    this.send(solves)\n    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n    if(offline){\n      localStorage.setItem(\"offlinesolves\", JSON.stringify({\"solves\":[...solves]}))\n    }\n  }\n\n  toggleDNF = (input) => {\n    let xyz = []\n    for (const solve of this.state.solves){\n      if (solve.solveid === input){\n        solve[\"isdnf\"] = !solve.isdnf\n      }\n      xyz = [...xyz, solve]\n    }\n    this.setState({\n      solves: xyz\n    })\n    this.send(xyz)\n    let offline = JSON.parse(localStorage.getItem(\"offline\"))\n    if(offline){\n      localStorage.setItem(\"offlinesolves\", JSON.stringify({\"solves\":[...xyz]}))\n    }\n  }\n  \n  getNewUsername = (input) => {\n    this.setState({\n      user: { \n        username: input,\n        id: this.state.user.id\n      }\n    })\n    localStorage.setItem(\"user\", JSON.stringify(this.state.user))\n  }\n  \n  clearScramble = () => {\n    this.setState({\n      multiBLDScramble: \"\",\n      scramble: \"\",\n      megaminxScramble: \"\",\n    })\n  }\n  \n  test = () => {\n    console.log(this.state.tempSolves[0].solves)\n    // console.log(this.state.user.id)\n  }\n\n  get = () => {\n    fetch(\"https://blooming-hollows-98248.herokuapp.com/receive\",{\n      method: \"post\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n        id: this.state.usertemp,\n      })\n    }).then(response=>response.json())\n    .then(data=>{\n      this.setState({\n        tempSolves: data\n      })\n    })\n  }\n\n    render() {   \n      return (\n      <div> \n        {/* <button onClick={this.test}>test</button> */}\n        { this.state.isHome \n        ? \n        (this.state.isCreateNewSession ? \n          <NewSessionOptions \n          clearSessionInterfaceSolves={this.clearSessionInterfaceSolves}\n          clearScramble={this.clearScramble}\n          scramble={this.props.scramble}\n          solves={this.state.solves}\n          isNewSessionFunction={this.isNewSessionFunction}\n          isNewSession={this.state.isNewSession}\n          addToUniqueSessionsDB={this.addToUniqueSessionsDB}\n          getSessionNumber={this.getSessionNumber}\n          uniqueSessionsDB={this.state.uniqueSessionsDB}\n          getInterfaceSession={this.getInterfaceSession}\n          isSessionName={this.isSessionName} \n          createNewSession={this.createNewSession} \n          sessionNameOnChange={this.sessionName} \n          isBackgroundLight={this.state.isBackgroundLight}\n          />\n          :\n          <div>\n            <TimerInterface \n            isManualEnter={this.state.isManualEnter}\n            clearScramble={this.clearScramble}\n            isDisplayScrambleMedium={this.props.isDisplayScrambleMedium}\n            isDisplayScrambleSmall={this.props.isDisplayScrambleSmall}\n            multiBLDScramble={this.props.multiBLDScramble}\n            scrambleRegular={this.props.scrambleRegular}\n            megaminxScramble={this.props.megaminxScramble}\n            scramble={this.props.scramble}\n            isGetSolvesOnMount={this.state.isGetSolvesOnMount}\n            getSolvesOnMountPrevent={this.getSolvesOnMountPrevent}\n            getSessionNumber={this.getSessionNumber}\n            addToUniqueSessionsDBOnMount={this.addToUniqueSessionsDBOnMount}\n            getAllSolves={this.getAllSolves}\n            send={this.send}\n            removeSolveFromSolvesState={this.removeSolveFromSolvesState}\n            isTimerDisabled={this.state.isTimerDisabled}\n            isMobile={this.state.isMobile}\n            getInterfaceSession={this.getInterfaceSession}\n            getInterfaceSolvesSingle={this.getInterfaceSolvesSingle}\n            getInterfaceSolves={this.getInterfaceSolves}\n            solvesInterface={this.state.solvesInterface}\n            uniqueSessionsDB={this.state.uniqueSessionsDB}\n            isNewSessionFunction={this.isNewSessionFunction}\n            confettiLaunch={this.confettiLaunch}\n            solves={this.state.solves}\n            toggleDNF={this.toggleDNF}\n            togglePlusTwo={this.togglePlusTwo}\n            isConfirmSolveDelete={this.state.isConfirmSolveDelete}\n            removeSolveFromState={this.removeSolveFromState} \n            getSolveFromInterface={this.getSolveFromInterface} \n            isSessionName={this.state.isSessionName} \n            isSessionNameFunc={this.isSessionName} \n            getSessionNameOnLoad={this.getSessionNameOnLoad} \n            puzzleType={this.state.puzzleType} \n            sessionName={this.state.sessionName} \n            inspectionTime={this.state.inspectionTime} \n            isCountDownActivated={this.state.isCountDownActivated} \n            aoNum={this.state.aoNum} \n            aoNum2={this.state.aoNum2} \n            sessionInterface={this.state.sessionInterface} \n            getTheme={this.getTheme} \n            newSessionApp={this.newSessionApp} \n            sessions={this.state.sessions} \n            scrambleQuantity={this.state.scrambleQuantity} \n            isBackgroundLight={this.state.isBackgroundLight} \n            dashboard={this.dashboard} \n            id={this.state.user.id}  \n            username={this.state.user.username} \n            isSignedIn={this.state.isSignedIn} \n            signIn={this.signIn}\n            />\n          </div>\n          )\n        :\n        this.state.isDashboard ?\n          <Dashboard \n          manualEnter={this.manualEnter}\n          removeFromSolvesInterface={this.removeFromSolvesInterface}\n          scramble={this.props.scramble}\n          offlineState={this.state.offline}\n          send={this.send}\n          aoNum2={this.state.aoNum2} \n          disableTimer={this.disableTimer}\n          mobileStartStop={this.mobileStartStop}\n          aoNumChange={this.aoNumChange}\n          aoNumChange2={this.aoNumChange2}\n          getNewUsername={this.getNewUsername}\n          addToUniqueSessionsDB={this.addToUniqueSessionsDB}\n          inspection={this.inspection}\n          getSessionNameOnLoad={this.getSessionNameOnLoad}\n          isConfirmSessionDelete={this.state.isConfirmSessionDelete}\n          isConfirmSolveDelete={this.state.isConfirmSolveDelete}\n          confirmSessionDelete={this.confirmSessionDelete}\n          confirmSolveDelete={this.confirmSolveDelete} \n          getSolvesFromImport={this.getSolvesFromImport} \n          getSolvesFromImportManual={this.getSolvesFromImportManual} \n          removeFromSolves={this.removeFromSolves} \n          solves={this.state.solves} \n          changeInspectionTime={this.changeInspectionTime}\n          inspectionTimePlus={this.inspectionTimePlus} \n          inspectionTimeMinus={this.inspectionTimeMinus} \n          inspectionTime={this.state.inspectionTime} \n          isCountDownActivated={this.isCountDownActivated} \n          aoNum={this.state.aoNum} \n          sessionInterface={this.state.sessionInterface} \n          getSessionNumber={this.getSessionNumber} \n          sessions={this.state.sessions} \n          getInterfaceSession={this.getInterfaceSession} \n          removeFromUniqueSessionsDB={this.removeFromUniqueSessionsDB} \n          uniqueSessionsDB={this.state.uniqueSessionsDB} \n          loadPastSessionSolveData={this.loadPastSessionSolveData} \n          scrambleQuantity={this.state.scrambleQuantity} \n          scrambleQuantityMinus={this.scrambleQuantityMinus}  \n          scrambleQuantityPlus={this.scrambleQuantityPlus} \n          signout={this.signout} \n          signedIn={this.signedIn} \n          light={this.light} \n          dark={this.dark}  \n          isBackgroundLight={this.state.isBackgroundLight}  \n          signIn={this.dashboard} \n          loadUser={this.loadUser} \n          username={this.state.user.username} \n          id={this.state.user.id} \n          />\n        :\n        (this.state.isRegistered ?\n          <Register  \n          addToUniqueSessionsDB={this.addToUniqueSessionsDB}\n          clearSolvesState={this.clearSolvesState}\n          isBackgroundLight={this.state.isBackgroundLight} \n          signedIn={this.signedIn} \n          signIn={this.signIn} \n          register={this.register} \n          loadUser={this.loadUser}\n          />\n          :\n          <SignIn \n          clearScramble={this.clearScramble}\n          user={this.state.user} \n          isBackgroundLight={this.state.isBackgroundLight}  \n          signedIn={this.signedIn} \n          signIn={this.signIn} \n          loadUser={this.loadUser} \n          register={this.register}\n          />\n        )\n      }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\"\nimport App from \"./App\";\n\nconst twotwo = [\n  [\"R\", \"R'\", \"R2\"], \n  [\"U\", \"U'\", \"U2\"], \n  [\"F\", \"F'\", \"F2\"],\n]\n\nconst twothree = [\n  [\"R\", \"R'\", \"R2\"], \n  [\"L\", \"L'\", \"L2\"], \n  [\"U\", \"U'\", \"U2\"], \n  [\"D\", \"D'\", \"D2\"],\n  [\"B\", \"B'\", \"B2\"], \n  [\"F\", \"F'\", \"F2\"],\n]\n\nconst fourbyfour = [\n  [\"R\", \"R'\", \"R2\", \"Rw\", \"Rw'\", \"Rw2\"],\n  [\"F\", \"F'\", \"F2\", \"Fw\", \"Fw'\", \"Fw2\"],\n  [\"U\", \"U'\", \"U2\", \"Uw\", \"Uw'\", \"Uw2\"], \n  [\"L\", \"L'\", \"L2\"], \n  [\"D\", \"D'\", \"D2\"],\n  [\"B\", \"B'\", \"B2\"], \n]\n\nconst fourfive = [\n  [\"R\", \"R'\", \"R2\", \"Rw\", \"Rw'\", \"Rw2\"],\n  [\"L\", \"L'\", \"L2\", \"Lw\", \"Lw'\", \"Lw2\"], \n  [\"U\", \"U'\", \"U2\", \"Uw\", \"Uw'\", \"Uw2\"], \n  [\"D\", \"D'\", \"D2\", \"Dw\", \"Dw'\", \"Dw2\"],\n  [\"B\", \"B'\", \"B2\", \"Bw\", \"Bw'\", \"Bw2\"], \n  [\"F\", \"F'\", \"F2\", \"Fw\", \"Fw'\", \"Fw2\"],\n]\n  \nconst sixseven = [\n  [\"R\", \"R'\", \"R2\", \"Rw\", \"Rw'\", \"Rw2\", \"3Rw\", \"3Rw'\", \"3Rw2\"],\n  [\"L\", \"L'\", \"L2\", \"Lw\", \"Lw'\", \"Lw2\", \"3Lw\", \"3Lw'\", \"3Lw2\"], \n  [\"U\", \"U'\", \"U2\", \"Uw\", \"Uw'\", \"Uw2\", \"3Uw\", \"3Uw'\", \"3Uw2\"],  \n  [\"D\", \"D'\", \"D2\", \"Dw\", \"Dw'\", \"Dw2\", \"3Dw\", \"3Dw'\", \"3Dw2\"],\n  [\"B\", \"B'\", \"B2\", \"Bw\", \"Bw'\", \"Bw2\", \"3Bw\", \"3Bw'\", \"3Bw2\"], \n  [\"F\", \"F'\", \"F2\", \"Fw\", \"Fw'\", \"Fw2\", \"3Fw\", \"3Fw'\", \"3Fw2\"],\n]\n  \nconst pyraminxNotation = [\n  [\"U\", \"U'\"],\n  [\"L\", \"L'\"],\n  [\"R\", \"R'\"],\n  [\"B\", \"B'\"]\n]\n\nconst pyraminxNotationEnd = [\n  [\"u\", \"u'\"],\n  [\"l\", \"l'\"],\n  [\"r\", \"r'\"],\n  [\"b\", \"b'\"]\n]\n  \nconst skewb = [\n  [\"U\", \"U'\"],\n  // [\"F\", \"F'\"],\n  [\"B\", \"B'\"],\n  [\"L\", \"L'\"],\n  [\"R\", \"R'\"],\n]\n\nclass Scramble extends Component{\n\n\n    state = {\n        isDisplayScrambleMedium: false,\n        isDisplayScrambleSmall: false,\n        multiBLDScramble: \"\",\n        scramble: \"\",\n        megaminxScramble: \"\",\n    }\n    \n    scramble = (input) => {\n        //generates scramble\n        let scramble = \"\"\n        if (input){\n          let scrambleLength \n          if (input===\"3x3\"){\n            scrambleLength=23\n            this.setState({\n              isDisplayScrambleMedium: false,\n              isDisplayScrambleSmall: false\n            })\n          }else if (input===\"3x3 BLD\"){\n            scrambleLength=23\n            this.setState({\n              isDisplayScrambleMedium: false,\n              isDisplayScrambleSmall: false\n            })\n          }else if (input===\"2x2\"){\n            scrambleLength=9\n            this.setState({\n              isDisplayScrambleMedium: false,\n              isDisplayScrambleSmall: false\n            })\n          }else if (input===\"4x4\"||input===\"4x4 BLD\"){\n            this.setState({\n              isDisplayScrambleMedium: true,\n              isDisplayScrambleSmall: true\n            })\n            scrambleLength=45\n          }else if (input===\"5x5\"||input===\"5x5 BLD\"){\n            scrambleLength=60\n            this.setState({\n              isDisplayScrambleMedium: true,\n              isDisplayScrambleSmall: true\n            })\n          }else if (input===\"6x6\"){\n            scrambleLength=80\n            this.setState({\n              isDisplayScrambleSmall: true\n            })\n          }else if (input===\"7x7\"){\n            scrambleLength=100\n            this.setState({\n              isDisplayScrambleSmall: true\n            })\n          }else if (input===\"Skewb\"){\n            scrambleLength=8\n            this.setState({\n              isDisplayScrambleMedium: false,\n              isDisplayScrambleSmall: false\n            })\n          }else if (input===\"Square-1\"){\n            scrambleLength=10\n            this.setState({\n              isDisplayScrambleMedium: false,\n              isDisplayScrambleSmall: false\n            })\n          }else if (input===\"Pyraminx\"){\n            scrambleLength=9\n            this.setState({\n              isDisplayScrambleMedium: false,\n              isDisplayScrambleSmall: false\n            })\n          }else if (input===\"3x3 OH\"){\n            scrambleLength=23\n            this.setState({\n              isDisplayScrambleMedium: false,\n              isDisplayScrambleSmall: false\n            })\n          }\n          let pastScrambles = {\n            pastScramble: null,\n            pastScramble2: null,\n          }\n          let pyraminxEnd = \"\"\n            let pyraminxNumber = Math.round(Math.random()*4)\n            for (let i = pyraminxNumber;i>0;i--){\n              const fourfour = [0,1,2,3]\n              if (pastScrambles.pastScramble !== null){\n                let i = fourfour.indexOf(pastScrambles.pastScramble)\n                fourfour.splice(i, 1)\n              }\n              if (pastScrambles.pastScramble2 !== 7){\n                let ind = fourfour.indexOf(pastScrambles.pastScramble2)\n                fourfour.splice(ind, 1)\n              }\n              let first2 =  fourfour[Math.floor(Math.random()*fourfour.length)]\n              let second2 = Math.floor(Math.random()*2)\n              pyraminxEnd  += pyraminxNotationEnd[first2][second2]\n              pyraminxEnd  += \" \"\n              pastScrambles[\"pastScramble2\"] = pastScrambles.pastScramble\n              pastScrambles[\"pastScramble\"] = first2\n            }\n          while (scrambleLength > 0) {\n            const twofour = [0,1,2]\n              const onefour = [0,1,2,3,4,5]\n              const fourfour = [0,1,2,3]\n              scrambleLength--\n              let second = Math.floor(Math.random()*3)\n              let first =  twofour[Math.floor(Math.random()*twofour.length)]\n              if(input===\"2x2\"){\n                if (pastScrambles.pastScramble !== null){\n                  let i = twofour.indexOf(pastScrambles.pastScramble)\n                  twofour.splice(i, 1)\n                  first =  twofour[Math.floor(Math.random()*twofour.length)]\n                }\n                scramble += twotwo[first][second] \n                pastScrambles[\"pastScramble\"] = first\n              }\n              if (input===\"3x3\" || input===\"3x3 BLD\" ||input===\"3x3 OH\"){\n                if (pastScrambles.pastScramble !== null){\n                  let i = onefour.indexOf(pastScrambles.pastScramble)\n                  onefour.splice(i, 1)\n                }\n                if (pastScrambles.pastScramble !== null){\n                  let i\n                  if (pastScrambles.pastScramble===0){\n                    i = onefour.indexOf(1)\n                    onefour.splice(i,1)\n                  }\n                  if (pastScrambles.pastScramble===1){\n                    i = onefour.indexOf(0)\n                    onefour.splice(i,1)\n                  }\n                  if (pastScrambles.pastScramble===2){\n                    i = onefour.indexOf(3)\n                    onefour.splice(i,1)\n                  }\n                  if (pastScrambles.pastScramble===3){\n                    i = onefour.indexOf(2)\n                    onefour.splice(i,1)\n                  }\n                  if (pastScrambles.pastScramble===4){\n                    i = onefour.indexOf(5)\n                    onefour.splice(i,1)\n                  }\n                  if (pastScrambles.pastScramble===5){\n                    i = onefour.indexOf(4)\n                    onefour.splice(i,1)\n                  }\n                }\n                if (pastScrambles.pastScramble2 !== 7){\n                  let ind = onefour.indexOf(pastScrambles.pastScramble2)\n                  if(onefour.includes(ind)){\n                    onefour.splice(ind, 1)\n                  }\n                }\n    \n                if (pastScrambles.pastScramble2 !== null){\n                  let i\n                  if (pastScrambles.pastScramble2===0){\n                    i = onefour.indexOf(1)\n                  }\n                  if (pastScrambles.pastScramble2===1){\n                    i = onefour.indexOf(0)\n                  }\n                  if (pastScrambles.pastScramble2===2){\n                    i = onefour.indexOf(3)\n                  }\n                  if (pastScrambles.pastScramble2===3){\n                    i = onefour.indexOf(2)\n                  }\n                  if (pastScrambles.pastScramble2===4){\n                    i = onefour.indexOf(5)\n                  }\n                  if (pastScrambles.pastScramble2===5){\n                    i = onefour.indexOf(4)\n                  }\n                  if(onefour.includes(i)){\n                    onefour.splice(i,1)\n                  }\n                }\n                first =  onefour[Math.floor(Math.random()*onefour.length)]\n                scramble += twothree[first][second] \n                pastScrambles[\"pastScramble2\"] = pastScrambles.pastScramble\n                pastScrambles[\"pastScramble\"] = first\n              }\n\n\n              \n              if (input===\"4x4\" || input===\"4x4 BLD\"){\n                if (pastScrambles.pastScramble !== null){\n                  let a = onefour.indexOf(pastScrambles.pastScramble)\n                  onefour.splice(a, 1)\n                }\n                if (pastScrambles.pastScramble2 !== 7){\n                  let b = onefour.indexOf(pastScrambles.pastScramble2)\n                  onefour.splice(b, 1)\n                }\n                first =  onefour[Math.floor(Math.random()*onefour.length)]\n                if(first === 0||first === 1||first === 2){\n                  second = Math.floor(Math.random()*6)\n                }else{\n                  second = Math.floor(Math.random()*3)\n                }\n                scramble += fourbyfour[first][second]\n                scramble += \" \"\n                pastScrambles[\"pastScramble2\"] = pastScrambles.pastScramble\n                pastScrambles[\"pastScramble\"] = first\n              }\n              if (input===\"5x5\" || input===\"5x5 BLD\"){\n                if (pastScrambles.pastScramble !== null){\n                  let a = onefour.indexOf(pastScrambles.pastScramble)\n                  onefour.splice(a, 1)\n                }\n                if (pastScrambles.pastScramble2 !== 7){\n                  let b = onefour.indexOf(pastScrambles.pastScramble2)\n                  onefour.splice(b, 1)\n                }\n                first =  onefour[Math.floor(Math.random()*onefour.length)]\n                second = Math.floor(Math.random()*6)\n                scramble += fourfive[first][second]\n                scramble += \" \"\n                pastScrambles[\"pastScramble2\"] = pastScrambles.pastScramble\n                pastScrambles[\"pastScramble\"] = first\n              }\n              if (input===\"6x6\"||input===\"7x7\"){\n                if (pastScrambles.pastScramble !== null){\n                  let c = onefour.indexOf(pastScrambles.pastScramble)\n                  onefour.splice(c, 1)\n                }\n                if (pastScrambles.pastScramble2 !== 7){\n                  let d = onefour.indexOf(pastScrambles.pastScramble2)\n                  onefour.splice(d, 1)\n                }\n                first =  onefour[Math.floor(Math.random()*onefour.length)]\n                second = Math.floor(Math.random()*9)\n                scramble += sixseven[first][second]\n                pastScrambles[\"pastScramble2\"] = pastScrambles.pastScramble\n                pastScrambles[\"pastScramble\"] = first\n              }\n              if(input === \"Pyraminx\"){\n                if (pastScrambles.pastScramble !== null){\n                  let e = fourfour.indexOf(pastScrambles.pastScramble)\n                  fourfour.splice(e, 1)\n                }\n                if (pastScrambles.pastScramble2 !== 7){\n                  let f = fourfour.indexOf(pastScrambles.pastScramble2)\n                  fourfour.splice(f, 1)\n                }\n                first =  fourfour[Math.floor(Math.random()*fourfour.length)]\n                second = Math.floor(Math.random()*2)\n                scramble += pyraminxNotation[first][second]\n                pastScrambles[\"pastScramble2\"] = pastScrambles.pastScramble\n                pastScrambles[\"pastScramble\"] = first\n              }\n              if(input === \"Skewb\"){\n                if (pastScrambles.pastScramble !== null){\n                  let g = fourfour.indexOf(pastScrambles.pastScramble)\n                  fourfour.splice(g, 1)\n                }\n                if (pastScrambles.pastScramble2 !== 7){\n                  let h = fourfour.indexOf(pastScrambles.pastScramble2)\n                  fourfour.splice(h, 1)\n                }\n                first =  fourfour[Math.floor(Math.random()*fourfour.length)]\n                second = Math.floor(Math.random()*2)\n                scramble += skewb[first][second]\n                pastScrambles[\"pastScramble2\"] = pastScrambles.pastScramble\n                pastScrambles[\"pastScramble\"] = first\n              }\n              scramble += \" \" \n            }\n            if (input===\"Clock\") {\n              this.setState({\n                isDisplayScrambleMedium: true,\n                isDisplayScrambleSmall: true\n              })\n              let end = Math.round(Math.random()*4)\n              let endOptions = [\"UR\", \"DR\", \"DL\", \"UL\"]\n              scramble += \"UR\"\n              scramble+= this.clockPuzzle()\n              scramble += \"DR\"\n              scramble+= this.clockPuzzle()\n              scramble += \"UR\"\n              scramble+= this.clockPuzzle()\n              scramble += \"DL\"\n              scramble+= this.clockPuzzle()\n              scramble += \"UL\"\n              scramble+= this.clockPuzzle()\n              scramble += \"U\"\n              scramble+= this.clockPuzzle()\n              scramble += \"R\"\n              scramble+= this.clockPuzzle()\n              scramble += \"D\"\n              scramble+= this.clockPuzzle()\n              scramble += \"L\"\n              scramble+= this.clockPuzzle()\n              scramble += \"ALL\"\n              scramble+= this.clockPuzzle()\n              scramble += \"y2 \"\n              scramble += \"U\"\n              scramble+= this.clockPuzzle()\n              scramble += \"R\"\n              scramble+= this.clockPuzzle()\n              scramble += \"D\"\n              scramble+= this.clockPuzzle()\n              scramble += \"L\"\n              scramble+= this.clockPuzzle()\n              scramble += \"ALL\"\n              scramble+= this.clockPuzzle()\n              if (end===3){\n                for (const letter of endOptions){\n                  scramble+= letter\n                  scramble += \" \"\n                }\n              }\n              if (end===2){\n                endOptions.splice(Math.round(Math.random()*3))\n                for (const letter of endOptions){\n                  scramble+= letter\n                  scramble += \" \"\n                }\n              }\n              if (end===1){\n                endOptions.splice(Math.round(Math.random()*3))\n                endOptions.splice(Math.round(Math.random()*2))\n                for (const letter of endOptions){\n                  scramble+= letter\n                  scramble += \" \"\n                }\n              }\n            }\n          \n          if (input===\"Square-1\"){\n            let arrayTop = []\n            let arrayBottom = []\n            let topRunningTotal = 0\n            let bottomRunningTotal = 0\n            let firstValueTop= [0, 1, 3, 4, 6, -2, -3, -5]\n            let valueTop = [1, 4, -2, -5]\n            let valueTop2 = [0, 3, 6, -3]\n            let valueBottomA = [0, 3, 6, -3]\n            let valueBottomB= [2, 5, -1, -4]\n            let one = firstValueTop[Math.floor(Math.random()*8)]\n            topRunningTotal+=one\n            let two\n            if (valueTop.includes(one)){\n              two = valueBottomA[Math.floor(Math.random()*4)]\n            }else if (valueTop2.includes(one)){\n              two = valueBottomB[Math.floor(Math.random()*4)]\n            }\n            bottomRunningTotal+=two\n            arrayTop.push(one)\n            arrayBottom.push(two)\n            \n            let valueTop3 = [0, 1, 3, 4, 6, -2, -3, -5]\n            let valueTop4 = [0,2,3,5,6,-1,-3,-4] \n            for (let i = 5; i>0; i--){\n              //top flush bottom not\n              let valueBottom = [0, 3, 6,-3]\n              //top and bottom not flush\n              let valueBottom2 = [1, 4, -2,-5]\n              //top and bottoma flush\n              let valueBottom3 = [-1, -4, 2, 5]\n              //top not flush bottom is\n              let valueBottom4 = [0, 3,-3, 6]\n              if (topRunningTotal%3===0){\n                one = valueTop3[Math.floor(Math.random()*8)]\n              }else if (topRunningTotal%3!==0){\n                one = valueTop4[Math.floor(Math.random()*7)]\n              }\n              topRunningTotal+=one\n              arrayTop.push(one)\n              if(bottomRunningTotal%3===0){\n                if (topRunningTotal%3!==0){\n                  if (one===0){\n                    valueBottom4.shift()\n                  }\n                  if (one===6){\n                    valueBottom4.pop()\n                  }\n                  two = valueBottom4[Math.floor(Math.random()*valueBottom4.length)]\n                }else if (topRunningTotal%3===0){\n                  two = valueBottom3[Math.floor(Math.random()*4)]\n                }\n              }else if(bottomRunningTotal%3!==0){\n                if (topRunningTotal%3!==0){\n                  two = valueBottom2[Math.floor(Math.random()*4)]\n                }else if (topRunningTotal%3===0){\n                  two = valueBottom[Math.floor(Math.random()*4)]\n                }\n              }\n              arrayBottom.push(two)\n              bottomRunningTotal+=two\n            }\n      \n            let scrambleEnd = \"\"\n      \n            if(topRunningTotal%3!==0 && bottomRunningTotal%3===0){\n              arrayTop.push(-1)\n              arrayBottom.push(0)\n              topRunningTotal-=1\n              let scrambleOptions = [\"(3,0)/ (2,-3)/ (4,-3)/ (3,-3)/ (1,-3)\", \"(-3,6)/ (0,1)/ (-4,0)/ (2,2)\", \"(-3,6)/ (0,1)/ (-4,0)/ (2,2)/ (2,-3)\",\n              \"(3,0)/ (2,-3)/ (4,-3)/ (3,-3)\", \"(3,-3)/ (-3,6)/ (-5,0)/ (-1,-3)/ (1,0)\", \"(3,-3)/ (-3,6)/ (-5,0)/ (-1,-3)\", \"(3,0)/ (1,0)/ (2,-1)/ (-3,4)/ (5,0)\",\n              \"(3,0)/ (1,0)/ (2,-1)/ (-3,4)\", \"(6,3)/ (3,0)/ (-2,2)/ (0,2)/ (-2,-2)\", \"(6,3)/ (3,0)/ (-2,2)/ (0,2)/ (-2,0)\", \"(-3,0)/ (-2,-1)/ (-4,0)/ (0,3)/ (2,6)\",\n              \"(6,3)/ (3,0)/ (-2,2)/ (0,2)/ (5,4)\", \"(6,3)/ (3,0)/ (-2,2)/ (0,2)\", \"(-3,0)/ (-2,-1)/ (-4,0)/ (0,3)\", \"(-3,0)/ (-2,-1)/ (-4,0)/ (0,3)/ (-2,3)\",]\n              scrambleEnd+=scrambleOptions[Math.floor(Math.random()*scrambleOptions.length)]\n            }else if(bottomRunningTotal%3!==0 && topRunningTotal%3===0){\n              arrayTop.push(1)\n              arrayBottom.push(0)\n              topRunningTotal+=1\n              let scrambleOptions2 = [\"(3,0)/ (2,-3)/ (0,-2)/ (6,-2)/ (2,-4)\", \"(3,0)/ (2,-3)/ (0,-2)/ (6,-2)\", \"(3,0)/ (2,-3)/ (4,-2)/ (2,0)/ (0,-2)\",\n              \"(0,3)/ (2,1)/ (3,-2)/ (1,-4)/ (2,0)\", \"(0,3)/ (2,1)/ (3,-2)/ (1,-4)\", \"(0,3)/ (-4,1)/ (2,-2)/ (-2,6)/ (-4,0)\", \"(3,3)/ (2,-3)/ (4,0)/ (-2,2)/ (-4,1)\",\n              \"(3,3)/ (2,-3)/ (4,0)/ (-2,2)\", \"(3,3)/ (-4,0)/ (1,5)/ (5,-1)/ (-3,0)\", \"(6,3)/ (-2,3)/ (2,2)/ (6,0)/ (2,1)\", \"(6,3)/ (-2,3)/ (2,2)/ (6,0)\",\n              \"(6,3)/ (-2,3)/ (-4,2)/ (0,1)/ (-4,0)\", \"(6,3)/ (-2,3)/ (-4,2)/ (0,1)\", \"(3,6)/ (-2,3)/ (5,-4)/ (1,-3)/ (-3,3)\", \"(3,6)/ (-2,3)/ (5,-4)/ (1,-3)\",]\n              scrambleEnd+=scrambleOptions2[Math.floor(Math.random()*scrambleOptions2.length)]\n            }\n    \n            for (let i = 0;i<7;i++){\n              scramble+=\"(\"+ arrayTop[i] + \",\" + arrayBottom[i] + \")\" \n              scramble+= \"/ \"\n            }\n            scramble+=scrambleEnd\n          }\n    \n          let megaminxScramble = \"\"\n          if (input===\"Megaminx\"){\n            let letters = [\"D\", \"R\", \"D\", \"R\", \"D\", \"R\", \"D\", \"R\", \"D\", \"R\", \"U\"]\n            for (let i = 7; i>0; i--){\n              for (const letter of letters){\n                let chance = Math.ceil(Math.random()*2)\n                if (letter===\"D\" || letter===\"R\"){\n                  megaminxScramble += letter \n                  if (chance === 1){\n                    megaminxScramble += \"++ \"\n                  }else {\n                    megaminxScramble += \"-- \"\n                  }\n                }\n                if (letter===\"U\"){\n                  megaminxScramble += letter \n                  if (chance===1){\n                    megaminxScramble += \"'\"\n                  }else{\n                    megaminxScramble += \"\" \n                  }\n                }\n              }\n              megaminxScramble += \"\\n\"\n            }\n          }\n          if (input===\"Pyraminx\"){\n            scramble+=pyraminxEnd\n          }\n          let multiBLD = \"\"\n          if (input===\"Multi-BLD\"){\n            let pastScrambleObj = {\n              pastScramble: null,\n              pastScramble2: null\n            }\n            let countMultiBLD = 1\n            while (countMultiBLD < 6) {\n              let y = 23\n              multiBLD += countMultiBLD + \")\"\n              multiBLD += \" \"\n              while(y>0){\n                const onefour = [0,1,2,3,4,5]\n                if (pastScrambleObj.pastScramble !== null){\n                  let i2 = onefour.indexOf(pastScrambleObj.pastScramble)\n                  onefour.splice(i2, 1)\n                }\n                if (pastScrambleObj.pastScramble2 !== null){\n                  let ind2 = onefour.indexOf(pastScrambleObj.pastScramble2)\n                  if (ind2 !== -1){\n                    onefour.splice(ind2, 1)\n                  }\n                }\n                let first2 =  onefour[Math.floor(Math.random()*onefour.length)]\n                let second2 = Math.floor(Math.random()*3)\n                multiBLD += twothree[first2][second2]\n                multiBLD += \" \"\n                pastScrambleObj[\"pastScramble2\"] = pastScrambleObj.pastScramble\n                pastScrambleObj[\"pastScramble\"] = first2\n                y--\n              }\n              multiBLD+= \"\\n\"\n              countMultiBLD++\n            }\n          }\n          this.setState({\n            multiBLDScramble: String(multiBLD),\n            scramble: String(scramble),\n            megaminxScramble: String(megaminxScramble),\n          })\n        }\n        return scramble\n      }\n    \n      clockPuzzle = () => {\n        let one = Math.ceil(Math.random()*1)\n        let two = Math.ceil(Math.random()*5)\n        let numbers = [1,2,3,4,5,6]\n        let scramble = \"\"\n        scramble += numbers[two]\n        if (one === 1){\n          scramble+= \"+ \"\n        }else{\n          scramble += \"- \"\n        }\n        return(scramble)\n      }\n\n    render(){\n        return(\n            <div>\n                <App \n                scramble={this.scramble}\n                isDisplayScrambleMedium={this.state.isDisplayScrambleMedium}\n                isDisplayScrambleSmall={this.state.isDisplayScrambleSmall}\n                multiBLDScramble={this.state.multiBLDScramble}\n                scrambleRegular={this.state.scramble}\n                megaminxScramble={this.state.megaminxScramble}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Scramble","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Scramble from './Scramble';\nimport * as serviceWorker from './serviceWorker';\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Scramble />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}